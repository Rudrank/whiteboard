{"version":3,"sources":["constants.ts","element/typeChecks.ts","math.ts","points.ts","element/bounds.ts","renderer/renderElement.ts","random.ts","element/mutateElement.ts","element/sizeHelpers.ts","element/newElement.ts","element/handlerRectangles.ts","element/collision.ts","element/resizeTest.ts","keys.ts","element/resizeElements.ts","element/textWysiwyg.tsx","element/textElement.ts","element/showSelectedShapeActions.ts","element/index.ts","i18n.ts","scene/scrollbars.ts","scene/selection.ts","scene/scroll.ts","scene/comparisons.ts","scene/zoom.ts","scene/globalScene.ts","utils.ts","components/TopErrorBoundary.tsx","is-mobile.tsx","appState.ts","colors.ts","renderer/renderScene.ts","renderer/roundRect.ts","scene/export.ts","clipboard.ts","data/restore.ts","data/blob.ts","data/json.ts","data/index.ts","data/localStorage.ts","components/Portal.tsx","shapes.tsx","history.ts","components/Popover.tsx","components/ContextMenu.tsx","actions/manager.tsx","components/ToolButton.tsx","components/icons.tsx","actions/register.ts","actions/actionDeleteSelected.tsx","zindex.ts","actions/actionZindex.tsx","actions/actionSelectAll.ts","actions/actionDuplicateSelection.tsx","components/ButtonSelect.tsx","components/ColorPicker.tsx","actions/actionProperties.tsx","actions/actionCanvas.tsx","actions/actionFinalize.tsx","components/ProjectName.tsx","actions/actionExport.tsx","actions/actionStyles.ts","components/HelpIcon.tsx","actions/actionMenu.tsx","gesture.ts","actions/actionHistory.tsx","components/Island.tsx","components/Stack.tsx","components/FixedSideContainer.tsx","components/LockIcon.tsx","components/Modal.tsx","components/Dialog.tsx","components/ExportDialog.tsx","components/LanguageList.tsx","components/HintViewer.tsx","components/Actions.tsx","components/Section.tsx","components/RoomDialog.tsx","components/LoadingMessage.tsx","components/MobileMenu.tsx","components/ErrorDialog.tsx","components/ShortcutsDialog.tsx","components/GitHubCorner.tsx","components/LayerUI.tsx","components/App.tsx","time_constants.ts","serviceWorker.tsx","index.tsx"],"names":["SHIFT_LOCKING_ANGLE","Math","PI","CURSOR_TYPE","POINTER_BUTTON","SCENE","EVENT","ENV","BROADCAST","CLASSES","isTextElement","element","type","isLinearElement","distanceBetweenPointAndSegment","x","y","x1","y1","x2","y2","C","D","lenSquare","xx","yy","param","dx","dy","hypot","rotate","angle","cos","sin","distance2d","xd","yd","isPathALoop","points","length","firstPoint","lastPoint","onSegment","p","q","r","max","min","orientation","val","doIntersect","p1","q1","p2","q2","o1","o2","o3","o4","getSizeFromPoints","xs","map","point","ys","width","height","rescalePoints","dimension","nextDimensionSize","prevPoints","prevDimValues","prevMaxDimension","prevMinDimension","prevDimensionSize","dimensionScaleFactor","nextMinDimension","Infinity","scaledPoints","prevPoint","value","currentDimension","scaledValue","translation","scaledPoint","getElementAbsoluteCoords","getLinearElementAbsoluteCoords","getDiamondPoints","topX","floor","rightX","rightY","getCurvePathOps","shape","console","log","set","sets","ops","getMinMaxXYFromCurvePathOps","transformXY","currentP","minX","minY","maxX","maxY","reduce","limits","op","data","p3","p0","equation","t","idx","pow","getShapeForElement","getElementBounds","cx","cy","getLinearElementRotatedBounds","x11","y11","x12","y12","x22","y22","x21","y21","w","h","ww","hh","getCommonBounds","elements","forEach","getResizedElementAbsoluteCoords","nextWidth","nextHeight","rough","generator","curve","generateRoughOptions","DASHARRAY_DASHED","DASHARRAY_DOTTED","drawElementOnCanvas","rc","context","globalAlpha","opacity","draw","Error","font","fillStyle","strokeColor","textAlign","lines","text","replace","split","lineHeight","verticalOffset","baseline","horizontalOffset","i","fillText","elementWithCanvasCache","WeakMap","shapeCache","get","invalidateShapeForElement","delete","options","seed","strokeLineDash","strokeStyle","undefined","disableMultiStroke","strokeWidth","fillWeight","hachureGap","roughness","stroke","fill","backgroundColor","curveFitting","generateElement","sceneState","rectangle","topY","bottomX","bottomY","leftX","leftY","polygon","ellipse","x3","y3","x4","y4","prevOp","distance","nx","ny","arrowLength","total","px","py","minSize","getArrowPoints","push","line","zoom","prevElementWithCanvas","shouldRegenerateBecauseZoom","canvasZoom","shouldCacheIgnoreZoom","elementWithCanvas","canvas","document","createElement","getContext","canvasOffsetX","canvasOffsetY","window","devicePixelRatio","CANVAS_PADDING","translate","scale","generateElementCanvas","renderElement","renderOptimizations","scrollX","scrollY","fillRect","drawImage","drawElementFromCanvas","shiftX","shiftY","random","Random","Date","now","randomInteger","next","randomId","nanoid","mutateElement","updates","key","version","versionNonce","globalSceneState","informMutation","newElementWith","isInvisiblySmallElement","getPerfectElementSize","elementType","absWidth","abs","absHeight","lockedAngle","round","atan","tan","sign","normalizeDimensions","_newElementBase","rest","id","isDeleted","newTextElement","opts","metrics","measureText","duplicateElement","overrides","copy","_duplicateElement","depth","Object","prototype","toString","call","tmp","constructor","create","getPrototypeOf","hasOwnProperty","Array","isArray","k","arr","assign","handleSizes","mouse","pen","touch","OMIT_SIDES_FOR_MULTIPLE_ELEMENTS","e","s","n","rotation","generateHandler","handlerRectanglesFromCoords","pointerType","omitSides","size","handlerWidth","handlerHeight","handlerMarginX","handlerMarginY","dashedLineMargin","centeringOffset","handlers","nw","ne","sw","se","minimumSizeForEightHandlers","handlerRectangles","isElementDraggableFromInside","appState","dragFromInside","selectedElementIds","hitTest","lineThreshold","tx","ty","a","b","ex","ey","rx","ry","qx","qy","relX","relY","some","subshape","hitTestCurveInside","hitTestRoughShape","warn","drawable","operation","vertices","extreme","Number","MAX_SAFE_INTEGER","count","current","isPointInPolygon","pointsOnBezierCurves","mx","my","sqrt","pointInBezierEquation","isInHandlerRect","handler","getElementWithResizeHandler","result","resizeHandle","rotationHandler","filter","keys","resizeTest","getResizeHandlerFromCoords","find","RESIZE_CURSORS","getCursorForResizingElement","resizingElement","shouldSwapCursors","cursor","index","indexOf","rotateResizeCursor","isDarwin","test","navigator","platform","KEYS","isArrowKey","keyCode","getResizeCenterPointKey","event","altKey","which","getResizeWithSidesSameLengthKey","shiftKey","rotateSingleElement","pointerX","pointerY","isAngleLocking","atan2","resizeSingleTwoPointElement","resizeArrowDirection","pointOrigin","pointEnd","rescalePointsInElement","resizeSingleElement","sidesWithSameLength","isResizeFromCenter","rotatedX","rotatedY","scaleX","scaleY","nextX1","nextY1","nextX2","nextY2","deltaX1","deltaY1","deltaX2","deltaY2","rescaledPoints","finalX1","finalY1","finalX2","finalY2","flipDiffX","flipDiffY","side","needsRotation","getFlipAdjustment","nextElementX","nextElementY","adjustXYWithRotation","isFinite","resizeMultipleElements","origX1","origY1","origX2","origY2","canResizeMutlipleElements","every","includes","trimText","trim","textWysiwyg","initText","onChange","onSubmit","onCancel","editable","contentEditable","dir","tabIndex","innerText","dataset","degree","stopEvent","stopPropagation","handleSubmit","isDestroyed","onblur","onpaste","oninput","onkeydown","removeEventListener","onPointerDown","rebindBlur","unbindUpdate","body","removeChild","cleanup","style","color","position","top","left","transform","display","padding","outline","whiteSpace","minHeight","backfaceVisibility","selection","getSelection","rangeCount","deleteFromDocument","clipboardData","getData","span","range","getRangeAt","insertNode","removeAllRanges","setStart","childNodes","setEnd","addRange","preventDefault","error","isComposing","setTimeout","focus","target","HTMLElement","closest","isWritableElement","addEventListener","addCallback","editingElement","getElementsIncludingDeleted","appendChild","selectNode","redrawTextBoundingBox","showSelectedShapeActions","Boolean","getSelectedElements","getElementMap","acc","getDrawingVersion","el","getNonDeletedElements","languages","lng","label","require","rtl","currentLanguage","fallbackLanguage","setLanguage","newLng","language","documentElement","languageDetector","cacheUserLanguage","getLanguage","findPartsForData","parts","part","path","replacement","LanguageDetector","init","languageUtils","formatLanguageCode","isWhitelisted","checkWhitelist","detect","isOverScrollBars","scrollBars","isOverHorizontalScrollBar","isOverVerticalScrollBar","horizontal","vertical","scrollBar","deleteSelectedElements","isSomeElementSelected","normalizeScroll","pos","calculateScrollCenter","centerX","centerY","innerWidth","innerHeight","hasBackground","hasStroke","hasText","getElementAtPosition","hitElement","getZoomOrigin","getNormalizedZoom","normalizedZoom","parseFloat","toFixed","_elements","callbacks","Set","this","getElements","replaceAllElements","nextElements","callback","from","cb","has","add","SVG_NS","mockDateTime","getDateTime","date","year","getFullYear","month","getMonth","padStart","day","getDate","hr","getHours","getMinutes","capitalizeString","str","charAt","toUpperCase","slice","HTMLBRElement","HTMLTextAreaElement","HTMLInputElement","offsetWidth","offsetHeight","overflow","offsetTop","debounce","fn","timeout","lastArgs","handle","ret","args","clearTimeout","flush","node","createRange","selectNodeContents","resetCursor","setCursorForShape","isFullScreen","fullscreenElement","nodeName","getShortcutKey","shortcut","isMac","viewportCoordsToSceneCoords","clientX","clientY","zoomOrigin","sceneCoordsToViewportCoords","sceneX","sceneY","getGlobalCSSVariable","name","getComputedStyle","getPropertyValue","TopErrorBoundary","React","Component","state","hasError","sentryEventId","localStorage","render","errorSplash","props","children","componentDidCatch","errorInfo","_localStorage","entries","JSON","parse","Sentry","scope","setExtras","eventId","setState","stringify","selectTextArea","activeElement","select","templateStrFn","default","encodeURIComponent","open","className","onClick","location","reload","clear","role","aria-label","aria-hidden","createGithubIssue","rows","readOnly","createContext","IsMobileProvider","query","useRef","matchMedia","matches","addListener","removeListener","isMobile","setMobile","useState","useEffect","Provider","useIsMobile","useContext","getDefaultAppState","isLoading","errorMessage","draggingElement","multiElement","elementLocked","exportBackground","shouldAddWatermark","currentItemStrokeColor","oc","black","currentItemBackgroundColor","currentItemFillStyle","currentItemStrokeWidth","currentItemStrokeStyle","currentItemRoughness","currentItemOpacity","currentItemFont","currentItemTextAlign","viewBackgroundColor","white","cursorX","cursorY","cursorButton","scrolledOutside","username","isCollaborating","isResizing","isRotating","selectionElement","openMenu","lastPointerDownWith","collaborators","Map","showShortcutsDialog","zenModeEnabled","clearAppStatePropertiesForHistory","cleanAppStateForExport","shades","red","pink","grape","violet","indigo","blue","cyan","teal","green","lime","yellow","orange","canvasBackground","gray","elementBackground","elementStroke","colorsForClientId","clientId","sum","charCodeAt","backgrounds","colors","strokes","background","strokeRectWithRotation","strokeRect","renderScene","renderScrollbars","renderSelection","atLeastOneVisibleElement","normalizedCanvasWidth","normalizedCanvasHeight","clearRect","zoomTranslationX","zoomTranslationY","visibleElements","viewportWidth","viewportHeight","viewportWidthWithZoom","viewportHeightWithZoom","viewportWidthDiff","viewportHeightDiff","isVisibleElement","selectionColors","remoteSelectedElementIds","socketId","elementX1","elementY1","elementX2","elementY2","elementWidth","elementHeight","initialLineDash","getLineDash","lineWidth","lineDashOffset","dashedLinePadding","dashWidth","spaceWidth","setLineDash","locallySelectedElements","beginPath","arc","strokeCircle","remotePointerViewportCoords","remotePointerUsernames","isOutOfBounds","remotePointerButton","closePath","moveTo","lineTo","offsetX","offsetY","paddingHorizontal","paddingVertical","measure","measureHeight","actualBoundingBoxDescent","actualBoundingBoxAscent","elementsMinX","elementsMinY","elementsMaxX","elementsMaxY","safeArea","parseInt","bottom","right","isRTL","viewportMinX","viewportMinY","viewportMaxX","viewportMaxY","sceneMinX","sceneMinY","sceneMaxX","sceneMaxY","SCROLLBAR_MARGIN","getScrollBars","radius","quadraticCurveTo","roundRect","SCROLLBAR_WIDTH","renderSceneToSvg","rsvg","svgRoot","setAttribute","group","ownerDocument","createElementNS","fontSplit","d","fontFamily","fontSize","textAnchor","textContent","renderElementToSvg","exportToCanvas","exportPadding","createCanvas","tempCanvas","sceneElements","getWatermarkElement","textWidth","CLIPBOARD","PREFER_APP_CLIPBOARD","probablySupportsClipboardReadText","clipboard","probablySupportsClipboardWriteText","probablySupportsClipboardBlob","HTMLCanvasElement","async","getClipboardContent","readText","clipboardElements","getAppClipboard","copyTextToSystemClipboard","copied","writeText","getAttribute","textarea","border","margin","yPosition","pageYOffset","scrollTop","success","setSelectionRange","execCommand","remove","copyTextViaExecCommand","restore","savedElements","savedState","scrollToContent","loadFromBlob","blob","contents","Blob","Promise","resolve","reader","FileReader","readAsText","onloadend","readyState","DONE","defaultAppState","updateAppState","serializeAsJSON","source","origin","byteToHex","byte","getCollaborationLinkData","link","URL","hash","match","generateCollaborationLink","Uint8Array","crypto","getRandomValues","join","generateRandomID","subtle","generateKey","exportKey","generateEncryptionKey","pathname","getImportedKey","usage","importKey","alg","ext","key_ops","kty","encryptAESGEM","importedKey","iv","createIV","encrypt","exportCanvas","alert","tempSvg","innerHTML","rect","svg","exportToSvg","fileSave","outerHTML","fileName","svgroot","copyCanvasToClipboardAsSvg","toBlob","reject","write","ClipboardItem","copyCanvasToClipboardAsPng","json","encoded","TextEncoder","encode","encrypted","exportedKey","response","fetch","method","url","href","urlString","prompt","exportToBackend","loadScene","privateKey","ok","buffer","arrayBuffer","decrypted","decrypt","string","TextDecoder","decode","importFromBackend","history","replaceState","getItem","restoreFromLocalStorage","commitToHistory","Portal","app","socket","socketInitialized","roomID","roomKey","on","emit","restoreUserName","broadcastScene","INIT","clients","setCollaborators","close","isOpen","volatile","SHAPES","icon","viewBox","strokeLinecap","shapesShortcutKeys","flat","SceneHistory","recording","stateHistory","redoStack","getSnapshotForTest","generateEntry","lastCommittedPoint","pushEntry","newEntry","clearRedoStack","restoreEntry","entry","splice","redoOnce","entryToRestore","pop","undoOnce","currentEntry","resumeRecording","record","Popover","onCloseRequest","fitInViewport","popoverRef","useLayoutEffect","getBoundingClientRect","contains","unstable_batchedUpdates","ref","ContextMenu","onContextMenu","option","ContextMenuOption","action","contextMenuNode","getContextMenuNode","div","handleClose","unmountComponentAtNode","params","of","ActionManager","updater","getAppState","actions","renderAction","PanelComponent","updateData","formState","perform","registerAction","registerAll","handleKeyDown","values","sort","keyPriority","keyTest","executeAction","getContextMenuItems","actionFilter","contextMenuOrder","contextItemLabel","ToolButton","forwardRef","innerRef","useImperativeHandle","sizeCn","selected","visible","title","showAriaLabel","aria-keyshortcuts","data-testid","checked","keyBindingLabel","defaultProps","ACTIVE_ELEMENT_COLOR","createIcon","mirror","focusable","save","load","trash","palette","exportFile","zoomIn","zoomOut","done","menu","undo","redo","resetZoom","bringForward","sendBackward","bringToFront","sendToBack","strokeLinejoin","users","start","stop","back","marginLeft","clone","shield","register","concat","nextAppState","swap","indexA","indexB","moveOneLeft","indicesToMove","isSorted","moveOneRight","reversedIndicesToMove","moveAllLeft","leftMostElements","reverse","moveAllRight","rightMostElements","moveElements","func","direction","selectedIndices","deletedIndicesCache","len","getElementIndices","code","newElement","ButtonSelect","isValidColor","Option","keyBindings","Picker","onClose","showInput","firstItem","activeItem","gallery","colorInput","aria-modal","onKeyDown","nextIndex","toLowerCase","nativeEvent","stopImmediatePropagation","_color","currentTarget","onFocus","ColorInput","innerValue","setInnerValue","inputRef","changeColor","useCallback","inputValue","getColor","spellCheck","onBlur","ColorPicker","isActive","setActive","pickerButton","Suspense","fallback","changedColor","changeProperty","getFormValue","defaultValue","nonDeletedElements","attributes","getCommonAttributeOfSelectedElements","KEY_CODES","step","onWheel","deltaY","_","confirm","actionFinalize","scrollCenter","commonBounds","currentZoom","zoomX","zoomY","newZoom","calculateZoom","newElements","blur","multiPointElement","linePoints","ProjectName","handleFocus","handleBlur","removeSelection","makeEditable","suppressContentEditableWarning","data-type","serialized","userAgent","description","saveAsJSON","catch","loadedElements","loadedAppState","fileOpen","extensions","mimeTypes","loadFromJSON","then","message","copiedStyles","pastedElement","ICON","xmlns","HelpIcon","requestFullscreen","exitFullscreen","getCenter","pointers","allCoords","coords","getDistance","array","mapper","item","writeData","prevElements","prevElementMap","nextElementMap","nextElement","prevElement","testUndo","shift","Island","gap","align","justifyContent","alignItems","justifyItems","FixedSideContainer","ICONS","CHECKED","UNCHECKED","LockIcon","Modal","modalRoot","useBodyRoot","createPortal","aria-labelledby","labelledBy","maxWidth","maxHeight","overflowY","Dialog","islandRef","queryFocusableElements","focusableElements","querySelectorAll","currentIndex","findIndex","scales","defaultScale","ExportModal","actionManager","onExportToPng","onExportToSvg","onExportToClipboard","onExportToBackend","someElementIsSelected","setScale","exportSelected","setExportSelected","previewRef","exportedElements","previewNode","ExportDialog","modalIsShown","setModalIsShown","triggerButton","LanguageList","i18n","floating","Fragment","HintViewer","hint","multiMode","selectedElements","targetElement","getHints","SelectedShapeActions","targetElements","getTargetElement","isEditing","ShapesSwitcher","setAppState","ZoomActions","marginInlineStart","Section","heading","header","RoomModal","activeRoomLink","onUsernameChange","onRoomCreate","onRoomDestroy","onPressingEnter","roomLinkInput","htmlFor","onKeyPress","RoomDialog","collaboratorCount","setActiveRoomLink","LoadingMessage","MobileMenu","exportButton","onLockToggle","marginBottom","marginRight","ErrorDialog","Columns","flexDirection","flexWrap","Column","ShortcutIsland","caption","Shortcut","borderTop","flex","minWidth","shortcuts","ShortcutKey","isOr","wordBreak","borderRadius","boxSizing","Footer","marginTop","paddingTop","rel","ShortcutsDialog","GitHubCorner","memo","transformOrigin","toggleZenMode","renderExportDialog","createExporter","shouldRenderSelectedShapeActions","zIndex","renderFixedSideContainer","prev","getNecessaryObj","prevAppState","withBatchedUpdates","didTapTwice","tappedTwiceTimer","isHoldingSpace","isPanning","isDraggingScrollBar","currentScrollBars","lastPointerUp","gesture","lastCenter","initialDistance","initialScale","App","super","portal","lastBroadcastedOrReceivedSceneVersion","broadcastedElementVersions","removeSceneCallback","canvasOnlyActions","syncActionResult","res","unmounted","isNonDeletedElement","saveDebounced","onUnload","destroySocketClient","disableEvent","onFontLoaded","onSceneUpdated","initializeScene","URLSearchParams","search","jsonMatch","isCollaborationScene","scene","initializeSocketClient","showLoadingState","onResize","beforeUnload","returnValue","queueBroadcastAllElements","throttle","UPDATE","onCut","copyAll","onCopy","copyToAppClipboard","copyToClipboardAsPng","copyToClipboardAsSvg","onTapStart","resetTapTwice","touches","handleCanvasDoubleClick","pasteFromClipboard","elementUnderCursor","elementFromPoint","addElementsFromPaste","addTextFromPaste","selectShapeTool","elementsCenterX","elementsCenterY","obj","removePointer","pointerId","openPortal","pushState","closePortal","toggleLock","prevState","roomMatch","initialize","initializationTimer","updateScene","decryptedData","remoteElements","payload","localElementMap","socketIOClient","encryptedData","decodedData","decryptAESGEM","socketID","pointerCoords","button","user","pointer","off","broadcastMouseLocation","_broadcastSocketData","sceneType","syncAll","syncableElements","syncableElement","updateCurrentCursorPosition","HTMLSelectElement","findShapeByKey","update","selectedElement","startTextEditing","ctrlKey","metaKey","onKeyUp","onGestureStart","onGestureChange","onGestureEnd","setElements","centerIfPossible","elementAtPosition","textX","textY","isExistingTextElement","centerElementX","centerElementY","centerElementXInViewport","centerElementYInViewport","snappedToCenterPosition","getTextWysiwygSnappedToCenterPosition","elementCenterX","elementCenterY","wysiwygX","wysiwygY","handleTextWysiwyg","isExistingElement","handleCanvasPointerMove","savePointer","center","deltaX","scaleFactor","resetShouldCacheIgnoreZoomDebounced","isOverScrollBar","buttons","elementWithResizeHandler","handleCanvasPointerDown","persist","nextPastePrevented","isLinux","lastX","lastY","onPointerMove","preventNextPaste","PASTE","enableNextPaste","POINTER_UP","teardown","POINTER_MOVE","BLUR","passive","onPointerUp","originX","originY","setResizeHandle","nextResizeHandle","resizeOffsetXY","isResizingElements","draggingOccurred","hitElementWasAddedToSelection","getResizeOffsetXY","getResizeArrowDirection","selectedElementWasDuplicated","normalizeResizeHandle","resizeElements","elementsToAppend","duplicatedElement","simplify","newX","newY","elementsWithinSelection","selectionX1","selectionY1","selectionX2","selectionY2","getElementsWithinSelection","childEvent","_prevState","handleCanvasRef","WHEEL","handleWheel","TOUCH_START","handleCanvasOnDrop","file","dataTransfer","files","endsWith","handleCanvasContextMenu","MAX_STEP","delta","isNaN","setItem","exportedState","clearAppStateForLocalStorage","saveToLocalStorage","createRedoAction","canvasDOMWidth","canvasDOMHeight","canvasScale","canvasWidth","canvasHeight","saveUsernameToLocalStorage","onDoubleClick","onPointerCancel","onDrop","COPY","CUT","KEYDOWN","KEYUP","MOUSE_MOVE","RESIZE","UNLOAD","DRAG_OVER","DROP","fonts","GESTURE_START","GESTURE_CHANGE","GESTURE_END","BEFORE_UNLOAD","componentWillUnmount","componentDidUpdate","pointerViewportCoords","pointerUsernames","sockets","restoreUsernameFromLocalStorage","resetSelection","deleteElement","_element","updateElement","elementClickedInside","getElementContainingPosition","process","defineProperties","isLocalhost","hostname","registerValidSW","swUrl","config","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","SentryEnvHostnameMap","onlineEnv","dsn","environment","release","REACT_APP_GIT_SHA","ignoreErrors","integrations","SentryIntegrations","levels","rootElement","getElementById","ReactDOM","headers","contentType","status","ready","unregister","checkValidServiceWorker","info","registerServiceWorker","waitingServiceWorker","waiting","STATE_CHANGE","postMessage"],"mappings":"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","file":"static/js/main.211d78cc.chunk.js","sourcesContent":["export const DRAGGING_THRESHOLD = 10; // 10px\nexport const LINE_CONFIRM_THRESHOLD = 10; // 10px\nexport const ELEMENT_SHIFT_TRANSLATE_AMOUNT = 5;\nexport const ELEMENT_TRANSLATE_AMOUNT = 1;\nexport const TEXT_TO_CENTER_SNAP_THRESHOLD = 30;\nexport const SHIFT_LOCKING_ANGLE = Math.PI / 8;\nexport const CURSOR_TYPE = {\n  TEXT: \"text\",\n  CROSSHAIR: \"crosshair\",\n  GRABBING: \"grabbing\",\n  POINTER: \"pointer\",\n};\nexport const POINTER_BUTTON = {\n  MAIN: 0,\n  WHEEL: 1,\n  SECONDARY: 2,\n  TOUCH: -1,\n};\n\nexport enum SCENE {\n  INIT = \"SCENE_INIT\",\n  UPDATE = \"SCENE_UPDATE\",\n}\n\nexport enum EVENT {\n  COPY = \"copy\",\n  PASTE = \"paste\",\n  CUT = \"cut\",\n  KEYDOWN = \"keydown\",\n  KEYUP = \"keyup\",\n  MOUSE_MOVE = \"mousemove\",\n  RESIZE = \"resize\",\n  UNLOAD = \"unload\",\n  BLUR = \"blur\",\n  DRAG_OVER = \"dragover\",\n  DROP = \"drop\",\n  GESTURE_END = \"gestureend\",\n  BEFORE_UNLOAD = \"beforeunload\",\n  GESTURE_START = \"gesturestart\",\n  GESTURE_CHANGE = \"gesturechange\",\n  POINTER_MOVE = \"pointermove\",\n  POINTER_UP = \"pointerup\",\n  STATE_CHANGE = \"statechange\",\n  WHEEL = \"wheel\",\n  TOUCH_START = \"touchstart\",\n}\n\nexport const ENV = {\n  TEST: \"test\",\n  DEVELOPMENT: \"development\",\n};\n\nexport const BROADCAST = {\n  SERVER_VOLATILE: \"server-volatile-broadcast\",\n  SERVER: \"server-broadcast\",\n};\n\nexport const CLASSES = {\n  SHAPE_ACTIONS_MENU: \"App-menu__left\",\n};\n","import {\n  ExcalidrawElement,\n  ExcalidrawTextElement,\n  ExcalidrawLinearElement,\n} from \"./types\";\n\nexport function isTextElement(\n  element: ExcalidrawElement | null,\n): element is ExcalidrawTextElement {\n  return element != null && element.type === \"text\";\n}\n\nexport function isLinearElement(\n  element?: ExcalidrawElement | null,\n): element is ExcalidrawLinearElement {\n  return (\n    element != null &&\n    (element.type === \"arrow\" ||\n      element.type === \"line\" ||\n      element.type === \"draw\")\n  );\n}\n\nexport function isExcalidrawElement(element: any): boolean {\n  return (\n    element?.type === \"text\" ||\n    element?.type === \"diamond\" ||\n    element?.type === \"rectangle\" ||\n    element?.type === \"ellipse\" ||\n    element?.type === \"arrow\" ||\n    element?.type === \"draw\" ||\n    element?.type === \"line\"\n  );\n}\n","import { Point } from \"./types\";\nimport { LINE_CONFIRM_THRESHOLD } from \"./constants\";\n\n// https://stackoverflow.com/a/6853926/232122\nexport function distanceBetweenPointAndSegment(\n  x: number,\n  y: number,\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number,\n) {\n  const A = x - x1;\n  const B = y - y1;\n  const C = x2 - x1;\n  const D = y2 - y1;\n\n  const dot = A * C + B * D;\n  const lenSquare = C * C + D * D;\n  let param = -1;\n  if (lenSquare !== 0) {\n    // in case of 0 length line\n    param = dot / lenSquare;\n  }\n\n  let xx, yy;\n  if (param < 0) {\n    xx = x1;\n    yy = y1;\n  } else if (param > 1) {\n    xx = x2;\n    yy = y2;\n  } else {\n    xx = x1 + param * C;\n    yy = y1 + param * D;\n  }\n\n  const dx = x - xx;\n  const dy = y - yy;\n  return Math.hypot(dx, dy);\n}\n\nexport function rotate(\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number,\n  angle: number,\n): [number, number] {\n  // 𝑎′𝑥=(𝑎𝑥−𝑐𝑥)cos𝜃−(𝑎𝑦−𝑐𝑦)sin𝜃+𝑐𝑥\n  // 𝑎′𝑦=(𝑎𝑥−𝑐𝑥)sin𝜃+(𝑎𝑦−𝑐𝑦)cos𝜃+𝑐𝑦.\n  // https://math.stackexchange.com/questions/2204520/how-do-i-rotate-a-line-segment-in-a-specific-point-on-the-line\n  return [\n    (x1 - x2) * Math.cos(angle) - (y1 - y2) * Math.sin(angle) + x2,\n    (x1 - x2) * Math.sin(angle) + (y1 - y2) * Math.cos(angle) + y2,\n  ];\n}\n\nexport const adjustXYWithRotation = (\n  side: \"n\" | \"s\" | \"w\" | \"e\" | \"nw\" | \"ne\" | \"sw\" | \"se\",\n  x: number,\n  y: number,\n  angle: number,\n  deltaX1: number,\n  deltaY1: number,\n  deltaX2: number,\n  deltaY2: number,\n  isResizeFromCenter: boolean,\n): [number, number] => {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  if (side === \"e\" || side === \"ne\" || side === \"se\") {\n    if (isResizeFromCenter) {\n      x += deltaX1 + deltaX2;\n    } else {\n      x += deltaX1 * (1 + cos);\n      y += deltaX1 * sin;\n      x += deltaX2 * (1 - cos);\n      y += deltaX2 * -sin;\n    }\n  }\n  if (side === \"s\" || side === \"sw\" || side === \"se\") {\n    if (isResizeFromCenter) {\n      y += deltaY1 + deltaY2;\n    } else {\n      x += deltaY1 * -sin;\n      y += deltaY1 * (1 + cos);\n      x += deltaY2 * sin;\n      y += deltaY2 * (1 - cos);\n    }\n  }\n  if (side === \"w\" || side === \"nw\" || side === \"sw\") {\n    if (isResizeFromCenter) {\n      x += deltaX1 + deltaX2;\n    } else {\n      x += deltaX1 * (1 - cos);\n      y += deltaX1 * -sin;\n      x += deltaX2 * (1 + cos);\n      y += deltaX2 * sin;\n    }\n  }\n  if (side === \"n\" || side === \"nw\" || side === \"ne\") {\n    if (isResizeFromCenter) {\n      y += deltaY1 + deltaY2;\n    } else {\n      x += deltaY1 * sin;\n      y += deltaY1 * (1 - cos);\n      x += deltaY2 * -sin;\n      y += deltaY2 * (1 + cos);\n    }\n  }\n  return [x, y];\n};\n\nexport const getFlipAdjustment = (\n  side: \"n\" | \"s\" | \"w\" | \"e\" | \"nw\" | \"ne\" | \"sw\" | \"se\",\n  nextWidth: number,\n  nextHeight: number,\n  nextX1: number,\n  nextY1: number,\n  nextX2: number,\n  nextY2: number,\n  finalX1: number,\n  finalY1: number,\n  finalX2: number,\n  finalY2: number,\n  needsRotation: boolean,\n  angle: number,\n): [number, number] => {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  let flipDiffX = 0;\n  let flipDiffY = 0;\n  if (nextWidth < 0) {\n    if (side === \"e\" || side === \"ne\" || side === \"se\") {\n      if (needsRotation) {\n        flipDiffX += (finalX2 - nextX1) * cos;\n        flipDiffY += (finalX2 - nextX1) * sin;\n      } else {\n        flipDiffX += finalX2 - nextX1;\n      }\n    }\n    if (side === \"w\" || side === \"nw\" || side === \"sw\") {\n      if (needsRotation) {\n        flipDiffX += (finalX1 - nextX2) * cos;\n        flipDiffY += (finalX1 - nextX2) * sin;\n      } else {\n        flipDiffX += finalX1 - nextX2;\n      }\n    }\n  }\n  if (nextHeight < 0) {\n    if (side === \"s\" || side === \"se\" || side === \"sw\") {\n      if (needsRotation) {\n        flipDiffY += (finalY2 - nextY1) * cos;\n        flipDiffX += (finalY2 - nextY1) * -sin;\n      } else {\n        flipDiffY += finalY2 - nextY1;\n      }\n    }\n    if (side === \"n\" || side === \"ne\" || side === \"nw\") {\n      if (needsRotation) {\n        flipDiffY += (finalY1 - nextY2) * cos;\n        flipDiffX += (finalY1 - nextY2) * -sin;\n      } else {\n        flipDiffY += finalY1 - nextY2;\n      }\n    }\n  }\n  return [flipDiffX, flipDiffY];\n};\n\nexport const getPointOnAPath = (point: Point, path: Point[]) => {\n  const [px, py] = point;\n  const [start, ...other] = path;\n  let [lastX, lastY] = start;\n  let kLine: number = 0;\n  let idx: number = 0;\n\n  // if any item in the array is true, it means that a point is\n  // on some segment of a line based path\n  const retVal = other.some(([x2, y2], i) => {\n    // we always take a line when dealing with line segments\n    const x1 = lastX;\n    const y1 = lastY;\n\n    lastX = x2;\n    lastY = y2;\n\n    // if a point is not within the domain of the line segment\n    // it is not on the line segment\n    if (px < x1 || px > x2) {\n      return false;\n    }\n\n    // check if all points lie on the same line\n    // y1 = kx1 + b, y2 = kx2 + b\n    // y2 - y1 = k(x2 - x2) -> k = (y2 - y1) / (x2 - x1)\n\n    // coefficient for the line (p0, p1)\n    const kL = (y2 - y1) / (x2 - x1);\n\n    // coefficient for the line segment (p0, point)\n    const kP1 = (py - y1) / (px - x1);\n\n    // coefficient for the line segment (point, p1)\n    const kP2 = (py - y2) / (px - x2);\n\n    // because we are basing both lines from the same starting point\n    // the only option for collinearity is having same coefficients\n\n    // using it for floating point comparisons\n    const epsilon = 0.3;\n\n    // if coefficient is more than an arbitrary epsilon,\n    // these lines are nor collinear\n    if (Math.abs(kP1 - kL) > epsilon && Math.abs(kP2 - kL) > epsilon) {\n      return false;\n    }\n\n    // store the coefficient because we are goint to need it\n    kLine = kL;\n    idx = i;\n\n    return true;\n  });\n\n  // Return a coordinate that is always on the line segment\n  if (retVal === true) {\n    return { x: point[0], y: kLine * point[0], segment: idx };\n  }\n\n  return null;\n};\n\nexport function distance2d(x1: number, y1: number, x2: number, y2: number) {\n  const xd = x2 - x1;\n  const yd = y2 - y1;\n  return Math.hypot(xd, yd);\n}\n\n// Checks if the first and last point are close enough\n// to be considered a loop\nexport function isPathALoop(points: Point[]): boolean {\n  if (points.length >= 3) {\n    const [firstPoint, lastPoint] = [points[0], points[points.length - 1]];\n    return (\n      distance2d(firstPoint[0], firstPoint[1], lastPoint[0], lastPoint[1]) <=\n      LINE_CONFIRM_THRESHOLD\n    );\n  }\n  return false;\n}\n\n// Draw a line from the point to the right till infiinty\n// Check how many lines of the polygon does this infinite line intersects with\n// If the number of intersections is odd, point is in the polygon\nexport function isPointInPolygon(\n  points: Point[],\n  x: number,\n  y: number,\n): boolean {\n  const vertices = points.length;\n\n  // There must be at least 3 vertices in polygon\n  if (vertices < 3) {\n    return false;\n  }\n  const extreme: Point = [Number.MAX_SAFE_INTEGER, y];\n  const p: Point = [x, y];\n  let count = 0;\n  for (let i = 0; i < vertices; i++) {\n    const current = points[i];\n    const next = points[(i + 1) % vertices];\n    if (doIntersect(current, next, p, extreme)) {\n      if (orientation(current, p, next) === 0) {\n        return onSegment(current, p, next);\n      }\n      count++;\n    }\n  }\n  // true if count is off\n  return count % 2 === 1;\n}\n\n// Check if q lies on the line segment pr\nfunction onSegment(p: Point, q: Point, r: Point) {\n  return (\n    q[0] <= Math.max(p[0], r[0]) &&\n    q[0] >= Math.min(p[0], r[0]) &&\n    q[1] <= Math.max(p[1], r[1]) &&\n    q[1] >= Math.min(p[1], r[1])\n  );\n}\n\n// For the ordered points p, q, r, return\n// 0 if p, q, r are collinear\n// 1 if Clockwise\n// 2 if counterclickwise\nfunction orientation(p: Point, q: Point, r: Point) {\n  const val = (q[1] - p[1]) * (r[0] - q[0]) - (q[0] - p[0]) * (r[1] - q[1]);\n  if (val === 0) {\n    return 0;\n  }\n  return val > 0 ? 1 : 2;\n}\n\n// Check is p1q1 intersects with p2q2\nfunction doIntersect(p1: Point, q1: Point, p2: Point, q2: Point) {\n  const o1 = orientation(p1, q1, p2);\n  const o2 = orientation(p1, q1, q2);\n  const o3 = orientation(p2, q2, p1);\n  const o4 = orientation(p2, q2, q1);\n\n  if (o1 !== o2 && o3 !== o4) {\n    return true;\n  }\n\n  // p1, q1 and p2 are colinear and p2 lies on segment p1q1\n  if (o1 === 0 && onSegment(p1, p2, q1)) {\n    return true;\n  }\n\n  // p1, q1 and p2 are colinear and q2 lies on segment p1q1\n  if (o2 === 0 && onSegment(p1, q2, q1)) {\n    return true;\n  }\n\n  // p2, q2 and p1 are colinear and p1 lies on segment p2q2\n  if (o3 === 0 && onSegment(p2, p1, q2)) {\n    return true;\n  }\n\n  // p2, q2 and q1 are colinear and q1 lies on segment p2q2\n  if (o4 === 0 && onSegment(p2, q1, q2)) {\n    return true;\n  }\n\n  return false;\n}\n","import { Point } from \"./types\";\n\nexport function getSizeFromPoints(points: readonly Point[]) {\n  const xs = points.map((point) => point[0]);\n  const ys = points.map((point) => point[1]);\n  return {\n    width: Math.max(...xs) - Math.min(...xs),\n    height: Math.max(...ys) - Math.min(...ys),\n  };\n}\nexport function rescalePoints(\n  dimension: 0 | 1,\n  nextDimensionSize: number,\n  prevPoints: readonly Point[],\n): Point[] {\n  const prevDimValues = prevPoints.map((point) => point[dimension]);\n  const prevMaxDimension = Math.max(...prevDimValues);\n  const prevMinDimension = Math.min(...prevDimValues);\n  const prevDimensionSize = prevMaxDimension - prevMinDimension;\n\n  const dimensionScaleFactor =\n    prevDimensionSize === 0 ? 1 : nextDimensionSize / prevDimensionSize;\n\n  let nextMinDimension = Infinity;\n\n  const scaledPoints = prevPoints.map(\n    (prevPoint) =>\n      prevPoint.map((value, currentDimension) => {\n        if (currentDimension !== dimension) {\n          return value;\n        }\n        const scaledValue = value * dimensionScaleFactor;\n        nextMinDimension = Math.min(scaledValue, nextMinDimension);\n        return scaledValue;\n      }) as [number, number],\n  );\n\n  if (scaledPoints.length === 2) {\n    // we don't tranlate two-point lines\n    return scaledPoints;\n  }\n\n  const translation = prevMinDimension - nextMinDimension;\n\n  const nextPoints = scaledPoints.map(\n    (scaledPoint) =>\n      scaledPoint.map((value, currentDimension) => {\n        return currentDimension === dimension ? value + translation : value;\n      }) as [number, number],\n  );\n\n  return nextPoints;\n}\n","import { ExcalidrawElement, ExcalidrawLinearElement } from \"./types\";\nimport { rotate } from \"../math\";\nimport rough from \"roughjs/bin/rough\";\nimport { Drawable, Op } from \"roughjs/bin/core\";\nimport { Point } from \"../types\";\nimport {\n  getShapeForElement,\n  generateRoughOptions,\n} from \"../renderer/renderElement\";\nimport { isLinearElement } from \"./typeChecks\";\nimport { rescalePoints } from \"../points\";\n\n// If the element is created from right to left, the width is going to be negative\n// This set of functions retrieves the absolute position of the 4 points.\nexport function getElementAbsoluteCoords(\n  element: ExcalidrawElement,\n): [number, number, number, number] {\n  if (isLinearElement(element)) {\n    return getLinearElementAbsoluteCoords(element);\n  }\n  return [\n    element.x,\n    element.y,\n    element.x + element.width,\n    element.y + element.height,\n  ];\n}\n\nexport function getDiamondPoints(element: ExcalidrawElement) {\n  // Here we add +1 to avoid these numbers to be 0\n  // otherwise rough.js will throw an error complaining about it\n  const topX = Math.floor(element.width / 2) + 1;\n  const topY = 0;\n  const rightX = element.width;\n  const rightY = Math.floor(element.height / 2) + 1;\n  const bottomX = topX;\n  const bottomY = element.height;\n  const leftX = topY;\n  const leftY = rightY;\n\n  return [topX, topY, rightX, rightY, bottomX, bottomY, leftX, leftY];\n}\n\nexport function getCurvePathOps(shape: Drawable): Op[] {\n  console.log(shape)\n  for (const set of shape.sets) {\n    if (set.type === \"path\") {\n      return set.ops;\n    }\n  }\n  return shape.sets[0].ops;\n}\n\nconst getMinMaxXYFromCurvePathOps = (\n  ops: Op[],\n  transformXY?: (x: number, y: number) => [number, number],\n): [number, number, number, number] => {\n  let currentP: Point = [0, 0];\n  const { minX, minY, maxX, maxY } = ops.reduce(\n    (limits, { op, data }) => {\n      // There are only four operation types:\n      // move, bcurveTo, lineTo, and curveTo\n      if (op === \"move\") {\n        // change starting point\n        currentP = (data as unknown) as Point;\n        // move operation does not draw anything; so, it always\n        // returns false\n      } else if (op === \"bcurveTo\") {\n        // create points from bezier curve\n        // bezier curve stores data as a flattened array of three positions\n        // [x1, y1, x2, y2, x3, y3]\n        const p1 = [data[0], data[1]] as Point;\n        const p2 = [data[2], data[3]] as Point;\n        const p3 = [data[4], data[5]] as Point;\n\n        const p0 = currentP;\n        currentP = p3;\n\n        const equation = (t: number, idx: number) =>\n          Math.pow(1 - t, 3) * p3[idx] +\n          3 * t * Math.pow(1 - t, 2) * p2[idx] +\n          3 * Math.pow(t, 2) * (1 - t) * p1[idx] +\n          p0[idx] * Math.pow(t, 3);\n\n        let t = 0;\n        while (t <= 1.0) {\n          let x = equation(t, 0);\n          let y = equation(t, 1);\n          if (transformXY) {\n            [x, y] = transformXY(x, y);\n          }\n\n          limits.minY = Math.min(limits.minY, y);\n          limits.minX = Math.min(limits.minX, x);\n\n          limits.maxX = Math.max(limits.maxX, x);\n          limits.maxY = Math.max(limits.maxY, y);\n\n          t += 0.1;\n        }\n      } else if (op === \"lineTo\") {\n        // TODO: Implement this\n      } else if (op === \"qcurveTo\") {\n        // TODO: Implement this\n      }\n      return limits;\n    },\n    { minX: Infinity, minY: Infinity, maxX: -Infinity, maxY: -Infinity },\n  );\n\n  return [minX, minY, maxX, maxY];\n};\n\nconst getLinearElementAbsoluteCoords = (\n  element: ExcalidrawLinearElement,\n): [number, number, number, number] => {\n  if (element.points.length < 2 || !getShapeForElement(element)) {\n    // XXX this is just a poor estimate and not very useful\n    const { minX, minY, maxX, maxY } = element.points.reduce(\n      (limits, [x, y]) => {\n        limits.minY = Math.min(limits.minY, y);\n        limits.minX = Math.min(limits.minX, x);\n\n        limits.maxX = Math.max(limits.maxX, x);\n        limits.maxY = Math.max(limits.maxY, y);\n\n        return limits;\n      },\n      { minX: Infinity, minY: Infinity, maxX: -Infinity, maxY: -Infinity },\n    );\n    return [\n      minX + element.x,\n      minY + element.y,\n      maxX + element.x,\n      maxY + element.y,\n    ];\n  }\n\n  const shape = getShapeForElement(element) as Drawable[];\n\n  // first element is always the curve\n  const ops = getCurvePathOps(shape[0]);\n\n  const [minX, minY, maxX, maxY] = getMinMaxXYFromCurvePathOps(ops);\n\n  return [\n    minX + element.x,\n    minY + element.y,\n    maxX + element.x,\n    maxY + element.y,\n  ];\n};\n\nexport function getArrowPoints(\n  element: ExcalidrawLinearElement,\n  shape: Drawable[],\n) {\n  const ops = getCurvePathOps(shape[0]);\n\n  const data = ops[ops.length - 1].data;\n  const p3 = [data[4], data[5]] as Point;\n  const p2 = [data[2], data[3]] as Point;\n  const p1 = [data[0], data[1]] as Point;\n\n  // we need to find p0 of the bezier curve\n  // it is typically the last point of the previous\n  // curve; it can also be the position of moveTo operation\n  const prevOp = ops[ops.length - 2];\n  let p0: Point = [0, 0];\n  if (prevOp.op === \"move\") {\n    p0 = (prevOp.data as unknown) as Point;\n  } else if (prevOp.op === \"bcurveTo\") {\n    p0 = [prevOp.data[4], prevOp.data[5]];\n  }\n\n  // B(t) = p0 * (1-t)^3 + 3p1 * t * (1-t)^2 + 3p2 * t^2 * (1-t) + p3 * t^3\n  const equation = (t: number, idx: number) =>\n    Math.pow(1 - t, 3) * p3[idx] +\n    3 * t * Math.pow(1 - t, 2) * p2[idx] +\n    3 * Math.pow(t, 2) * (1 - t) * p1[idx] +\n    p0[idx] * Math.pow(t, 3);\n\n  // we know the last point of the arrow\n  const [x2, y2] = p3;\n\n  // by using cubic bezier equation (B(t)) and the given parameters,\n  // we calculate a point that is closer to the last point\n  // The value 0.3 is chosen arbitrarily and it works best for all\n  // the tested cases\n  const [x1, y1] = [equation(0.3, 0), equation(0.3, 1)];\n\n  // find the normalized direction vector based on the\n  // previously calculated points\n  const distance = Math.hypot(x2 - x1, y2 - y1);\n  const nx = (x2 - x1) / distance;\n  const ny = (y2 - y1) / distance;\n\n  const size = 30; // pixels\n  const arrowLength = element.points.reduce((total, [cx, cy], idx, points) => {\n    const [px, py] = idx > 0 ? points[idx - 1] : [0, 0];\n    return total + Math.hypot(cx - px, cy - py);\n  }, 0);\n\n  // Scale down the arrow until we hit a certain size so that it doesn't look weird\n  // This value is selected by minizing a minmum size with the whole length of the arrow\n  // intead of last segment of the arrow\n  const minSize = Math.min(size, arrowLength / 2);\n  const xs = x2 - nx * minSize;\n  const ys = y2 - ny * minSize;\n\n  const angle = 20; // degrees\n  const [x3, y3] = rotate(xs, ys, x2, y2, (-angle * Math.PI) / 180);\n  const [x4, y4] = rotate(xs, ys, x2, y2, (angle * Math.PI) / 180);\n\n  return [x2, y2, x3, y3, x4, y4];\n}\n\nconst getLinearElementRotatedBounds = (\n  element: ExcalidrawLinearElement,\n  cx: number,\n  cy: number,\n): [number, number, number, number] => {\n  if (element.points.length < 2 || !getShapeForElement(element)) {\n    // XXX this is just a poor estimate and not very useful\n    const { minX, minY, maxX, maxY } = element.points.reduce(\n      (limits, [x, y]) => {\n        [x, y] = rotate(element.x + x, element.y + y, cx, cy, element.angle);\n        limits.minY = Math.min(limits.minY, y);\n        limits.minX = Math.min(limits.minX, x);\n        limits.maxX = Math.max(limits.maxX, x);\n        limits.maxY = Math.max(limits.maxY, y);\n        return limits;\n      },\n      { minX: Infinity, minY: Infinity, maxX: -Infinity, maxY: -Infinity },\n    );\n    return [minX, minY, maxX, maxY];\n  }\n\n  const shape = getShapeForElement(element) as Drawable[];\n\n  // first element is always the curve\n  const ops = getCurvePathOps(shape[0]);\n\n  const transformXY = (x: number, y: number) =>\n    rotate(element.x + x, element.y + y, cx, cy, element.angle);\n  return getMinMaxXYFromCurvePathOps(ops, transformXY);\n};\n\nexport const getElementBounds = (\n  element: ExcalidrawElement,\n): [number, number, number, number] => {\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  const cx = (x1 + x2) / 2;\n  const cy = (y1 + y2) / 2;\n  if (isLinearElement(element)) {\n    return getLinearElementRotatedBounds(element, cx, cy);\n  }\n  if (element.type === \"diamond\") {\n    const [x11, y11] = rotate(cx, y1, cx, cy, element.angle);\n    const [x12, y12] = rotate(cx, y2, cx, cy, element.angle);\n    const [x22, y22] = rotate(x1, cy, cx, cy, element.angle);\n    const [x21, y21] = rotate(x2, cy, cx, cy, element.angle);\n    const minX = Math.min(x11, x12, x22, x21);\n    const minY = Math.min(y11, y12, y22, y21);\n    const maxX = Math.max(x11, x12, x22, x21);\n    const maxY = Math.max(y11, y12, y22, y21);\n    return [minX, minY, maxX, maxY];\n  }\n  if (element.type === \"ellipse\") {\n    const w = (x2 - x1) / 2;\n    const h = (y2 - y1) / 2;\n    const cos = Math.cos(element.angle);\n    const sin = Math.sin(element.angle);\n    const ww = Math.hypot(w * cos, h * sin);\n    const hh = Math.hypot(h * cos, w * sin);\n    return [cx - ww, cy - hh, cx + ww, cy + hh];\n  }\n  const [x11, y11] = rotate(x1, y1, cx, cy, element.angle);\n  const [x12, y12] = rotate(x1, y2, cx, cy, element.angle);\n  const [x22, y22] = rotate(x2, y2, cx, cy, element.angle);\n  const [x21, y21] = rotate(x2, y1, cx, cy, element.angle);\n  const minX = Math.min(x11, x12, x22, x21);\n  const minY = Math.min(y11, y12, y22, y21);\n  const maxX = Math.max(x11, x12, x22, x21);\n  const maxY = Math.max(y11, y12, y22, y21);\n  return [minX, minY, maxX, maxY];\n};\n\nexport const getCommonBounds = (\n  elements: readonly ExcalidrawElement[],\n): [number, number, number, number] => {\n  if (!elements.length) {\n    return [0, 0, 0, 0];\n  }\n\n  let minX = Infinity;\n  let maxX = -Infinity;\n  let minY = Infinity;\n  let maxY = -Infinity;\n\n  elements.forEach((element) => {\n    const [x1, y1, x2, y2] = getElementBounds(element);\n    minX = Math.min(minX, x1);\n    minY = Math.min(minY, y1);\n    maxX = Math.max(maxX, x2);\n    maxY = Math.max(maxY, y2);\n  });\n\n  return [minX, minY, maxX, maxY];\n};\n\nexport const getResizedElementAbsoluteCoords = (\n  element: ExcalidrawElement,\n  nextWidth: number,\n  nextHeight: number,\n): [number, number, number, number] => {\n  if (!isLinearElement(element)) {\n    return [\n      element.x,\n      element.y,\n      element.x + nextWidth,\n      element.y + nextHeight,\n    ];\n  }\n\n  const points = rescalePoints(\n    0,\n    nextWidth,\n    rescalePoints(1, nextHeight, element.points),\n  );\n\n  const gen = rough.generator();\n  const curve = gen.curve(\n    points as [number, number][],\n    generateRoughOptions(element),\n  );\n  const ops = getCurvePathOps(curve);\n  const [minX, minY, maxX, maxY] = getMinMaxXYFromCurvePathOps(ops);\n  return [\n    minX + element.x,\n    minY + element.y,\n    maxX + element.x,\n    maxY + element.y,\n  ];\n};\n","import {\n  ExcalidrawElement,\n  ExcalidrawTextElement,\n  NonDeletedExcalidrawElement,\n} from \"../element/types\";\nimport { isTextElement, isLinearElement } from \"../element/typeChecks\";\nimport {\n  getDiamondPoints,\n  getArrowPoints,\n  getElementAbsoluteCoords,\n} from \"../element/bounds\";\nimport { RoughCanvas } from \"roughjs/bin/canvas\";\nimport { Drawable, Options } from \"roughjs/bin/core\";\nimport { RoughSVG } from \"roughjs/bin/svg\";\nimport { RoughGenerator } from \"roughjs/bin/generator\";\nimport { SceneState } from \"../scene/types\";\nimport { SVG_NS, distance } from \"../utils\";\nimport { isPathALoop } from \"../math\";\nimport rough from \"roughjs/bin/rough\";\n\nconst CANVAS_PADDING = 20;\n\nconst DASHARRAY_DASHED = [12, 8];\nconst DASHARRAY_DOTTED = [3, 6];\n\nexport interface ExcalidrawElementWithCanvas {\n  element: ExcalidrawElement | ExcalidrawTextElement;\n  canvas: HTMLCanvasElement;\n  canvasZoom: number;\n  canvasOffsetX: number;\n  canvasOffsetY: number;\n}\n\nfunction generateElementCanvas(\n  element: NonDeletedExcalidrawElement,\n  zoom: number,\n): ExcalidrawElementWithCanvas {\n  const canvas = document.createElement(\"canvas\");\n  const context = canvas.getContext(\"2d\")!;\n\n  let canvasOffsetX = 0;\n  let canvasOffsetY = 0;\n\n  if (isLinearElement(element)) {\n    const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n    canvas.width =\n      distance(x1, x2) * window.devicePixelRatio * zoom + CANVAS_PADDING * 2;\n    canvas.height =\n      distance(y1, y2) * window.devicePixelRatio * zoom + CANVAS_PADDING * 2;\n\n    canvasOffsetX =\n      element.x > x1\n        ? Math.floor(distance(element.x, x1)) * window.devicePixelRatio\n        : 0;\n    canvasOffsetY =\n      element.y > y1\n        ? Math.floor(distance(element.y, y1)) * window.devicePixelRatio\n        : 0;\n    context.translate(canvasOffsetX * zoom, canvasOffsetY * zoom);\n  } else {\n    canvas.width =\n      element.width * window.devicePixelRatio * zoom + CANVAS_PADDING * 2;\n    canvas.height =\n      element.height * window.devicePixelRatio * zoom + CANVAS_PADDING * 2;\n  }\n\n  context.translate(CANVAS_PADDING, CANVAS_PADDING);\n  context.scale(window.devicePixelRatio * zoom, window.devicePixelRatio * zoom);\n\n  const rc = rough.canvas(canvas);\n  drawElementOnCanvas(element, rc, context);\n  context.translate(-CANVAS_PADDING, -CANVAS_PADDING);\n  context.scale(\n    1 / (window.devicePixelRatio * zoom),\n    1 / (window.devicePixelRatio * zoom),\n  );\n  return { element, canvas, canvasZoom: zoom, canvasOffsetX, canvasOffsetY };\n}\n\nfunction drawElementOnCanvas(\n  element: NonDeletedExcalidrawElement,\n  rc: RoughCanvas,\n  context: CanvasRenderingContext2D,\n) {\n  context.globalAlpha = element.opacity / 100;\n  switch (element.type) {\n    case \"rectangle\":\n    case \"diamond\":\n    case \"ellipse\": {\n      rc.draw(getShapeForElement(element) as Drawable);\n      break;\n    }\n    case \"arrow\":\n    case \"draw\":\n    case \"line\": {\n      (getShapeForElement(element) as Drawable[]).forEach((shape) => {\n        rc.draw(shape);\n      });\n      break;\n    }\n    default: {\n      if (isTextElement(element)) {\n        const font = context.font;\n        context.font = element.font;\n        const fillStyle = context.fillStyle;\n        context.fillStyle = element.strokeColor;\n        const textAlign = context.textAlign;\n        context.textAlign = element.textAlign as CanvasTextAlign;\n        // Canvas does not support multiline text by default\n        const lines = element.text.replace(/\\r\\n?/g, \"\\n\").split(\"\\n\");\n        const lineHeight = element.height / lines.length;\n        const verticalOffset = element.height - element.baseline;\n        const horizontalOffset =\n          element.textAlign === \"center\"\n            ? element.width / 2\n            : element.textAlign === \"right\"\n            ? element.width\n            : 0;\n        for (let i = 0; i < lines.length; i++) {\n          context.fillText(\n            lines[i],\n            0 + horizontalOffset,\n            (i + 1) * lineHeight - verticalOffset,\n          );\n        }\n        context.fillStyle = fillStyle;\n        context.font = font;\n        context.textAlign = textAlign;\n      } else {\n        throw new Error(`Unimplemented type ${element.type}`);\n      }\n    }\n  }\n  context.globalAlpha = 1;\n}\n\nconst elementWithCanvasCache = new WeakMap<\n  ExcalidrawElement,\n  ExcalidrawElementWithCanvas\n>();\n\nconst shapeCache = new WeakMap<\n  ExcalidrawElement,\n  Drawable | Drawable[] | null\n>();\n\nexport function getShapeForElement(element: ExcalidrawElement) {\n  return shapeCache.get(element);\n}\n\nexport function invalidateShapeForElement(element: ExcalidrawElement) {\n  shapeCache.delete(element);\n}\n\nexport function generateRoughOptions(element: ExcalidrawElement): Options {\n  const options: Options = {\n    seed: element.seed,\n    strokeLineDash:\n      element.strokeStyle === \"dashed\"\n        ? DASHARRAY_DASHED\n        : element.strokeStyle === \"dotted\"\n        ? DASHARRAY_DOTTED\n        : undefined,\n    // for non-solid strokes, disable multiStroke because it tends to make\n    //  dashes/dots overlay each other\n    disableMultiStroke: element.strokeStyle !== \"solid\",\n    // for non-solid strokes, increase the width a bit to make it visually\n    //  similar to solid strokes, because we're also disabling multiStroke\n    strokeWidth:\n      element.strokeStyle !== \"solid\"\n        ? element.strokeWidth + 0.5\n        : element.strokeWidth,\n    // when increasing strokeWidth, we must explicitly set fillWeight and\n    //  hachureGap because if not specified, roughjs uses strokeWidth to\n    //  calculate them (and we don't want the fills to be modified)\n    fillWeight: element.strokeWidth / 2,\n    hachureGap: element.strokeWidth * 4,\n    roughness: element.roughness,\n    stroke: element.strokeColor,\n  };\n\n  switch (element.type) {\n    case \"rectangle\":\n    case \"diamond\":\n    case \"ellipse\": {\n      options.fillStyle = element.fillStyle;\n      options.fill =\n        element.backgroundColor === \"transparent\"\n          ? undefined\n          : element.backgroundColor;\n      if (element.type === \"ellipse\") {\n        options.curveFitting = 1;\n      }\n      return options;\n    }\n    case \"line\":\n    case \"draw\":\n    case \"arrow\": {\n      // If shape is a line and is a closed shape,\n      // fill the shape if a color is set.\n      if (element.type === \"line\" || element.type === \"draw\") {\n        if (isPathALoop(element.points)) {\n          options.fillStyle = element.fillStyle;\n          options.fill =\n            element.backgroundColor === \"transparent\"\n              ? undefined\n              : element.backgroundColor;\n        }\n      }\n\n      return options;\n    }\n    default: {\n      throw new Error(`Unimplemented type ${element.type}`);\n    }\n  }\n}\n\nfunction generateElement(\n  element: NonDeletedExcalidrawElement,\n  generator: RoughGenerator,\n  sceneState?: SceneState,\n) {\n  let shape = shapeCache.get(element) || null;\n  if (!shape) {\n    elementWithCanvasCache.delete(element);\n\n    switch (element.type) {\n      case \"rectangle\":\n        shape = generator.rectangle(\n          0,\n          0,\n          element.width,\n          element.height,\n          generateRoughOptions(element),\n        );\n\n        break;\n      case \"diamond\": {\n        const [\n          topX,\n          topY,\n          rightX,\n          rightY,\n          bottomX,\n          bottomY,\n          leftX,\n          leftY,\n        ] = getDiamondPoints(element);\n        shape = generator.polygon(\n          [\n            [topX, topY],\n            [rightX, rightY],\n            [bottomX, bottomY],\n            [leftX, leftY],\n          ],\n          generateRoughOptions(element),\n        );\n        break;\n      }\n      case \"ellipse\":\n        shape = generator.ellipse(\n          element.width / 2,\n          element.height / 2,\n          element.width,\n          element.height,\n          generateRoughOptions(element),\n        );\n        break;\n      case \"line\":\n      case \"draw\":\n      case \"arrow\": {\n        const options = generateRoughOptions(element);\n\n        // points array can be empty in the beginning, so it is important to add\n        // initial position to it\n        const points = element.points.length ? element.points : [[0, 0]];\n\n        // curve is always the first element\n        // this simplifies finding the curve for an element\n        shape = [generator.curve(points as [number, number][], options)];\n\n        // add lines only in arrow\n        if (element.type === \"arrow\") {\n          const [x2, y2, x3, y3, x4, y4] = getArrowPoints(element, shape);\n          // for dotted arrows caps, reduce gap to make it more legible\n          if (element.strokeStyle === \"dotted\") {\n            options.strokeLineDash = [3, 4];\n            // for solid/dashed, keep solid arrow cap\n          } else {\n            delete options.strokeLineDash;\n          }\n          shape.push(\n            ...[\n              generator.line(x3, y3, x2, y2, options),\n              generator.line(x4, y4, x2, y2, options),\n            ],\n          );\n        }\n        break;\n      }\n      case \"text\": {\n        // just to ensure we don't regenerate element.canvas on rerenders\n        shape = [];\n        break;\n      }\n    }\n    shapeCache.set(element, shape);\n  }\n  const zoom = sceneState ? sceneState.zoom : 1;\n  const prevElementWithCanvas = elementWithCanvasCache.get(element);\n  const shouldRegenerateBecauseZoom =\n    prevElementWithCanvas &&\n    prevElementWithCanvas.canvasZoom !== zoom &&\n    !sceneState?.shouldCacheIgnoreZoom;\n  if (!prevElementWithCanvas || shouldRegenerateBecauseZoom) {\n    const elementWithCanvas = generateElementCanvas(element, zoom);\n    elementWithCanvasCache.set(element, elementWithCanvas);\n    return elementWithCanvas;\n  }\n  return prevElementWithCanvas;\n}\n\nfunction drawElementFromCanvas(\n  elementWithCanvas: ExcalidrawElementWithCanvas,\n  rc: RoughCanvas,\n  context: CanvasRenderingContext2D,\n  sceneState: SceneState,\n) {\n  const element = elementWithCanvas.element;\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  const cx = ((x1 + x2) / 2 + sceneState.scrollX) * window.devicePixelRatio;\n  const cy = ((y1 + y2) / 2 + sceneState.scrollY) * window.devicePixelRatio;\n  context.scale(1 / window.devicePixelRatio, 1 / window.devicePixelRatio);\n  context.translate(cx, cy);\n  context.rotate(element.angle);\n  context.drawImage(\n    elementWithCanvas.canvas!,\n    (-(x2 - x1) / 2) * window.devicePixelRatio -\n      CANVAS_PADDING / elementWithCanvas.canvasZoom,\n    (-(y2 - y1) / 2) * window.devicePixelRatio -\n      CANVAS_PADDING / elementWithCanvas.canvasZoom,\n    elementWithCanvas.canvas!.width / elementWithCanvas.canvasZoom,\n    elementWithCanvas.canvas!.height / elementWithCanvas.canvasZoom,\n  );\n  context.rotate(-element.angle);\n  context.translate(-cx, -cy);\n  context.scale(window.devicePixelRatio, window.devicePixelRatio);\n}\n\nexport function renderElement(\n  element: NonDeletedExcalidrawElement,\n  rc: RoughCanvas,\n  context: CanvasRenderingContext2D,\n  renderOptimizations: boolean,\n  sceneState: SceneState,\n) {\n  const generator = rc.generator;\n  switch (element.type) {\n    case \"selection\": {\n      context.translate(\n        element.x + sceneState.scrollX,\n        element.y + sceneState.scrollY,\n      );\n      const fillStyle = context.fillStyle;\n      context.fillStyle = \"rgba(0, 0, 255, 0.10)\";\n      context.fillRect(0, 0, element.width, element.height);\n      context.fillStyle = fillStyle;\n      context.translate(\n        -element.x - sceneState.scrollX,\n        -element.y - sceneState.scrollY,\n      );\n      break;\n    }\n    case \"rectangle\":\n    case \"diamond\":\n    case \"ellipse\":\n    case \"line\":\n    case \"draw\":\n    case \"arrow\":\n    case \"text\": {\n      const elementWithCanvas = generateElement(element, generator, sceneState);\n\n      if (renderOptimizations) {\n        drawElementFromCanvas(elementWithCanvas, rc, context, sceneState);\n      } else {\n        const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n        const cx = (x1 + x2) / 2 + sceneState.scrollX;\n        const cy = (y1 + y2) / 2 + sceneState.scrollY;\n        const shiftX = (x2 - x1) / 2 - (element.x - x1);\n        const shiftY = (y2 - y1) / 2 - (element.y - y1);\n        context.translate(cx, cy);\n        context.rotate(element.angle);\n        context.translate(-shiftX, -shiftY);\n        drawElementOnCanvas(element, rc, context);\n        context.translate(shiftX, shiftY);\n        context.rotate(-element.angle);\n        context.translate(-cx, -cy);\n      }\n      break;\n    }\n    default: {\n      // @ts-ignore\n      throw new Error(`Unimplemented type ${element.type}`);\n    }\n  }\n}\n\nexport function renderElementToSvg(\n  element: NonDeletedExcalidrawElement,\n  rsvg: RoughSVG,\n  svgRoot: SVGElement,\n  offsetX?: number,\n  offsetY?: number,\n) {\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  const cx = (x2 - x1) / 2 - (element.x - x1);\n  const cy = (y2 - y1) / 2 - (element.y - y1);\n  const degree = (180 * element.angle) / Math.PI;\n  const generator = rsvg.generator;\n  switch (element.type) {\n    case \"selection\": {\n      // Since this is used only during editing experience, which is canvas based,\n      // this should not happen\n      throw new Error(\"Selection rendering is not supported for SVG\");\n    }\n    case \"rectangle\":\n    case \"diamond\":\n    case \"ellipse\": {\n      generateElement(element, generator);\n      const node = rsvg.draw(getShapeForElement(element) as Drawable);\n      const opacity = element.opacity / 100;\n      if (opacity !== 1) {\n        node.setAttribute(\"stroke-opacity\", `${opacity}`);\n        node.setAttribute(\"fill-opacity\", `${opacity}`);\n      }\n      node.setAttribute(\n        \"transform\",\n        `translate(${offsetX || 0} ${\n          offsetY || 0\n        }) rotate(${degree} ${cx} ${cy})`,\n      );\n      svgRoot.appendChild(node);\n      break;\n    }\n    case \"line\":\n    case \"draw\":\n    case \"arrow\": {\n      generateElement(element, generator);\n      const group = svgRoot.ownerDocument!.createElementNS(SVG_NS, \"g\");\n      const opacity = element.opacity / 100;\n      (getShapeForElement(element) as Drawable[]).forEach((shape) => {\n        const node = rsvg.draw(shape);\n        if (opacity !== 1) {\n          node.setAttribute(\"stroke-opacity\", `${opacity}`);\n          node.setAttribute(\"fill-opacity\", `${opacity}`);\n        }\n        node.setAttribute(\n          \"transform\",\n          `translate(${offsetX || 0} ${\n            offsetY || 0\n          }) rotate(${degree} ${cx} ${cy})`,\n        );\n        if (\n          (element.type === \"line\" || element.type === \"draw\") &&\n          isPathALoop(element.points) &&\n          element.backgroundColor !== \"transparent\"\n        ) {\n          node.setAttribute(\"fill-rule\", \"evenodd\");\n        }\n        group.appendChild(node);\n      });\n      svgRoot.appendChild(group);\n      break;\n    }\n    default: {\n      if (isTextElement(element)) {\n        const opacity = element.opacity / 100;\n        const node = svgRoot.ownerDocument!.createElementNS(SVG_NS, \"g\");\n        if (opacity !== 1) {\n          node.setAttribute(\"stroke-opacity\", `${opacity}`);\n          node.setAttribute(\"fill-opacity\", `${opacity}`);\n        }\n        node.setAttribute(\n          \"transform\",\n          `translate(${offsetX || 0} ${\n            offsetY || 0\n          }) rotate(${degree} ${cx} ${cy})`,\n        );\n        const lines = element.text.replace(/\\r\\n?/g, \"\\n\").split(\"\\n\");\n        const lineHeight = element.height / lines.length;\n        const verticalOffset = element.height - element.baseline;\n        const horizontalOffset =\n          element.textAlign === \"center\"\n            ? element.width / 2\n            : element.textAlign === \"right\"\n            ? element.width\n            : 0;\n        const fontSplit = element.font.split(\" \").filter((d) => !!d.trim());\n        let fontFamily = fontSplit[0];\n        let fontSize = \"20px\";\n        if (fontSplit.length > 1) {\n          fontFamily = fontSplit[1];\n          fontSize = fontSplit[0];\n        }\n        const textAnchor =\n          element.textAlign === \"center\"\n            ? \"middle\"\n            : element.textAlign === \"right\"\n            ? \"end\"\n            : \"start\";\n        for (let i = 0; i < lines.length; i++) {\n          const text = svgRoot.ownerDocument!.createElementNS(SVG_NS, \"text\");\n          text.textContent = lines[i];\n          text.setAttribute(\"x\", `${horizontalOffset}`);\n          text.setAttribute(\"y\", `${(i + 1) * lineHeight - verticalOffset}`);\n          text.setAttribute(\"font-family\", fontFamily);\n          text.setAttribute(\"font-size\", fontSize);\n          text.setAttribute(\"fill\", element.strokeColor);\n          text.setAttribute(\"text-anchor\", textAnchor);\n          text.setAttribute(\"style\", \"white-space: pre;\");\n          node.appendChild(text);\n        }\n        svgRoot.appendChild(node);\n      } else {\n        // @ts-ignore\n        throw new Error(`Unimplemented type ${element.type}`);\n      }\n    }\n  }\n}\n","import { Random } from \"roughjs/bin/math\";\nimport nanoid from \"nanoid\";\n\nlet random = new Random(Date.now());\nlet testIdBase = 0;\n\nexport function randomInteger() {\n  return Math.floor(random.next() * 2 ** 31);\n}\n\nexport function reseed(seed: number) {\n  random = new Random(seed);\n  testIdBase = 0;\n}\n\nexport function randomId() {\n  return process.env.NODE_ENV === \"test\" ? `id${testIdBase++}` : nanoid();\n}\n","import { ExcalidrawElement } from \"./types\";\nimport { invalidateShapeForElement } from \"../renderer/renderElement\";\nimport { globalSceneState } from \"../scene\";\nimport { getSizeFromPoints } from \"../points\";\nimport { randomInteger } from \"../random\";\n\ntype ElementUpdate<TElement extends ExcalidrawElement> = Omit<\n  Partial<TElement>,\n  \"id\" | \"seed\"\n>;\n\n// This function tracks updates of text elements for the purposes for collaboration.\n// The version is used to compare updates when more than one user is working in\n// the same drawing. Note: this will trigger the component to update. Make sure you\n// are calling it either from a React event handler or within unstable_batchedUpdates().\nexport function mutateElement<TElement extends Mutable<ExcalidrawElement>>(\n  element: TElement,\n  updates: ElementUpdate<TElement>,\n) {\n  // casting to any because can't use `in` operator\n  // (see https://github.com/microsoft/TypeScript/issues/21732)\n  const { points } = updates as any;\n\n  if (typeof points !== \"undefined\") {\n    updates = { ...getSizeFromPoints(points), ...updates };\n  }\n\n  for (const key in updates) {\n    const value = (updates as any)[key];\n    if (typeof value !== \"undefined\") {\n      // @ts-ignore\n      element[key] = value;\n    }\n  }\n\n  if (\n    typeof updates.height !== \"undefined\" ||\n    typeof updates.width !== \"undefined\" ||\n    typeof points !== \"undefined\"\n  ) {\n    invalidateShapeForElement(element);\n  }\n\n  element.version++;\n  element.versionNonce = randomInteger();\n\n  globalSceneState.informMutation();\n}\n\nexport function newElementWith<TElement extends ExcalidrawElement>(\n  element: TElement,\n  updates: ElementUpdate<TElement>,\n): TElement {\n  return {\n    ...element,\n    version: element.version + 1,\n    versionNonce: randomInteger(),\n    ...updates,\n  };\n}\n","import { ExcalidrawElement } from \"./types\";\nimport { mutateElement } from \"./mutateElement\";\nimport { isLinearElement } from \"./typeChecks\";\nimport { SHIFT_LOCKING_ANGLE } from \"../constants\";\n\nexport function isInvisiblySmallElement(element: ExcalidrawElement): boolean {\n  if (isLinearElement(element)) {\n    return element.points.length < 2;\n  }\n  return element.width === 0 && element.height === 0;\n}\n\n/**\n * Makes a perfect shape or diagonal/horizontal/vertical line\n */\nexport function getPerfectElementSize(\n  elementType: string,\n  width: number,\n  height: number,\n): { width: number; height: number } {\n  const absWidth = Math.abs(width);\n  const absHeight = Math.abs(height);\n\n  if (\n    elementType === \"line\" ||\n    elementType === \"arrow\" ||\n    elementType === \"draw\"\n  ) {\n    const lockedAngle =\n      Math.round(Math.atan(absHeight / absWidth) / SHIFT_LOCKING_ANGLE) *\n      SHIFT_LOCKING_ANGLE;\n    if (lockedAngle === 0) {\n      height = 0;\n    } else if (lockedAngle === Math.PI / 2) {\n      width = 0;\n    } else {\n      height =\n        Math.round(absWidth * Math.tan(lockedAngle)) * Math.sign(height) ||\n        height;\n    }\n  } else if (elementType !== \"selection\") {\n    height = absWidth * Math.sign(height);\n  }\n  return { width, height };\n}\n\nexport function resizePerfectLineForNWHandler(\n  element: ExcalidrawElement,\n  x: number,\n  y: number,\n) {\n  const anchorX = element.x + element.width;\n  const anchorY = element.y + element.height;\n  const distanceToAnchorX = x - anchorX;\n  const distanceToAnchorY = y - anchorY;\n  if (Math.abs(distanceToAnchorX) < Math.abs(distanceToAnchorY) / 2) {\n    mutateElement(element, {\n      x: anchorX,\n      width: 0,\n      y,\n      height: -distanceToAnchorY,\n    });\n  } else if (Math.abs(distanceToAnchorY) < Math.abs(element.width) / 2) {\n    mutateElement(element, {\n      y: anchorY,\n      height: 0,\n    });\n  } else {\n    const nextHeight =\n      Math.sign(distanceToAnchorY) *\n      Math.sign(distanceToAnchorX) *\n      element.width;\n    mutateElement(element, {\n      x,\n      y: anchorY - nextHeight,\n      width: -distanceToAnchorX,\n      height: nextHeight,\n    });\n  }\n}\n\n/**\n * @returns {boolean} whether element was normalized\n */\nexport function normalizeDimensions(\n  element: ExcalidrawElement | null,\n): element is ExcalidrawElement {\n  if (!element || (element.width >= 0 && element.height >= 0)) {\n    return false;\n  }\n\n  if (element.width < 0) {\n    const nextWidth = Math.abs(element.width);\n    mutateElement(element, {\n      width: nextWidth,\n      x: element.x - nextWidth,\n    });\n  }\n\n  if (element.height < 0) {\n    const nextHeight = Math.abs(element.height);\n    mutateElement(element, {\n      height: nextHeight,\n      y: element.y - nextHeight,\n    });\n  }\n\n  return true;\n}\n","import {\n  ExcalidrawElement,\n  ExcalidrawTextElement,\n  ExcalidrawLinearElement,\n  ExcalidrawGenericElement,\n  NonDeleted,\n  TextAlign,\n} from \"../element/types\";\nimport { measureText } from \"../utils\";\nimport { randomInteger, randomId } from \"../random\";\nimport { newElementWith } from \"./mutateElement\";\n\ntype ElementConstructorOpts = {\n  x: ExcalidrawGenericElement[\"x\"];\n  y: ExcalidrawGenericElement[\"y\"];\n  strokeColor: ExcalidrawGenericElement[\"strokeColor\"];\n  backgroundColor: ExcalidrawGenericElement[\"backgroundColor\"];\n  fillStyle: ExcalidrawGenericElement[\"fillStyle\"];\n  strokeWidth: ExcalidrawGenericElement[\"strokeWidth\"];\n  strokeStyle: ExcalidrawGenericElement[\"strokeStyle\"];\n  roughness: ExcalidrawGenericElement[\"roughness\"];\n  opacity: ExcalidrawGenericElement[\"opacity\"];\n  width?: ExcalidrawGenericElement[\"width\"];\n  height?: ExcalidrawGenericElement[\"height\"];\n  angle?: ExcalidrawGenericElement[\"angle\"];\n};\n\nfunction _newElementBase<T extends ExcalidrawElement>(\n  type: T[\"type\"],\n  {\n    x,\n    y,\n    strokeColor,\n    backgroundColor,\n    fillStyle,\n    strokeWidth,\n    strokeStyle,\n    roughness,\n    opacity,\n    width = 0,\n    height = 0,\n    angle = 0,\n    ...rest\n  }: ElementConstructorOpts & Partial<ExcalidrawGenericElement>,\n) {\n  return {\n    id: rest.id || randomId(),\n    type,\n    x,\n    y,\n    width,\n    height,\n    angle,\n    strokeColor,\n    backgroundColor,\n    fillStyle,\n    strokeWidth,\n    strokeStyle,\n    roughness,\n    opacity,\n    seed: rest.seed ?? randomInteger(),\n    version: rest.version || 1,\n    versionNonce: rest.versionNonce ?? 0,\n    isDeleted: false as false,\n  };\n}\n\nexport function newElement(\n  opts: {\n    type: ExcalidrawGenericElement[\"type\"];\n  } & ElementConstructorOpts,\n): NonDeleted<ExcalidrawGenericElement> {\n  return _newElementBase<ExcalidrawGenericElement>(opts.type, opts);\n}\n\nexport function newTextElement(\n  opts: {\n    text: string;\n    font: string;\n    textAlign: TextAlign;\n  } & ElementConstructorOpts,\n): NonDeleted<ExcalidrawTextElement> {\n  const metrics = measureText(opts.text, opts.font);\n  const textElement = newElementWith(\n    {\n      ..._newElementBase<ExcalidrawTextElement>(\"text\", opts),\n      text: opts.text,\n      font: opts.font,\n      textAlign: opts.textAlign,\n      // Center the text\n      x: opts.x - metrics.width / 2,\n      y: opts.y - metrics.height / 2,\n      width: metrics.width,\n      height: metrics.height,\n      baseline: metrics.baseline,\n    },\n    {},\n  );\n\n  return textElement;\n}\n\nexport function newLinearElement(\n  opts: {\n    type: ExcalidrawLinearElement[\"type\"];\n    lastCommittedPoint?: ExcalidrawLinearElement[\"lastCommittedPoint\"];\n  } & ElementConstructorOpts,\n): NonDeleted<ExcalidrawLinearElement> {\n  return {\n    ..._newElementBase<ExcalidrawLinearElement>(opts.type, opts),\n    points: [],\n    lastCommittedPoint: opts.lastCommittedPoint || null,\n  };\n}\n\n// Simplified deep clone for the purpose of cloning ExcalidrawElement only\n//  (doesn't clone Date, RegExp, Map, Set, Typed arrays etc.)\n//\n// Adapted from https://github.com/lukeed/klona\nfunction _duplicateElement(val: any, depth: number = 0) {\n  if (val == null || typeof val !== \"object\") {\n    return val;\n  }\n\n  if (Object.prototype.toString.call(val) === \"[object Object]\") {\n    const tmp =\n      typeof val.constructor === \"function\"\n        ? Object.create(Object.getPrototypeOf(val))\n        : {};\n    for (const key in val) {\n      if (val.hasOwnProperty(key)) {\n        // don't copy top-level shape property, which we want to regenerate\n        if (depth === 0 && (key === \"shape\" || key === \"canvas\")) {\n          continue;\n        }\n        tmp[key] = _duplicateElement(val[key], depth + 1);\n      }\n    }\n    return tmp;\n  }\n\n  if (Array.isArray(val)) {\n    let k = val.length;\n    const arr = new Array(k);\n    while (k--) {\n      arr[k] = _duplicateElement(val[k], depth + 1);\n    }\n    return arr;\n  }\n\n  return val;\n}\n\nexport function duplicateElement<TElement extends Mutable<ExcalidrawElement>>(\n  element: TElement,\n  overrides?: Partial<TElement>,\n): TElement {\n  let copy: TElement = _duplicateElement(element);\n  copy.id = randomId();\n  copy.seed = randomInteger();\n  if (overrides) {\n    copy = Object.assign(copy, overrides);\n  }\n  return copy;\n}\n","import { ExcalidrawElement, PointerType } from \"./types\";\n\nimport { getElementAbsoluteCoords } from \"./bounds\";\nimport { rotate } from \"../math\";\n\ntype Sides = \"n\" | \"s\" | \"w\" | \"e\" | \"nw\" | \"ne\" | \"sw\" | \"se\" | \"rotation\";\n\nconst handleSizes: { [k in PointerType]: number } = {\n  mouse: 8,\n  pen: 16,\n  touch: 28,\n};\n\nconst ROTATION_HANDLER_GAP = 16;\n\nexport const OMIT_SIDES_FOR_MULTIPLE_ELEMENTS = {\n  e: true,\n  s: true,\n  n: true,\n  w: true,\n  rotation: true,\n};\n\nfunction generateHandler(\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  cx: number,\n  cy: number,\n  angle: number,\n): [number, number, number, number] {\n  const [xx, yy] = rotate(x + width / 2, y + height / 2, cx, cy, angle);\n  return [xx - width / 2, yy - height / 2, width, height];\n}\n\nexport function handlerRectanglesFromCoords(\n  [x1, y1, x2, y2]: [number, number, number, number],\n  angle: number,\n  zoom: number,\n  pointerType: PointerType = \"mouse\",\n  omitSides: { [T in Sides]?: boolean } = {},\n): Partial<{ [T in Sides]: [number, number, number, number] }> {\n  const size = handleSizes[pointerType];\n  const handlerWidth = size / zoom;\n  const handlerHeight = size / zoom;\n\n  const handlerMarginX = size / zoom;\n  const handlerMarginY = size / zoom;\n\n  const width = x2 - x1;\n  const height = y2 - y1;\n  const cx = (x1 + x2) / 2;\n  const cy = (y1 + y2) / 2;\n\n  const dashedLineMargin = 4 / zoom;\n\n  const centeringOffset = (size - 8) / (2 * zoom);\n\n  const handlers: Partial<\n    { [T in Sides]: [number, number, number, number] }\n  > = {\n    nw: omitSides[\"nw\"]\n      ? undefined\n      : generateHandler(\n          x1 - dashedLineMargin - handlerMarginX + centeringOffset,\n          y1 - dashedLineMargin - handlerMarginY + centeringOffset,\n          handlerWidth,\n          handlerHeight,\n          cx,\n          cy,\n          angle,\n        ),\n    ne: omitSides[\"ne\"]\n      ? undefined\n      : generateHandler(\n          x2 + dashedLineMargin - centeringOffset,\n          y1 - dashedLineMargin - handlerMarginY + centeringOffset,\n          handlerWidth,\n          handlerHeight,\n          cx,\n          cy,\n          angle,\n        ),\n    sw: omitSides[\"sw\"]\n      ? undefined\n      : generateHandler(\n          x1 - dashedLineMargin - handlerMarginX + centeringOffset,\n          y2 + dashedLineMargin - centeringOffset,\n          handlerWidth,\n          handlerHeight,\n          cx,\n          cy,\n          angle,\n        ),\n    se: omitSides[\"se\"]\n      ? undefined\n      : generateHandler(\n          x2 + dashedLineMargin - centeringOffset,\n          y2 + dashedLineMargin - centeringOffset,\n          handlerWidth,\n          handlerHeight,\n          cx,\n          cy,\n          angle,\n        ),\n    rotation: omitSides[\"rotation\"]\n      ? undefined\n      : generateHandler(\n          x1 + width / 2 - handlerWidth / 2,\n          y1 -\n            dashedLineMargin -\n            handlerMarginY +\n            centeringOffset -\n            ROTATION_HANDLER_GAP / zoom,\n          handlerWidth,\n          handlerHeight,\n          cx,\n          cy,\n          angle,\n        ),\n  };\n\n  // We only want to show height handlers (all cardinal directions)  above a certain size\n  const minimumSizeForEightHandlers = (5 * size) / zoom;\n  if (Math.abs(width) > minimumSizeForEightHandlers) {\n    if (!omitSides[\"n\"]) {\n      handlers[\"n\"] = generateHandler(\n        x1 + width / 2 - handlerWidth / 2,\n        y1 - dashedLineMargin - handlerMarginY + centeringOffset,\n        handlerWidth,\n        handlerHeight,\n        cx,\n        cy,\n        angle,\n      );\n    }\n    if (!omitSides[\"s\"]) {\n      handlers[\"s\"] = generateHandler(\n        x1 + width / 2 - handlerWidth / 2,\n        y2 + dashedLineMargin - centeringOffset,\n        handlerWidth,\n        handlerHeight,\n        cx,\n        cy,\n        angle,\n      );\n    }\n  }\n  if (Math.abs(height) > minimumSizeForEightHandlers) {\n    if (!omitSides[\"w\"]) {\n      handlers[\"w\"] = generateHandler(\n        x1 - dashedLineMargin - handlerMarginX + centeringOffset,\n        y1 + height / 2 - handlerHeight / 2,\n        handlerWidth,\n        handlerHeight,\n        cx,\n        cy,\n        angle,\n      );\n    }\n    if (!omitSides[\"e\"]) {\n      handlers[\"e\"] = generateHandler(\n        x2 + dashedLineMargin - centeringOffset,\n        y1 + height / 2 - handlerHeight / 2,\n        handlerWidth,\n        handlerHeight,\n        cx,\n        cy,\n        angle,\n      );\n    }\n  }\n\n  return handlers;\n}\n\nexport function handlerRectangles(\n  element: ExcalidrawElement,\n  zoom: number,\n  pointerType: PointerType = \"mouse\",\n) {\n  const handlers = handlerRectanglesFromCoords(\n    getElementAbsoluteCoords(element),\n    element.angle,\n    zoom,\n    pointerType,\n  );\n\n  if (\n    element.type === \"arrow\" ||\n    element.type === \"line\" ||\n    element.type === \"draw\"\n  ) {\n    if (element.points.length === 2) {\n      // only check the last point because starting point is always (0,0)\n      const [, p1] = element.points;\n\n      if (p1[0] === 0 || p1[1] === 0) {\n        return {\n          nw: handlers.nw,\n          se: handlers.se,\n        } as typeof handlers;\n      }\n\n      if (p1[0] > 0 && p1[1] < 0) {\n        return {\n          ne: handlers.ne,\n          sw: handlers.sw,\n        } as typeof handlers;\n      }\n\n      if (p1[0] > 0 && p1[1] > 0) {\n        return {\n          nw: handlers.nw,\n          se: handlers.se,\n        } as typeof handlers;\n      }\n\n      if (p1[0] < 0 && p1[1] > 0) {\n        return {\n          ne: handlers.ne,\n          sw: handlers.sw,\n        } as typeof handlers;\n      }\n\n      if (p1[0] < 0 && p1[1] < 0) {\n        return {\n          nw: handlers.nw,\n          se: handlers.se,\n        } as typeof handlers;\n      }\n    }\n  }\n\n  return handlers;\n}\n","import {\n  distanceBetweenPointAndSegment,\n  isPathALoop,\n  rotate,\n  isPointInPolygon,\n} from \"../math\";\nimport { pointsOnBezierCurves } from \"points-on-curve\";\n\nimport { NonDeletedExcalidrawElement } from \"./types\";\n\nimport {\n  getDiamondPoints,\n  getElementAbsoluteCoords,\n  getCurvePathOps,\n} from \"./bounds\";\nimport { Point } from \"../types\";\nimport { Drawable } from \"roughjs/bin/core\";\nimport { AppState } from \"../types\";\nimport { getShapeForElement } from \"../renderer/renderElement\";\nimport { isLinearElement } from \"./typeChecks\";\n\nfunction isElementDraggableFromInside(\n  element: NonDeletedExcalidrawElement,\n  appState: AppState,\n): boolean {\n  const dragFromInside =\n    element.backgroundColor !== \"transparent\" ||\n    appState.selectedElementIds[element.id];\n  if (element.type === \"line\" || element.type === \"draw\") {\n    return dragFromInside && isPathALoop(element.points);\n  }\n  return dragFromInside;\n}\n\nexport function hitTest(\n  element: NonDeletedExcalidrawElement,\n  appState: AppState,\n  x: number,\n  y: number,\n  zoom: number,\n): boolean {\n  // For shapes that are composed of lines, we only enable point-selection when the distance\n  // of the click is less than x pixels of any of the lines that the shape is composed of\n  const lineThreshold = 10 / zoom;\n\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  const cx = (x1 + x2) / 2;\n  const cy = (y1 + y2) / 2;\n  // reverse rotate the pointer\n  [x, y] = rotate(x, y, cx, cy, -element.angle);\n\n  if (element.type === \"ellipse\") {\n    // https://stackoverflow.com/a/46007540/232122\n    const px = Math.abs(x - element.x - element.width / 2);\n    const py = Math.abs(y - element.y - element.height / 2);\n\n    let tx = 0.707;\n    let ty = 0.707;\n\n    const a = Math.abs(element.width) / 2;\n    const b = Math.abs(element.height) / 2;\n\n    [0, 1, 2, 3].forEach((x) => {\n      const xx = a * tx;\n      const yy = b * ty;\n\n      const ex = ((a * a - b * b) * tx ** 3) / a;\n      const ey = ((b * b - a * a) * ty ** 3) / b;\n\n      const rx = xx - ex;\n      const ry = yy - ey;\n\n      const qx = px - ex;\n      const qy = py - ey;\n\n      const r = Math.hypot(ry, rx);\n      const q = Math.hypot(qy, qx);\n\n      tx = Math.min(1, Math.max(0, ((qx * r) / q + ex) / a));\n      ty = Math.min(1, Math.max(0, ((qy * r) / q + ey) / b));\n      const t = Math.hypot(ty, tx);\n      tx /= t;\n      ty /= t;\n    });\n\n    if (isElementDraggableFromInside(element, appState)) {\n      return (\n        a * tx - (px - lineThreshold) >= 0 && b * ty - (py - lineThreshold) >= 0\n      );\n    }\n    return Math.hypot(a * tx - px, b * ty - py) < lineThreshold;\n  } else if (element.type === \"rectangle\") {\n    if (isElementDraggableFromInside(element, appState)) {\n      return (\n        x > x1 - lineThreshold &&\n        x < x2 + lineThreshold &&\n        y > y1 - lineThreshold &&\n        y < y2 + lineThreshold\n      );\n    }\n\n    // (x1, y1) --A-- (x2, y1)\n    //    |D             |B\n    // (x1, y2) --C-- (x2, y2)\n    return (\n      distanceBetweenPointAndSegment(x, y, x1, y1, x2, y1) < lineThreshold || // A\n      distanceBetweenPointAndSegment(x, y, x2, y1, x2, y2) < lineThreshold || // B\n      distanceBetweenPointAndSegment(x, y, x2, y2, x1, y2) < lineThreshold || // C\n      distanceBetweenPointAndSegment(x, y, x1, y2, x1, y1) < lineThreshold // D\n    );\n  } else if (element.type === \"diamond\") {\n    x -= element.x;\n    y -= element.y;\n    let [\n      topX,\n      topY,\n      rightX,\n      rightY,\n      bottomX,\n      bottomY,\n      leftX,\n      leftY,\n    ] = getDiamondPoints(element);\n\n    if (isElementDraggableFromInside(element, appState)) {\n      // TODO: remove this when we normalize coordinates globally\n      if (topY > bottomY) {\n        [bottomY, topY] = [topY, bottomY];\n      }\n      if (rightX < leftX) {\n        [leftX, rightX] = [rightX, leftX];\n      }\n\n      topY -= lineThreshold;\n      bottomY += lineThreshold;\n      leftX -= lineThreshold;\n      rightX += lineThreshold;\n\n      // all deltas should be < 0. Delta > 0 indicates it's on the outside side\n      //  of the line.\n      //\n      //          (topX, topY)\n      //     D  /             \\ A\n      //      /               \\\n      //  (leftX, leftY)  (rightX, rightY)\n      //    C \\               / B\n      //      \\              /\n      //      (bottomX, bottomY)\n      //\n      // https://stackoverflow.com/a/2752753/927631\n      return (\n        // delta from line D\n        (leftX - topX) * (y - leftY) - (leftX - x) * (topY - leftY) <= 0 &&\n        // delta from line A\n        (topX - rightX) * (y - rightY) - (x - rightX) * (topY - rightY) <= 0 &&\n        // delta from line B\n        (rightX - bottomX) * (y - bottomY) -\n          (x - bottomX) * (rightY - bottomY) <=\n          0 &&\n        // delta from line C\n        (bottomX - leftX) * (y - leftY) - (x - leftX) * (bottomY - leftY) <= 0\n      );\n    }\n\n    return (\n      distanceBetweenPointAndSegment(x, y, topX, topY, rightX, rightY) <\n        lineThreshold ||\n      distanceBetweenPointAndSegment(x, y, rightX, rightY, bottomX, bottomY) <\n        lineThreshold ||\n      distanceBetweenPointAndSegment(x, y, bottomX, bottomY, leftX, leftY) <\n        lineThreshold ||\n      distanceBetweenPointAndSegment(x, y, leftX, leftY, topX, topY) <\n        lineThreshold\n    );\n  } else if (isLinearElement(element)) {\n    if (!getShapeForElement(element)) {\n      return false;\n    }\n    const shape = getShapeForElement(element) as Drawable[];\n\n    if (\n      x < x1 - lineThreshold ||\n      y < y1 - lineThreshold ||\n      x > x2 + lineThreshold ||\n      y > y2 + lineThreshold\n    ) {\n      return false;\n    }\n\n    const relX = x - element.x;\n    const relY = y - element.y;\n\n    if (isElementDraggableFromInside(element, appState)) {\n      const hit = shape.some((subshape) =>\n        hitTestCurveInside(subshape, relX, relY, lineThreshold),\n      );\n      if (hit) {\n        return true;\n      }\n    }\n\n    // hit thest all \"subshapes\" of the linear element\n    return shape.some((subshape) =>\n      hitTestRoughShape(subshape, relX, relY, lineThreshold),\n    );\n  } else if (element.type === \"text\") {\n    return x >= x1 && x <= x2 && y >= y1 && y <= y2;\n  } else if (element.type === \"selection\") {\n    console.warn(\"This should not happen, we need to investigate why it does.\");\n    return false;\n  }\n  throw new Error(`Unimplemented type ${element.type}`);\n}\n\nconst pointInBezierEquation = (\n  p0: Point,\n  p1: Point,\n  p2: Point,\n  p3: Point,\n  [mx, my]: Point,\n  lineThreshold: number,\n) => {\n  // B(t) = p0 * (1-t)^3 + 3p1 * t * (1-t)^2 + 3p2 * t^2 * (1-t) + p3 * t^3\n  const equation = (t: number, idx: number) =>\n    Math.pow(1 - t, 3) * p3[idx] +\n    3 * t * Math.pow(1 - t, 2) * p2[idx] +\n    3 * Math.pow(t, 2) * (1 - t) * p1[idx] +\n    p0[idx] * Math.pow(t, 3);\n\n  // go through t in increments of 0.01\n  let t = 0;\n  while (t <= 1.0) {\n    const tx = equation(t, 0);\n    const ty = equation(t, 1);\n\n    const diff = Math.sqrt(Math.pow(tx - mx, 2) + Math.pow(ty - my, 2));\n\n    if (diff < lineThreshold) {\n      return true;\n    }\n\n    t += 0.01;\n  }\n\n  return false;\n};\n\nconst hitTestCurveInside = (\n  drawable: Drawable,\n  x: number,\n  y: number,\n  lineThreshold: number,\n) => {\n  const ops = getCurvePathOps(drawable);\n  const points: Point[] = [];\n  for (const operation of ops) {\n    if (operation.op === \"move\") {\n      if (points.length) {\n        break;\n      }\n      points.push([operation.data[0], operation.data[1]]);\n    } else if (operation.op === \"bcurveTo\") {\n      points.push([operation.data[0], operation.data[1]]);\n      points.push([operation.data[2], operation.data[3]]);\n      points.push([operation.data[4], operation.data[5]]);\n    }\n  }\n  if (points.length >= 4) {\n    const polygonPoints = pointsOnBezierCurves(points as any, 10, 5);\n    return isPointInPolygon(polygonPoints, x, y);\n  }\n  return false;\n};\n\nconst hitTestRoughShape = (\n  drawable: Drawable,\n  x: number,\n  y: number,\n  lineThreshold: number,\n) => {\n  // read operations from first opSet\n  const ops = getCurvePathOps(drawable);\n\n  // set start position as (0,0) just in case\n  // move operation does not exist (unlikely but it is worth safekeeping it)\n  let currentP: Point = [0, 0];\n\n  return ops.some(({ op, data }, idx) => {\n    // There are only four operation types:\n    // move, bcurveTo, lineTo, and curveTo\n    if (op === \"move\") {\n      // change starting point\n      currentP = (data as unknown) as Point;\n      // move operation does not draw anything; so, it always\n      // returns false\n    } else if (op === \"bcurveTo\") {\n      // create points from bezier curve\n      // bezier curve stores data as a flattened array of three positions\n      // [x1, y1, x2, y2, x3, y3]\n      const p1 = [data[0], data[1]] as Point;\n      const p2 = [data[2], data[3]] as Point;\n      const p3 = [data[4], data[5]] as Point;\n\n      const p0 = currentP;\n      currentP = p3;\n\n      // check if points are on the curve\n      // cubic bezier curves require four parameters\n      // the first parameter is the last stored position (p0)\n      const retVal = pointInBezierEquation(\n        p0,\n        p1,\n        p2,\n        p3,\n        [x, y],\n        lineThreshold,\n      );\n\n      // set end point of bezier curve as the new starting point for\n      // upcoming operations as each operation is based on the last drawn\n      // position of the previous operation\n      return retVal;\n    } else if (op === \"lineTo\") {\n      // TODO: Implement this\n    } else if (op === \"qcurveTo\") {\n      // TODO: Implement this\n    }\n\n    return false;\n  });\n};\n","import {\n  ExcalidrawElement,\n  PointerType,\n  NonDeletedExcalidrawElement,\n} from \"./types\";\n\nimport {\n  OMIT_SIDES_FOR_MULTIPLE_ELEMENTS,\n  handlerRectanglesFromCoords,\n  handlerRectangles,\n} from \"./handlerRectangles\";\nimport { AppState } from \"../types\";\n\ntype HandlerRectanglesRet = keyof ReturnType<typeof handlerRectangles>;\n\nfunction isInHandlerRect(\n  handler: [number, number, number, number],\n  x: number,\n  y: number,\n) {\n  return (\n    x >= handler[0] &&\n    x <= handler[0] + handler[2] &&\n    y >= handler[1] &&\n    y <= handler[1] + handler[3]\n  );\n}\n\nexport function resizeTest(\n  element: NonDeletedExcalidrawElement,\n  appState: AppState,\n  x: number,\n  y: number,\n  zoom: number,\n  pointerType: PointerType,\n): HandlerRectanglesRet | false {\n  if (!appState.selectedElementIds[element.id]) {\n    return false;\n  }\n\n  const { rotation: rotationHandler, ...handlers } = handlerRectangles(\n    element,\n    zoom,\n    pointerType,\n  );\n\n  if (rotationHandler && isInHandlerRect(rotationHandler, x, y)) {\n    return \"rotation\" as HandlerRectanglesRet;\n  }\n\n  if (element.type === \"text\") {\n    // can't resize text elements\n    return false;\n  }\n\n  const filter = Object.keys(handlers).filter((key) => {\n    const handler = handlers[key as Exclude<HandlerRectanglesRet, \"rotation\">]!;\n    if (!handler) {\n      return false;\n    }\n    return isInHandlerRect(handler, x, y);\n  });\n\n  if (filter.length > 0) {\n    return filter[0] as HandlerRectanglesRet;\n  }\n\n  return false;\n}\n\nexport function getElementWithResizeHandler(\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n  { x, y }: { x: number; y: number },\n  zoom: number,\n  pointerType: PointerType,\n) {\n  return elements.reduce((result, element) => {\n    if (result) {\n      return result;\n    }\n    const resizeHandle = resizeTest(element, appState, x, y, zoom, pointerType);\n    return resizeHandle ? { element, resizeHandle } : null;\n  }, null as { element: NonDeletedExcalidrawElement; resizeHandle: ReturnType<typeof resizeTest> } | null);\n}\n\nexport function getResizeHandlerFromCoords(\n  [x1, y1, x2, y2]: readonly [number, number, number, number],\n  { x, y }: { x: number; y: number },\n  zoom: number,\n  pointerType: PointerType,\n) {\n  const handlers = handlerRectanglesFromCoords(\n    [x1, y1, x2, y2],\n    0,\n    zoom,\n    pointerType,\n    OMIT_SIDES_FOR_MULTIPLE_ELEMENTS,\n  );\n\n  const found = Object.keys(handlers).find((key) => {\n    const handler = handlers[key as Exclude<HandlerRectanglesRet, \"rotation\">]!;\n    return handler && isInHandlerRect(handler, x, y);\n  });\n  return (found || false) as HandlerRectanglesRet;\n}\n\nconst RESIZE_CURSORS = [\"ns\", \"nesw\", \"ew\", \"nwse\"];\nconst rotateResizeCursor = (cursor: string, angle: number) => {\n  const index = RESIZE_CURSORS.indexOf(cursor);\n  if (index >= 0) {\n    const a = Math.round(angle / (Math.PI / 4));\n    cursor = RESIZE_CURSORS[(index + a) % RESIZE_CURSORS.length];\n  }\n  return cursor;\n};\n\n/*\n * Returns bi-directional cursor for the element being resized\n */\nexport function getCursorForResizingElement(resizingElement: {\n  element?: ExcalidrawElement;\n  resizeHandle: ReturnType<typeof resizeTest>;\n}): string {\n  const { element, resizeHandle } = resizingElement;\n  const shouldSwapCursors =\n    element && Math.sign(element.height) * Math.sign(element.width) === -1;\n  let cursor = null;\n\n  switch (resizeHandle) {\n    case \"n\":\n    case \"s\":\n      cursor = \"ns\";\n      break;\n    case \"w\":\n    case \"e\":\n      cursor = \"ew\";\n      break;\n    case \"nw\":\n    case \"se\":\n      if (shouldSwapCursors) {\n        cursor = \"nesw\";\n      } else {\n        cursor = \"nwse\";\n      }\n      break;\n    case \"ne\":\n    case \"sw\":\n      if (shouldSwapCursors) {\n        cursor = \"nwse\";\n      } else {\n        cursor = \"nesw\";\n      }\n      break;\n    case \"rotation\":\n      return \"grab\";\n  }\n\n  if (cursor && element) {\n    cursor = rotateResizeCursor(cursor, element.angle);\n  }\n\n  return cursor ? `${cursor}-resize` : \"\";\n}\n\nexport function normalizeResizeHandle(\n  element: ExcalidrawElement,\n  resizeHandle: HandlerRectanglesRet,\n): HandlerRectanglesRet {\n  if (element.width >= 0 && element.height >= 0) {\n    return resizeHandle;\n  }\n\n  if (element.width < 0 && element.height < 0) {\n    switch (resizeHandle) {\n      case \"nw\":\n        return \"se\";\n      case \"ne\":\n        return \"sw\";\n      case \"se\":\n        return \"nw\";\n      case \"sw\":\n        return \"ne\";\n    }\n  } else if (element.width < 0) {\n    switch (resizeHandle) {\n      case \"nw\":\n        return \"ne\";\n      case \"ne\":\n        return \"nw\";\n      case \"se\":\n        return \"sw\";\n      case \"sw\":\n        return \"se\";\n      case \"e\":\n        return \"w\";\n      case \"w\":\n        return \"e\";\n    }\n  } else {\n    switch (resizeHandle) {\n      case \"nw\":\n        return \"sw\";\n      case \"ne\":\n        return \"se\";\n      case \"se\":\n        return \"ne\";\n      case \"sw\":\n        return \"nw\";\n      case \"n\":\n        return \"s\";\n      case \"s\":\n        return \"n\";\n    }\n  }\n\n  return resizeHandle;\n}\n","export const isDarwin = /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);\n\nexport const KEYS = {\n  ARROW_LEFT: \"ArrowLeft\",\n  ARROW_RIGHT: \"ArrowRight\",\n  ARROW_DOWN: \"ArrowDown\",\n  ARROW_UP: \"ArrowUp\",\n  ENTER: \"Enter\",\n  ESCAPE: \"Escape\",\n  DELETE: \"Delete\",\n  BACKSPACE: \"Backspace\",\n  CTRL_OR_CMD: isDarwin ? \"metaKey\" : \"ctrlKey\",\n  TAB: \"Tab\",\n  SPACE: \" \",\n  QUESTION_MARK: \"?\",\n  F_KEY_CODE: 70,\n  ALT_KEY_CODE: 18,\n  Z_KEY_CODE: 90,\n} as const;\n\nexport type Key = keyof typeof KEYS;\n\nexport function isArrowKey(keyCode: string) {\n  return (\n    keyCode === KEYS.ARROW_LEFT ||\n    keyCode === KEYS.ARROW_RIGHT ||\n    keyCode === KEYS.ARROW_DOWN ||\n    keyCode === KEYS.ARROW_UP\n  );\n}\n\nexport const getResizeCenterPointKey = (event: MouseEvent | KeyboardEvent) =>\n  event.altKey || event.which === KEYS.ALT_KEY_CODE;\nexport const getResizeWithSidesSameLengthKey = (event: MouseEvent) =>\n  event.shiftKey;\n","import { SHIFT_LOCKING_ANGLE } from \"../constants\";\nimport { rescalePoints } from \"../points\";\n\nimport { rotate, adjustXYWithRotation, getFlipAdjustment } from \"../math\";\nimport {\n  ExcalidrawLinearElement,\n  NonDeletedExcalidrawElement,\n  NonDeleted,\n} from \"./types\";\nimport {\n  getElementAbsoluteCoords,\n  getCommonBounds,\n  getResizedElementAbsoluteCoords,\n} from \"./bounds\";\nimport { isLinearElement } from \"./typeChecks\";\nimport { mutateElement } from \"./mutateElement\";\nimport { getPerfectElementSize } from \"./sizeHelpers\";\nimport {\n  resizeTest,\n  getCursorForResizingElement,\n  normalizeResizeHandle,\n} from \"./resizeTest\";\nimport {\n  getResizeCenterPointKey,\n  getResizeWithSidesSameLengthKey,\n} from \"../keys\";\n\ntype ResizeTestType = ReturnType<typeof resizeTest>;\n\nexport const resizeElements = (\n  resizeHandle: ResizeTestType,\n  setResizeHandle: (nextResizeHandle: ResizeTestType) => void,\n  selectedElements: NonDeletedExcalidrawElement[],\n  resizeArrowDirection: \"origin\" | \"end\",\n  event: PointerEvent, // XXX we want to make it independent?\n  pointerX: number,\n  pointerY: number,\n) => {\n  if (selectedElements.length === 1) {\n    const [element] = selectedElements;\n    if (resizeHandle === \"rotation\") {\n      rotateSingleElement(element, pointerX, pointerY, event.shiftKey);\n    } else if (\n      isLinearElement(element) &&\n      element.points.length === 2 &&\n      (resizeHandle === \"nw\" ||\n        resizeHandle === \"ne\" ||\n        resizeHandle === \"sw\" ||\n        resizeHandle === \"se\")\n    ) {\n      resizeSingleTwoPointElement(\n        element,\n        resizeArrowDirection,\n        event.shiftKey,\n        pointerX,\n        pointerY,\n      );\n    } else if (resizeHandle) {\n      resizeSingleElement(\n        element,\n        resizeHandle,\n        getResizeWithSidesSameLengthKey(event),\n        getResizeCenterPointKey(event),\n        pointerX,\n        pointerY,\n      );\n      setResizeHandle(normalizeResizeHandle(element, resizeHandle));\n      if (element.width < 0) {\n        mutateElement(element, { width: -element.width });\n      }\n      if (element.height < 0) {\n        mutateElement(element, { height: -element.height });\n      }\n    }\n\n    // update cursor\n    // FIXME it is not very nice to have this here\n    document.documentElement.style.cursor = getCursorForResizingElement({\n      element,\n      resizeHandle,\n    });\n\n    return true;\n  } else if (\n    selectedElements.length > 1 &&\n    (resizeHandle === \"nw\" ||\n      resizeHandle === \"ne\" ||\n      resizeHandle === \"sw\" ||\n      resizeHandle === \"se\")\n  ) {\n    resizeMultipleElements(selectedElements, resizeHandle, pointerX, pointerY);\n    return true;\n  }\n  return false;\n};\n\nconst rotateSingleElement = (\n  element: NonDeletedExcalidrawElement,\n  pointerX: number,\n  pointerY: number,\n  isAngleLocking: boolean,\n) => {\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  const cx = (x1 + x2) / 2;\n  const cy = (y1 + y2) / 2;\n  let angle = (5 * Math.PI) / 2 + Math.atan2(pointerY - cy, pointerX - cx);\n  if (isAngleLocking) {\n    angle += SHIFT_LOCKING_ANGLE / 2;\n    angle -= angle % SHIFT_LOCKING_ANGLE;\n  }\n  if (angle >= 2 * Math.PI) {\n    angle -= 2 * Math.PI;\n  }\n  mutateElement(element, { angle });\n};\n\nconst resizeSingleTwoPointElement = (\n  element: NonDeleted<ExcalidrawLinearElement>,\n  resizeArrowDirection: \"origin\" | \"end\",\n  isAngleLocking: boolean,\n  pointerX: number,\n  pointerY: number,\n) => {\n  const pointOrigin = element.points[0]; // can assume always [0, 0]?\n  const pointEnd = element.points[1];\n  if (resizeArrowDirection === \"end\") {\n    if (isAngleLocking) {\n      const { width, height } = getPerfectElementSize(\n        element.type,\n        pointerX - element.x,\n        pointerY - element.y,\n      );\n      mutateElement(element, {\n        points: [pointOrigin, [width, height]],\n      });\n    } else {\n      mutateElement(element, {\n        points: [\n          pointOrigin,\n          [\n            pointerX - pointOrigin[0] - element.x,\n            pointerY - pointOrigin[1] - element.y,\n          ],\n        ],\n      });\n    }\n  } else {\n    // resizeArrowDirection === \"origin\"\n    if (isAngleLocking) {\n      const { width, height } = getPerfectElementSize(\n        element.type,\n        element.x + pointEnd[0] - pointOrigin[0] - pointerX,\n        element.y + pointEnd[1] - pointOrigin[1] - pointerY,\n      );\n      mutateElement(element, {\n        x: element.x + pointEnd[0] - pointOrigin[0] - width,\n        y: element.y + pointEnd[1] - pointOrigin[1] - height,\n        points: [pointOrigin, [width, height]],\n      });\n    } else {\n      mutateElement(element, {\n        x: pointerX,\n        y: pointerY,\n        points: [\n          pointOrigin,\n          [\n            pointEnd[0] - (pointerX - pointOrigin[0] - element.x),\n            pointEnd[1] - (pointerY - pointOrigin[1] - element.y),\n          ],\n        ],\n      });\n    }\n  }\n};\n\nconst rescalePointsInElement = (\n  element: NonDeletedExcalidrawElement,\n  width: number,\n  height: number,\n) =>\n  isLinearElement(element)\n    ? {\n        points: rescalePoints(\n          0,\n          width,\n          rescalePoints(1, height, element.points),\n        ),\n      }\n    : {};\n\nconst resizeSingleElement = (\n  element: NonDeletedExcalidrawElement,\n  resizeHandle: \"n\" | \"s\" | \"w\" | \"e\" | \"nw\" | \"ne\" | \"sw\" | \"se\",\n  sidesWithSameLength: boolean,\n  isResizeFromCenter: boolean,\n  pointerX: number,\n  pointerY: number,\n) => {\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  const cx = (x1 + x2) / 2;\n  const cy = (y1 + y2) / 2;\n  // rotation pointer with reverse angle\n  const [rotatedX, rotatedY] = rotate(\n    pointerX,\n    pointerY,\n    cx,\n    cy,\n    -element.angle,\n  );\n  let scaleX = 1;\n  let scaleY = 1;\n  if (resizeHandle === \"e\" || resizeHandle === \"ne\" || resizeHandle === \"se\") {\n    scaleX = (rotatedX - x1) / (x2 - x1);\n  }\n  if (resizeHandle === \"s\" || resizeHandle === \"sw\" || resizeHandle === \"se\") {\n    scaleY = (rotatedY - y1) / (y2 - y1);\n  }\n  if (resizeHandle === \"w\" || resizeHandle === \"nw\" || resizeHandle === \"sw\") {\n    scaleX = (x2 - rotatedX) / (x2 - x1);\n  }\n  if (resizeHandle === \"n\" || resizeHandle === \"nw\" || resizeHandle === \"ne\") {\n    scaleY = (y2 - rotatedY) / (y2 - y1);\n  }\n  let nextWidth = element.width * scaleX;\n  let nextHeight = element.height * scaleY;\n  if (sidesWithSameLength) {\n    nextWidth = nextHeight = Math.max(nextWidth, nextHeight);\n  }\n  const [nextX1, nextY1, nextX2, nextY2] = getResizedElementAbsoluteCoords(\n    element,\n    nextWidth,\n    nextHeight,\n  );\n  const deltaX1 = (x1 - nextX1) / 2;\n  const deltaY1 = (y1 - nextY1) / 2;\n  const deltaX2 = (x2 - nextX2) / 2;\n  const deltaY2 = (y2 - nextY2) / 2;\n  const rescaledPoints = rescalePointsInElement(element, nextWidth, nextHeight);\n  const [finalX1, finalY1, finalX2, finalY2] = getResizedElementAbsoluteCoords(\n    {\n      ...element,\n      ...rescaledPoints,\n    },\n    Math.abs(nextWidth),\n    Math.abs(nextHeight),\n  );\n  const [flipDiffX, flipDiffY] = getFlipAdjustment(\n    resizeHandle,\n    nextWidth,\n    nextHeight,\n    nextX1,\n    nextY1,\n    nextX2,\n    nextY2,\n    finalX1,\n    finalY1,\n    finalX2,\n    finalY2,\n    isLinearElement(element),\n    element.angle,\n  );\n  const [nextElementX, nextElementY] = adjustXYWithRotation(\n    resizeHandle,\n    element.x - flipDiffX,\n    element.y - flipDiffY,\n    element.angle,\n    deltaX1,\n    deltaY1,\n    deltaX2,\n    deltaY2,\n    isResizeFromCenter,\n  );\n  if (\n    nextWidth !== 0 &&\n    nextHeight !== 0 &&\n    Number.isFinite(nextElementX) &&\n    Number.isFinite(nextElementY)\n  ) {\n    mutateElement(element, {\n      width: nextWidth,\n      height: nextHeight,\n      x: nextElementX,\n      y: nextElementY,\n      ...rescaledPoints,\n    });\n  }\n};\n\nconst resizeMultipleElements = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  resizeHandle: \"nw\" | \"ne\" | \"sw\" | \"se\",\n  pointerX: number,\n  pointerY: number,\n) => {\n  const [x1, y1, x2, y2] = getCommonBounds(elements);\n  switch (resizeHandle) {\n    case \"se\": {\n      const scale = Math.max(\n        (pointerX - x1) / (x2 - x1),\n        (pointerY - y1) / (y2 - y1),\n      );\n      if (scale > 0) {\n        elements.forEach((element) => {\n          const width = element.width * scale;\n          const height = element.height * scale;\n          const [origX1, origY1] = getElementAbsoluteCoords(element);\n          const rescaledPoints = rescalePointsInElement(element, width, height);\n          const [finalX1, finalY1] = getResizedElementAbsoluteCoords(\n            {\n              ...element,\n              ...rescaledPoints,\n            },\n            width,\n            height,\n          );\n          const x = element.x + (origX1 - x1) * (scale - 1) + origX1 - finalX1;\n          const y = element.y + (origY1 - y1) * (scale - 1) + origY1 - finalY1;\n          mutateElement(element, { width, height, x, y, ...rescaledPoints });\n        });\n      }\n      break;\n    }\n    case \"nw\": {\n      const scale = Math.max(\n        (x2 - pointerX) / (x2 - x1),\n        (y2 - pointerY) / (y2 - y1),\n      );\n      if (scale > 0) {\n        elements.forEach((element) => {\n          const width = element.width * scale;\n          const height = element.height * scale;\n          const [, , origX2, origY2] = getElementAbsoluteCoords(element);\n          const rescaledPoints = rescalePointsInElement(element, width, height);\n          const [, , finalX2, finalY2] = getResizedElementAbsoluteCoords(\n            {\n              ...element,\n              ...rescaledPoints,\n            },\n            width,\n            height,\n          );\n          const x = element.x - (x2 - origX2) * (scale - 1) + origX2 - finalX2;\n          const y = element.y - (y2 - origY2) * (scale - 1) + origY2 - finalY2;\n          mutateElement(element, { width, height, x, y, ...rescaledPoints });\n        });\n      }\n      break;\n    }\n    case \"ne\": {\n      const scale = Math.max(\n        (pointerX - x1) / (x2 - x1),\n        (y2 - pointerY) / (y2 - y1),\n      );\n      if (scale > 0) {\n        elements.forEach((element) => {\n          const width = element.width * scale;\n          const height = element.height * scale;\n          const [origX1, , , origY2] = getElementAbsoluteCoords(element);\n          const rescaledPoints = rescalePointsInElement(element, width, height);\n          const [finalX1, , , finalY2] = getResizedElementAbsoluteCoords(\n            {\n              ...element,\n              ...rescaledPoints,\n            },\n            width,\n            height,\n          );\n          const x = element.x + (origX1 - x1) * (scale - 1) + origX1 - finalX1;\n          const y = element.y - (y2 - origY2) * (scale - 1) + origY2 - finalY2;\n          mutateElement(element, { width, height, x, y, ...rescaledPoints });\n        });\n      }\n      break;\n    }\n    case \"sw\": {\n      const scale = Math.max(\n        (x2 - pointerX) / (x2 - x1),\n        (pointerY - y1) / (y2 - y1),\n      );\n      if (scale > 0) {\n        elements.forEach((element) => {\n          const width = element.width * scale;\n          const height = element.height * scale;\n          const [, origY1, origX2] = getElementAbsoluteCoords(element);\n          const rescaledPoints = rescalePointsInElement(element, width, height);\n          const [, finalY1, finalX2] = getResizedElementAbsoluteCoords(\n            {\n              ...element,\n              ...rescaledPoints,\n            },\n            width,\n            height,\n          );\n          const x = element.x - (x2 - origX2) * (scale - 1) + origX2 - finalX2;\n          const y = element.y + (origY1 - y1) * (scale - 1) + origY1 - finalY1;\n          mutateElement(element, { width, height, x, y, ...rescaledPoints });\n        });\n      }\n      break;\n    }\n  }\n};\n\nexport const canResizeMutlipleElements = (\n  elements: readonly NonDeletedExcalidrawElement[],\n) => {\n  return elements.every(\n    (element) =>\n      [\"rectangle\", \"diamond\", \"ellipse\"].includes(element.type) ||\n      isLinearElement(element),\n  );\n};\n\nexport const getResizeOffsetXY = (\n  resizeHandle: ResizeTestType,\n  selectedElements: NonDeletedExcalidrawElement[],\n  x: number,\n  y: number,\n): [number, number] => {\n  const [x1, y1, x2, y2] =\n    selectedElements.length === 1\n      ? getElementAbsoluteCoords(selectedElements[0])\n      : getCommonBounds(selectedElements);\n  const cx = (x1 + x2) / 2;\n  const cy = (y1 + y2) / 2;\n  const angle = selectedElements.length === 1 ? selectedElements[0].angle : 0;\n  [x, y] = rotate(x, y, cx, cy, -angle);\n  switch (resizeHandle) {\n    case \"n\":\n      return rotate(x - (x1 + x2) / 2, y - y1, 0, 0, angle);\n    case \"s\":\n      return rotate(x - (x1 + x2) / 2, y - y2, 0, 0, angle);\n    case \"w\":\n      return rotate(x - x1, y - (y1 + y2) / 2, 0, 0, angle);\n    case \"e\":\n      return rotate(x - x2, y - (y1 + y2) / 2, 0, 0, angle);\n    case \"nw\":\n      return rotate(x - x1, y - y1, 0, 0, angle);\n    case \"ne\":\n      return rotate(x - x2, y - y1, 0, 0, angle);\n    case \"sw\":\n      return rotate(x - x1, y - y2, 0, 0, angle);\n    case \"se\":\n      return rotate(x - x2, y - y2, 0, 0, angle);\n    default:\n      return [0, 0];\n  }\n};\n\nexport const getResizeArrowDirection = (\n  resizeHandle: ResizeTestType,\n  element: NonDeleted<ExcalidrawLinearElement>,\n): \"origin\" | \"end\" => {\n  const [, [px, py]] = element.points;\n  const isResizeEnd =\n    (resizeHandle === \"nw\" && (px < 0 || py < 0)) ||\n    (resizeHandle === \"ne\" && px >= 0) ||\n    (resizeHandle === \"sw\" && px <= 0) ||\n    (resizeHandle === \"se\" && (px > 0 || py > 0));\n  return isResizeEnd ? \"end\" : \"origin\";\n};\n","import { KEYS } from \"../keys\";\nimport { selectNode, isWritableElement } from \"../utils\";\nimport { globalSceneState } from \"../scene\";\nimport { isTextElement } from \"./typeChecks\";\nimport { CLASSES } from \"../constants\";\n\nfunction trimText(text: string) {\n  // whitespace only → trim all because we'd end up inserting invisible element\n  if (!text.trim()) {\n    return \"\";\n  }\n  // replace leading/trailing newlines (only) otherwise it messes up bounding\n  //  box calculation (there's also a bug in FF which inserts trailing newline\n  //  for multiline texts)\n  return text.replace(/^\\n+|\\n+$/g, \"\");\n}\n\ntype TextWysiwygParams = {\n  id: string;\n  initText: string;\n  x: number;\n  y: number;\n  strokeColor: string;\n  font: string;\n  opacity: number;\n  zoom: number;\n  angle: number;\n  textAlign: string;\n  onChange?: (text: string) => void;\n  onSubmit: (text: string) => void;\n  onCancel: () => void;\n};\n\nexport function textWysiwyg({\n  id,\n  initText,\n  x,\n  y,\n  strokeColor,\n  font,\n  opacity,\n  zoom,\n  angle,\n  onChange,\n  textAlign,\n  onSubmit,\n  onCancel,\n}: TextWysiwygParams) {\n  const editable = document.createElement(\"div\");\n  try {\n    editable.contentEditable = \"plaintext-only\";\n  } catch {\n    editable.contentEditable = \"true\";\n  }\n  editable.dir = \"auto\";\n  editable.tabIndex = 0;\n  editable.innerText = initText;\n  editable.dataset.type = \"wysiwyg\";\n\n  const degree = (180 * angle) / Math.PI;\n\n  Object.assign(editable.style, {\n    color: strokeColor,\n    position: \"fixed\",\n    opacity: opacity / 100,\n    top: `${y}px`,\n    left: `${x}px`,\n    transform: `translate(-50%, -50%) scale(${zoom}) rotate(${degree}deg)`,\n    textAlign: textAlign,\n    display: \"inline-block\",\n    font: font,\n    padding: \"4px\",\n    // This needs to have \"1px solid\" otherwise the carret doesn't show up\n    // the first time on Safari and Chrome!\n    outline: \"1px solid transparent\",\n    whiteSpace: \"nowrap\",\n    minHeight: \"1em\",\n    backfaceVisibility: \"hidden\",\n  });\n\n  editable.onpaste = (event) => {\n    try {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) {\n        return;\n      }\n      selection.deleteFromDocument();\n\n      const text = event.clipboardData!.getData(\"text\").replace(/\\r\\n?/g, \"\\n\");\n\n      const span = document.createElement(\"span\");\n      span.innerText = text;\n      const range = selection.getRangeAt(0);\n      range.insertNode(span);\n\n      // deselect\n      window.getSelection()!.removeAllRanges();\n      range.setStart(span, span.childNodes.length);\n      range.setEnd(span, span.childNodes.length);\n      selection.addRange(range);\n\n      event.preventDefault();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  if (onChange) {\n    editable.oninput = () => {\n      onChange(trimText(editable.innerText));\n    };\n  }\n\n  editable.onkeydown = (event) => {\n    if (event.key === KEYS.ESCAPE) {\n      event.preventDefault();\n      handleSubmit();\n    } else if (event.key === KEYS.ENTER && event[KEYS.CTRL_OR_CMD]) {\n      event.preventDefault();\n      if (event.isComposing || event.keyCode === 229) {\n        return;\n      }\n      handleSubmit();\n    } else if (event.key === KEYS.ENTER && !event.altKey) {\n      event.stopPropagation();\n    }\n  };\n\n  function stopEvent(event: Event) {\n    event.stopPropagation();\n  }\n\n  function handleSubmit() {\n    if (editable.innerText) {\n      onSubmit(trimText(editable.innerText));\n    } else {\n      onCancel();\n    }\n    cleanup();\n  }\n\n  function cleanup() {\n    if (isDestroyed) {\n      return;\n    }\n    isDestroyed = true;\n    // remove events to ensure they don't late-fire\n    editable.onblur = null;\n    editable.onpaste = null;\n    editable.oninput = null;\n    editable.onkeydown = null;\n\n    window.removeEventListener(\"wheel\", stopEvent, true);\n    window.removeEventListener(\"pointerdown\", onPointerDown);\n    window.removeEventListener(\"pointerup\", rebindBlur);\n    window.removeEventListener(\"blur\", handleSubmit);\n\n    unbindUpdate();\n\n    document.body.removeChild(editable);\n  }\n\n  const rebindBlur = () => {\n    window.removeEventListener(\"pointerup\", rebindBlur);\n    // deferred to guard against focus traps on various UIs that steal focus\n    //  upon pointerUp\n    setTimeout(() => {\n      editable.onblur = handleSubmit;\n      // case: clicking on the same property → no change → no update → no focus\n      editable.focus();\n    });\n  };\n\n  // prevent blur when changing properties from the menu\n  const onPointerDown = (event: MouseEvent) => {\n    if (\n      event.target instanceof HTMLElement &&\n      event.target.closest(`.${CLASSES.SHAPE_ACTIONS_MENU}`) &&\n      !isWritableElement(event.target)\n    ) {\n      editable.onblur = null;\n      window.addEventListener(\"pointerup\", rebindBlur);\n      // handle edge-case where pointerup doesn't fire e.g. due to user\n      //  alt-tabbing away\n      window.addEventListener(\"blur\", handleSubmit);\n    }\n  };\n\n  // handle updates of textElement properties of editing element\n  const unbindUpdate = globalSceneState.addCallback(() => {\n    const editingElement = globalSceneState\n      .getElementsIncludingDeleted()\n      .find((element) => element.id === id);\n    if (editingElement && isTextElement(editingElement)) {\n      Object.assign(editable.style, {\n        font: editingElement.font,\n        textAlign: editingElement.textAlign,\n        color: editingElement.strokeColor,\n        opacity: editingElement.opacity / 100,\n      });\n    }\n    editable.focus();\n  });\n\n  let isDestroyed = false;\n\n  editable.onblur = handleSubmit;\n  window.addEventListener(\"pointerdown\", onPointerDown);\n  window.addEventListener(\"wheel\", stopEvent, true);\n  document.body.appendChild(editable);\n  editable.focus();\n  selectNode(editable);\n}\n","import { measureText } from \"../utils\";\nimport { ExcalidrawTextElement } from \"./types\";\nimport { mutateElement } from \"./mutateElement\";\n\nexport const redrawTextBoundingBox = (element: ExcalidrawTextElement) => {\n  const metrics = measureText(element.text, element.font);\n  mutateElement(element, {\n    width: metrics.width,\n    height: metrics.height,\n    baseline: metrics.baseline,\n  });\n};\n","import { AppState } from \"../types\";\nimport { NonDeletedExcalidrawElement } from \"./types\";\nimport { getSelectedElements } from \"../scene\";\n\nexport const showSelectedShapeActions = (\n  appState: AppState,\n  elements: readonly NonDeletedExcalidrawElement[],\n) =>\n  Boolean(\n    appState.editingElement ||\n      getSelectedElements(elements, appState).length ||\n      appState.elementType !== \"selection\",\n  );\n","import {\n  ExcalidrawElement,\n  NonDeletedExcalidrawElement,\n  NonDeleted,\n} from \"./types\";\nimport { isInvisiblySmallElement } from \"./sizeHelpers\";\n\nexport {\n  newElement,\n  newTextElement,\n  newLinearElement,\n  duplicateElement,\n} from \"./newElement\";\nexport {\n  getElementAbsoluteCoords,\n  getElementBounds,\n  getCommonBounds,\n  getDiamondPoints,\n  getArrowPoints,\n} from \"./bounds\";\n\nexport {\n  OMIT_SIDES_FOR_MULTIPLE_ELEMENTS,\n  handlerRectanglesFromCoords,\n  handlerRectangles,\n} from \"./handlerRectangles\";\nexport { hitTest } from \"./collision\";\nexport {\n  resizeTest,\n  getCursorForResizingElement,\n  normalizeResizeHandle,\n  getElementWithResizeHandler,\n  getResizeHandlerFromCoords,\n} from \"./resizeTest\";\nexport {\n  resizeElements,\n  canResizeMutlipleElements,\n  getResizeOffsetXY,\n  getResizeArrowDirection,\n} from \"./resizeElements\";\nexport { isTextElement, isExcalidrawElement } from \"./typeChecks\";\nexport { textWysiwyg } from \"./textWysiwyg\";\nexport { redrawTextBoundingBox } from \"./textElement\";\nexport {\n  getPerfectElementSize,\n  isInvisiblySmallElement,\n  resizePerfectLineForNWHandler,\n  normalizeDimensions,\n} from \"./sizeHelpers\";\nexport { showSelectedShapeActions } from \"./showSelectedShapeActions\";\n\nexport function getSyncableElements(elements: readonly ExcalidrawElement[]) {\n  // There are places in Excalidraw where synthetic invisibly small elements are added and removed.\n  // It's probably best to keep those local otherwise there might be a race condition that\n  // gets the app into an invalid state. I've never seen it happen but I'm worried about it :)\n  return elements.filter((el) => el.isDeleted || !isInvisiblySmallElement(el));\n}\n\nexport function getElementMap(elements: readonly ExcalidrawElement[]) {\n  return elements.reduce(\n    (acc: { [key: string]: ExcalidrawElement }, element: ExcalidrawElement) => {\n      acc[element.id] = element;\n      return acc;\n    },\n    {},\n  );\n}\n\nexport function getDrawingVersion(elements: readonly ExcalidrawElement[]) {\n  return elements.reduce((acc, el) => acc + el.version, 0);\n}\n\nexport function getNonDeletedElements(elements: readonly ExcalidrawElement[]) {\n  return elements.filter(\n    (element) => !element.isDeleted,\n  ) as readonly NonDeletedExcalidrawElement[];\n}\n\nexport function isNonDeletedElement<T extends ExcalidrawElement>(\n  element: T,\n): element is NonDeleted<T> {\n  return !element.isDeleted;\n}\n","import LanguageDetector from \"i18next-browser-languagedetector\";\n\nexport const languages = [\n  { lng: \"en\", label: \"English\", data: require(\"./locales/en.json\") },\n  { lng: \"bg-BG\", label: \"Български\", data: require(\"./locales/bg-BG.json\") },\n  { lng: \"de-DE\", label: \"Deutsch\", data: require(\"./locales/de-DE.json\") },\n  { lng: \"es-ES\", label: \"Español\", data: require(\"./locales/es-ES.json\") },\n  { lng: \"ca-ES\", label: \"Catalan\", data: require(\"./locales/ca-ES.json\") },\n  { lng: \"el-GR\", label: \"Ελληνικά\", data: require(\"./locales/el-GR.json\") },\n  { lng: \"fr-FR\", label: \"Français\", data: require(\"./locales/fr-FR.json\") },\n  {\n    lng: \"id-ID\",\n    label: \"Bahasa Indonesia\",\n    data: require(\"./locales/id-ID.json\"),\n  },\n  { lng: \"it-IT\", label: \"Italiano\", data: require(\"./locales/it-IT.json\") },\n  { lng: \"hu-HU\", label: \"Magyar\", data: require(\"./locales/hu-HU.json\") },\n  { lng: \"nl-NL\", label: \"Nederlands\", data: require(\"./locales/nl-NL.json\") },\n  { lng: \"no-No\", label: \"Norsk\", data: require(\"./locales/no-NO.json\") },\n  { lng: \"pl-PL\", label: \"Polski\", data: require(\"./locales/pl-PL.json\") },\n  { lng: \"pt-PT\", label: \"Português\", data: require(\"./locales/pt-PT.json\") },\n  { lng: \"ru-RU\", label: \"Русский\", data: require(\"./locales/ru-RU.json\") },\n  { lng: \"fi-FI\", label: \"Suomi\", data: require(\"./locales/fi-FI.json\") },\n  { lng: \"tr-TR\", label: \"Türkçe\", data: require(\"./locales/tr-TR.json\") },\n  { lng: \"ja-JP\", label: \"日本語\", data: require(\"./locales/ja-JP.json\") },\n  { lng: \"ko-KR\", label: \"한국어\", data: require(\"./locales/ko-KR.json\") },\n  { lng: \"zh-TW\", label: \"繁體中文\", data: require(\"./locales/zh-TW.json\") },\n  { lng: \"zh-CN\", label: \"简体中文\", data: require(\"./locales/zh-CN.json\") },\n  {\n    lng: \"ar-SA\",\n    label: \"العربية\",\n    data: require(\"./locales/ar-SA.json\"),\n    rtl: true,\n  },\n  {\n    lng: \"he-IL\",\n    label: \"עברית\",\n    data: require(\"./locales/he-IL.json\"),\n    rtl: true,\n  },\n];\n\nlet currentLanguage = languages[0];\nconst fallbackLanguage = languages[0];\n\nexport function setLanguage(newLng: string | undefined) {\n  currentLanguage =\n    languages.find((language) => language.lng === newLng) || fallbackLanguage;\n\n  document.documentElement.dir = currentLanguage.rtl ? \"rtl\" : \"ltr\";\n\n  languageDetector.cacheUserLanguage(currentLanguage.lng);\n}\n\nexport function getLanguage() {\n  return currentLanguage;\n}\n\nfunction findPartsForData(data: any, parts: string[]) {\n  for (var i = 0; i < parts.length; ++i) {\n    const part = parts[i];\n    if (data[part] === undefined) {\n      return undefined;\n    }\n    data = data[part];\n  }\n  if (typeof data !== \"string\") {\n    return undefined;\n  }\n  return data;\n}\n\nexport function t(path: string, replacement?: { [key: string]: string }) {\n  const parts = path.split(\".\");\n  let translation =\n    findPartsForData(currentLanguage.data, parts) ||\n    findPartsForData(fallbackLanguage.data, parts);\n  if (translation === undefined) {\n    throw new Error(`Can't find translation for ${path}`);\n  }\n\n  if (replacement) {\n    for (var key in replacement) {\n      translation = translation.replace(`{{${key}}}`, replacement[key]);\n    }\n  }\n  return translation;\n}\n\nconst languageDetector = new LanguageDetector();\nlanguageDetector.init({\n  languageUtils: {\n    formatLanguageCode: function (lng: string) {\n      return lng;\n    },\n    isWhitelisted: () => true,\n  },\n  checkWhitelist: false,\n});\n\nsetLanguage(languageDetector.detect());\n","import { ExcalidrawElement } from \"../element/types\";\nimport { getCommonBounds } from \"../element\";\nimport { FlooredNumber } from \"../types\";\nimport { ScrollBars } from \"./types\";\nimport { getGlobalCSSVariable } from \"../utils\";\nimport { getLanguage } from \"../i18n\";\n\nexport const SCROLLBAR_MARGIN = 4;\nexport const SCROLLBAR_WIDTH = 6;\nexport const SCROLLBAR_COLOR = \"rgba(0,0,0,0.3)\";\n\nexport function getScrollBars(\n  elements: readonly ExcalidrawElement[],\n  viewportWidth: number,\n  viewportHeight: number,\n  {\n    scrollX,\n    scrollY,\n    zoom,\n  }: {\n    scrollX: FlooredNumber;\n    scrollY: FlooredNumber;\n    zoom: number;\n  },\n): ScrollBars {\n  // This is the bounding box of all the elements\n  const [\n    elementsMinX,\n    elementsMinY,\n    elementsMaxX,\n    elementsMaxY,\n  ] = getCommonBounds(elements);\n\n  // Apply zoom\n  const viewportWidthWithZoom = viewportWidth / zoom;\n  const viewportHeightWithZoom = viewportHeight / zoom;\n\n  const viewportWidthDiff = viewportWidth - viewportWidthWithZoom;\n  const viewportHeightDiff = viewportHeight - viewportHeightWithZoom;\n\n  const safeArea = {\n    top: parseInt(getGlobalCSSVariable(\"sat\")),\n    bottom: parseInt(getGlobalCSSVariable(\"sab\")),\n    left: parseInt(getGlobalCSSVariable(\"sal\")),\n    right: parseInt(getGlobalCSSVariable(\"sar\")),\n  };\n\n  const isRTL = getLanguage().rtl;\n\n  // The viewport is the rectangle currently visible for the user\n  const viewportMinX = -scrollX + viewportWidthDiff / 2 + safeArea.left;\n  const viewportMinY = -scrollY + viewportHeightDiff / 2 + safeArea.top;\n  const viewportMaxX = viewportMinX + viewportWidthWithZoom - safeArea.right;\n  const viewportMaxY = viewportMinY + viewportHeightWithZoom - safeArea.bottom;\n\n  // The scene is the bounding box of both the elements and viewport\n  const sceneMinX = Math.min(elementsMinX, viewportMinX);\n  const sceneMinY = Math.min(elementsMinY, viewportMinY);\n  const sceneMaxX = Math.max(elementsMaxX, viewportMaxX);\n  const sceneMaxY = Math.max(elementsMaxY, viewportMaxY);\n\n  // The scrollbar represents where the viewport is in relationship to the scene\n\n  return {\n    horizontal:\n      viewportMinX === sceneMinX && viewportMaxX === sceneMaxX\n        ? null\n        : {\n            x:\n              Math.max(safeArea.left, SCROLLBAR_MARGIN) +\n              ((viewportMinX - sceneMinX) / (sceneMaxX - sceneMinX)) *\n                viewportWidth,\n            y:\n              viewportHeight -\n              SCROLLBAR_WIDTH -\n              Math.max(SCROLLBAR_MARGIN, safeArea.bottom),\n            width:\n              ((viewportMaxX - viewportMinX) / (sceneMaxX - sceneMinX)) *\n                viewportWidth -\n              Math.max(SCROLLBAR_MARGIN * 2, safeArea.left + safeArea.right),\n            height: SCROLLBAR_WIDTH,\n          },\n    vertical:\n      viewportMinY === sceneMinY && viewportMaxY === sceneMaxY\n        ? null\n        : {\n            x: isRTL\n              ? Math.max(safeArea.left, SCROLLBAR_MARGIN)\n              : viewportWidth -\n                SCROLLBAR_WIDTH -\n                Math.max(safeArea.right, SCROLLBAR_MARGIN),\n            y:\n              ((viewportMinY - sceneMinY) / (sceneMaxY - sceneMinY)) *\n                viewportHeight +\n              Math.max(safeArea.top, SCROLLBAR_MARGIN),\n            width: SCROLLBAR_WIDTH,\n            height:\n              ((viewportMaxY - viewportMinY) / (sceneMaxY - sceneMinY)) *\n                viewportHeight -\n              Math.max(SCROLLBAR_MARGIN * 2, safeArea.top + safeArea.bottom),\n          },\n  };\n}\n\nexport function isOverScrollBars(scrollBars: ScrollBars, x: number, y: number) {\n  const [isOverHorizontalScrollBar, isOverVerticalScrollBar] = [\n    scrollBars.horizontal,\n    scrollBars.vertical,\n  ].map((scrollBar) => {\n    return (\n      scrollBar &&\n      scrollBar.x <= x &&\n      x <= scrollBar.x + scrollBar.width &&\n      scrollBar.y <= y &&\n      y <= scrollBar.y + scrollBar.height\n    );\n  });\n\n  return {\n    isOverHorizontalScrollBar,\n    isOverVerticalScrollBar,\n  };\n}\n","import {\n  ExcalidrawElement,\n  NonDeletedExcalidrawElement,\n} from \"../element/types\";\nimport { getElementAbsoluteCoords, getElementBounds } from \"../element\";\nimport { AppState } from \"../types\";\nimport { newElementWith } from \"../element/mutateElement\";\n\nexport function getElementsWithinSelection(\n  elements: readonly NonDeletedExcalidrawElement[],\n  selection: NonDeletedExcalidrawElement,\n) {\n  const [\n    selectionX1,\n    selectionY1,\n    selectionX2,\n    selectionY2,\n  ] = getElementAbsoluteCoords(selection);\n  return elements.filter((element) => {\n    const [elementX1, elementY1, elementX2, elementY2] = getElementBounds(\n      element,\n    );\n\n    return (\n      element.type !== \"selection\" &&\n      selectionX1 <= elementX1 &&\n      selectionY1 <= elementY1 &&\n      selectionX2 >= elementX2 &&\n      selectionY2 >= elementY2\n    );\n  });\n}\n\nexport function deleteSelectedElements(\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n) {\n  return {\n    elements: elements.map((el) => {\n      if (appState.selectedElementIds[el.id]) {\n        return newElementWith(el, { isDeleted: true });\n      }\n      return el;\n    }),\n    appState: {\n      ...appState,\n      selectedElementIds: {},\n    },\n  };\n}\n\nexport function isSomeElementSelected(\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n): boolean {\n  return elements.some((element) => appState.selectedElementIds[element.id]);\n}\n\n/**\n * Returns common attribute (picked by `getAttribute` callback) of selected\n *  elements. If elements don't share the same value, returns `null`.\n */\nexport function getCommonAttributeOfSelectedElements<T>(\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n  getAttribute: (element: ExcalidrawElement) => T,\n): T | null {\n  const attributes = Array.from(\n    new Set(\n      getSelectedElements(elements, appState).map((element) =>\n        getAttribute(element),\n      ),\n    ),\n  );\n  return attributes.length === 1 ? attributes[0] : null;\n}\n\nexport function getSelectedElements(\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n) {\n  return elements.filter((element) => appState.selectedElementIds[element.id]);\n}\n\nexport function getTargetElement(\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n) {\n  return appState.editingElement\n    ? [appState.editingElement]\n    : getSelectedElements(elements, appState);\n}\n","import { FlooredNumber } from \"../types\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { getCommonBounds } from \"../element\";\n\nexport function normalizeScroll(pos: number) {\n  return Math.floor(pos) as FlooredNumber;\n}\n\nexport function calculateScrollCenter(\n  elements: readonly ExcalidrawElement[],\n): { scrollX: FlooredNumber; scrollY: FlooredNumber } {\n  if (!elements.length) {\n    return {\n      scrollX: normalizeScroll(0),\n      scrollY: normalizeScroll(0),\n    };\n  }\n\n  const [x1, y1, x2, y2] = getCommonBounds(elements);\n\n  const centerX = (x1 + x2) / 2;\n  const centerY = (y1 + y2) / 2;\n\n  return {\n    scrollX: normalizeScroll(window.innerWidth / 2 - centerX),\n    scrollY: normalizeScroll(window.innerHeight / 2 - centerY),\n  };\n}\n","import {\n  ExcalidrawElement,\n  NonDeletedExcalidrawElement,\n} from \"../element/types\";\n\nimport { getElementAbsoluteCoords, hitTest } from \"../element\";\nimport { AppState } from \"../types\";\n\nexport const hasBackground = (type: string) =>\n  type === \"rectangle\" ||\n  type === \"ellipse\" ||\n  type === \"diamond\" ||\n  type === \"draw\" ||\n  type === \"line\";\n\nexport const hasStroke = (type: string) =>\n  type === \"rectangle\" ||\n  type === \"ellipse\" ||\n  type === \"diamond\" ||\n  type === \"arrow\" ||\n  type === \"draw\" ||\n  type === \"line\";\n\nexport const hasText = (type: string) => type === \"text\";\n\nexport function getElementAtPosition(\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n  x: number,\n  y: number,\n  zoom: number,\n) {\n  let hitElement = null;\n  // We need to to hit testing from front (end of the array) to back (beginning of the array)\n  for (let i = elements.length - 1; i >= 0; --i) {\n    if (elements[i].isDeleted) {\n      continue;\n    }\n    if (hitTest(elements[i], appState, x, y, zoom)) {\n      hitElement = elements[i];\n      break;\n    }\n  }\n\n  return hitElement;\n}\n\nexport function getElementContainingPosition(\n  elements: readonly ExcalidrawElement[],\n  x: number,\n  y: number,\n) {\n  let hitElement = null;\n  // We need to to hit testing from front (end of the array) to back (beginning of the array)\n  for (let i = elements.length - 1; i >= 0; --i) {\n    if (elements[i].isDeleted) {\n      continue;\n    }\n    const [x1, y1, x2, y2] = getElementAbsoluteCoords(elements[i]);\n    if (x1 < x && x < x2 && y1 < y && y < y2) {\n      hitElement = elements[i];\n      break;\n    }\n  }\n  return hitElement;\n}\n","export function getZoomOrigin(canvas: HTMLCanvasElement | null, scale: number) {\n  if (canvas === null) {\n    return { x: 0, y: 0 };\n  }\n  const context = canvas.getContext(\"2d\");\n  if (context === null) {\n    return { x: 0, y: 0 };\n  }\n\n  const normalizedCanvasWidth = canvas.width / scale;\n  const normalizedCanvasHeight = canvas.height / scale;\n\n  return {\n    x: normalizedCanvasWidth / 2,\n    y: normalizedCanvasHeight / 2,\n  };\n}\n\nexport function getNormalizedZoom(zoom: number): number {\n  const normalizedZoom = parseFloat(zoom.toFixed(2));\n  const clampedZoom = Math.max(0.1, Math.min(normalizedZoom, 2));\n  return clampedZoom;\n}\n","import {\n  ExcalidrawElement,\n  NonDeletedExcalidrawElement,\n} from \"../element/types\";\nimport { getNonDeletedElements } from \"../element\";\n\nexport interface SceneStateCallback {\n  (): void;\n}\n\nexport interface SceneStateCallbackRemover {\n  (): void;\n}\n\nclass GlobalScene {\n  private callbacks: Set<SceneStateCallback> = new Set();\n\n  constructor(private _elements: readonly ExcalidrawElement[] = []) {}\n\n  getElementsIncludingDeleted() {\n    return this._elements;\n  }\n\n  getElements(): readonly NonDeletedExcalidrawElement[] {\n    return getNonDeletedElements(this._elements);\n  }\n\n  replaceAllElements(nextElements: readonly ExcalidrawElement[]) {\n    this._elements = nextElements;\n    this.informMutation();\n  }\n\n  informMutation() {\n    for (const callback of Array.from(this.callbacks)) {\n      callback();\n    }\n  }\n\n  addCallback(cb: SceneStateCallback): SceneStateCallbackRemover {\n    if (this.callbacks.has(cb)) {\n      throw new Error();\n    }\n\n    this.callbacks.add(cb);\n\n    return () => {\n      if (!this.callbacks.has(cb)) {\n        throw new Error();\n      }\n      this.callbacks.delete(cb);\n    };\n  }\n}\n\nexport const globalSceneState = new GlobalScene();\n","import { FlooredNumber } from \"./types\";\nimport { getZoomOrigin } from \"./scene\";\nimport { CURSOR_TYPE } from \"./constants\";\n\nexport const SVG_NS = \"http://www.w3.org/2000/svg\";\n\nlet mockDateTime: string | null = null;\n\nexport function setDateTimeForTests(dateTime: string) {\n  mockDateTime = dateTime;\n}\n\nexport const getDateTime = () => {\n  if (mockDateTime) {\n    return mockDateTime;\n  }\n\n  const date = new Date();\n  const year = date.getFullYear();\n  const month = `${date.getMonth() + 1}`.padStart(2, \"0\");\n  const day = `${date.getDate()}`.padStart(2, \"0\");\n  const hr = `${date.getHours()}`.padStart(2, \"0\");\n  const min = `${date.getMinutes()}`.padStart(2, \"0\");\n\n  return `${year}-${month}-${day}-${hr}${min}`;\n};\n\nexport function capitalizeString(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function isToolIcon(\n  target: Element | EventTarget | null,\n): target is HTMLElement {\n  return target instanceof HTMLElement && target.className.includes(\"ToolIcon\");\n}\n\nexport function isInputLike(\n  target: Element | EventTarget | null,\n): target is\n  | HTMLInputElement\n  | HTMLTextAreaElement\n  | HTMLSelectElement\n  | HTMLBRElement\n  | HTMLDivElement {\n  return (\n    (target instanceof HTMLElement && target.dataset.type === \"wysiwyg\") ||\n    target instanceof HTMLBRElement || // newline in wysiwyg\n    target instanceof HTMLInputElement ||\n    target instanceof HTMLTextAreaElement ||\n    target instanceof HTMLSelectElement\n  );\n}\n\nexport function isWritableElement(\n  target: Element | EventTarget | null,\n): target is\n  | HTMLInputElement\n  | HTMLTextAreaElement\n  | HTMLBRElement\n  | HTMLDivElement {\n  return (\n    (target instanceof HTMLElement && target.dataset.type === \"wysiwyg\") ||\n    target instanceof HTMLBRElement || // newline in wysiwyg\n    target instanceof HTMLTextAreaElement ||\n    (target instanceof HTMLInputElement &&\n      (target.type === \"text\" || target.type === \"number\"))\n  );\n}\n\n// https://github.com/grassator/canvas-text-editor/blob/master/lib/FontMetrics.js\nexport function measureText(text: string, font: string) {\n  const line = document.createElement(\"div\");\n  const body = document.body;\n  line.style.position = \"absolute\";\n  line.style.whiteSpace = \"pre\";\n  line.style.font = font;\n  body.appendChild(line);\n  // Now we can measure width and height of the letter\n  line.innerText = text;\n  const width = line.offsetWidth;\n  const height = line.offsetHeight;\n  // Now creating 1px sized item that will be aligned to baseline\n  // to calculate baseline shift\n  const span = document.createElement(\"span\");\n  span.style.display = \"inline-block\";\n  span.style.overflow = \"hidden\";\n  span.style.width = \"1px\";\n  span.style.height = \"1px\";\n  line.appendChild(span);\n  // Baseline is important for positioning text on canvas\n  const baseline = span.offsetTop + span.offsetHeight;\n  document.body.removeChild(line);\n\n  return { width, height, baseline };\n}\n\nexport function debounce<T extends any[]>(\n  fn: (...args: T) => void,\n  timeout: number,\n) {\n  let handle = 0;\n  let lastArgs: T;\n  const ret = (...args: T) => {\n    lastArgs = args;\n    clearTimeout(handle);\n    handle = window.setTimeout(() => fn(...args), timeout);\n  };\n  ret.flush = () => {\n    clearTimeout(handle);\n    fn(...lastArgs);\n  };\n  return ret;\n}\n\nexport function selectNode(node: Element) {\n  const selection = window.getSelection();\n  if (selection) {\n    const range = document.createRange();\n    range.selectNodeContents(node);\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function removeSelection() {\n  const selection = window.getSelection();\n  if (selection) {\n    selection.removeAllRanges();\n  }\n}\n\nexport function distance(x: number, y: number) {\n  return Math.abs(x - y);\n}\n\nexport function resetCursor() {\n  document.documentElement.style.cursor = \"\";\n}\n\nexport function setCursorForShape(shape: string) {\n  if (shape === \"selection\") {\n    resetCursor();\n  } else {\n    document.documentElement.style.cursor = CURSOR_TYPE.CROSSHAIR;\n  }\n}\n\nexport const isFullScreen = () =>\n  document.fullscreenElement?.nodeName === \"HTML\";\n\nexport const allowFullScreen = () =>\n  document.documentElement.requestFullscreen();\n\nexport const exitFullScreen = () => document.exitFullscreen();\n\nexport const getShortcutKey = (shortcut: string): string => {\n  const isMac = /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);\n  if (isMac) {\n    return `${shortcut\n      .replace(/CtrlOrCmd/i, \"Cmd\")\n      .replace(/Alt/i, \"Option\")\n      .replace(/Del/i, \"Delete\")\n      .replace(/Enter|Return/i, \"Enter\")}`;\n  }\n  return `${shortcut.replace(/CtrlOrCmd/i, \"Ctrl\")}`;\n};\nexport function viewportCoordsToSceneCoords(\n  { clientX, clientY }: { clientX: number; clientY: number },\n  {\n    scrollX,\n    scrollY,\n    zoom,\n  }: {\n    scrollX: FlooredNumber;\n    scrollY: FlooredNumber;\n    zoom: number;\n  },\n  canvas: HTMLCanvasElement | null,\n  scale: number,\n) {\n  const zoomOrigin = getZoomOrigin(canvas, scale);\n  const clientXWithZoom = zoomOrigin.x + (clientX - zoomOrigin.x) / zoom;\n  const clientYWithZoom = zoomOrigin.y + (clientY - zoomOrigin.y) / zoom;\n\n  const x = clientXWithZoom - scrollX;\n  const y = clientYWithZoom - scrollY;\n\n  return { x, y };\n}\n\nexport function sceneCoordsToViewportCoords(\n  { sceneX, sceneY }: { sceneX: number; sceneY: number },\n  {\n    scrollX,\n    scrollY,\n    zoom,\n  }: {\n    scrollX: FlooredNumber;\n    scrollY: FlooredNumber;\n    zoom: number;\n  },\n  canvas: HTMLCanvasElement | null,\n  scale: number,\n) {\n  const zoomOrigin = getZoomOrigin(canvas, scale);\n  const sceneXWithZoomAndScroll =\n    zoomOrigin.x - (zoomOrigin.x - sceneX - scrollX) * zoom;\n  const sceneYWithZoomAndScroll =\n    zoomOrigin.y - (zoomOrigin.y - sceneY - scrollY) * zoom;\n\n  const x = sceneXWithZoomAndScroll;\n  const y = sceneYWithZoomAndScroll;\n\n  return { x, y };\n}\n\nexport function getGlobalCSSVariable(name: string) {\n  return getComputedStyle(document.documentElement).getPropertyValue(\n    `--${name}`,\n  );\n}\n","import React from \"react\";\nimport * as Sentry from \"@sentry/browser\";\nimport { resetCursor } from \"../utils\";\nimport { t } from \"../i18n\";\n\ninterface TopErrorBoundaryState {\n  hasError: boolean;\n  sentryEventId: string;\n  localStorage: string;\n}\n\nexport class TopErrorBoundary extends React.Component<\n  any,\n  TopErrorBoundaryState\n> {\n  state: TopErrorBoundaryState = {\n    hasError: false,\n    sentryEventId: \"\",\n    localStorage: \"\",\n  };\n\n  render() {\n    return this.state.hasError ? this.errorSplash() : this.props.children;\n  }\n\n  componentDidCatch(error: Error, errorInfo: any) {\n    resetCursor();\n    const _localStorage: any = {};\n    for (const [key, value] of Object.entries({ ...localStorage })) {\n      try {\n        _localStorage[key] = JSON.parse(value);\n      } catch (error) {\n        _localStorage[key] = value;\n      }\n    }\n\n    Sentry.withScope((scope) => {\n      scope.setExtras(errorInfo);\n      const eventId = Sentry.captureException(error);\n\n      this.setState((state) => ({\n        hasError: true,\n        sentryEventId: eventId,\n        localStorage: JSON.stringify(_localStorage),\n      }));\n    });\n  }\n\n  private selectTextArea(event: React.MouseEvent<HTMLTextAreaElement>) {\n    if (event.target !== document.activeElement) {\n      event.preventDefault();\n      (event.target as HTMLTextAreaElement).select();\n    }\n  }\n\n  private async createGithubIssue() {\n    let body = \"\";\n    try {\n      const templateStrFn = (await import(\"../bug-issue-template\")).default;\n      body = encodeURIComponent(templateStrFn(this.state.sentryEventId));\n    } catch (error) {\n      console.error(error);\n    }\n\n    window.open(\n      `https://github.com/excalidraw/excalidraw/issues/new?body=${body}`,\n    );\n  }\n\n  private errorSplash() {\n    return (\n      <div className=\"ErrorSplash\">\n        <div className=\"ErrorSplash-messageContainer\">\n          <div className=\"ErrorSplash-paragraph bigger align-center\">\n            {t(\"errorSplash.headingMain_pre\")}\n            <button onClick={() => window.location.reload()}>\n              {t(\"errorSplash.headingMain_button\")}\n            </button>\n          </div>\n          <div className=\"ErrorSplash-paragraph align-center\">\n            {t(\"errorSplash.clearCanvasMessage\")}\n            <button\n              onClick={() => {\n                try {\n                  localStorage.clear();\n                  window.location.reload();\n                } catch (error) {\n                  console.error(error);\n                }\n              }}\n            >\n              {t(\"errorSplash.clearCanvasMessage_button\")}\n            </button>\n            <br />\n            <div className=\"smaller\">\n              <span role=\"img\" aria-label=\"warning\">\n                ⚠️\n              </span>\n              {t(\"errorSplash.clearCanvasCaveat\")}\n              <span role=\"img\" aria-hidden=\"true\">\n                ⚠️\n              </span>\n            </div>\n          </div>\n          <div>\n            <div className=\"ErrorSplash-paragraph\">\n              {t(\"errorSplash.trackedToSentry_pre\")}\n              {this.state.sentryEventId}\n              {t(\"errorSplash.trackedToSentry_post\")}\n            </div>\n            <div className=\"ErrorSplash-paragraph\">\n              {t(\"errorSplash.openIssueMessage_pre\")}\n              <button onClick={() => this.createGithubIssue()}>\n                {t(\"errorSplash.openIssueMessage_button\")}\n              </button>\n              {t(\"errorSplash.openIssueMessage_post\")}\n            </div>\n            <div className=\"ErrorSplash-paragraph\">\n              <div className=\"ErrorSplash-details\">\n                <label>{t(\"errorSplash.sceneContent\")}</label>\n                <textarea\n                  rows={5}\n                  onPointerDown={this.selectTextArea}\n                  readOnly={true}\n                  value={this.state.localStorage}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { useState, useEffect, useRef, useContext } from \"react\";\n\nconst context = React.createContext(false);\n\nexport function IsMobileProvider({ children }: { children: React.ReactNode }) {\n  const query = useRef<MediaQueryList>();\n  if (!query.current) {\n    query.current = window.matchMedia\n      ? window.matchMedia(\n          \"(max-width: 640px), (max-height: 500px) and (max-width: 1000px)\",\n        )\n      : (({\n          matches: false,\n          addListener: () => {},\n          removeListener: () => {},\n        } as any) as MediaQueryList);\n  }\n  const [isMobile, setMobile] = useState(query.current.matches);\n\n  useEffect(() => {\n    const handler = () => setMobile(query.current!.matches);\n    query.current!.addListener(handler);\n    return () => query.current!.removeListener(handler);\n  }, []);\n\n  return <context.Provider value={isMobile}>{children}</context.Provider>;\n}\n\nexport default function useIsMobile() {\n  return useContext(context);\n}\n","import oc from \"open-color\";\nimport { AppState, FlooredNumber } from \"./types\";\nimport { getDateTime } from \"./utils\";\nimport { t } from \"./i18n\";\n\nexport const DEFAULT_FONT = \"20px Virgil\";\nexport const DEFAULT_TEXT_ALIGN = \"left\";\n\nexport function getDefaultAppState(): AppState {\n  return {\n    isLoading: false,\n    errorMessage: null,\n    draggingElement: null,\n    resizingElement: null,\n    multiElement: null,\n    editingElement: null,\n    elementType: \"selection\",\n    elementLocked: false,\n    exportBackground: true,\n    shouldAddWatermark: false,\n    currentItemStrokeColor: oc.black,\n    currentItemBackgroundColor: \"transparent\",\n    currentItemFillStyle: \"hachure\",\n    currentItemStrokeWidth: 1,\n    currentItemStrokeStyle: \"solid\",\n    currentItemRoughness: 1,\n    currentItemOpacity: 100,\n    currentItemFont: DEFAULT_FONT,\n    currentItemTextAlign: DEFAULT_TEXT_ALIGN,\n    viewBackgroundColor: oc.white,\n    scrollX: 0 as FlooredNumber,\n    scrollY: 0 as FlooredNumber,\n    cursorX: 0,\n    cursorY: 0,\n    cursorButton: \"up\",\n    scrolledOutside: false,\n    name: `${t(\"labels.untitled\")}-${getDateTime()}`,\n    username: \"\",\n    isCollaborating: false,\n    isResizing: false,\n    isRotating: false,\n    selectionElement: null,\n    zoom: 1,\n    openMenu: null,\n    lastPointerDownWith: \"mouse\",\n    selectedElementIds: {},\n    collaborators: new Map(),\n    shouldCacheIgnoreZoom: false,\n    showShortcutsDialog: false,\n    zenModeEnabled: false,\n  };\n}\n\nexport function clearAppStateForLocalStorage(appState: AppState) {\n  const {\n    draggingElement,\n    resizingElement,\n    multiElement,\n    editingElement,\n    selectionElement,\n    isResizing,\n    isRotating,\n    collaborators,\n    isCollaborating,\n    isLoading,\n    errorMessage,\n    showShortcutsDialog,\n    ...exportedState\n  } = appState;\n  return exportedState;\n}\n\nexport function clearAppStatePropertiesForHistory(\n  appState: AppState,\n): Partial<AppState> {\n  return {\n    selectedElementIds: appState.selectedElementIds,\n    exportBackground: appState.exportBackground,\n    shouldAddWatermark: appState.shouldAddWatermark,\n    currentItemStrokeColor: appState.currentItemStrokeColor,\n    currentItemBackgroundColor: appState.currentItemBackgroundColor,\n    currentItemFillStyle: appState.currentItemFillStyle,\n    currentItemStrokeWidth: appState.currentItemStrokeWidth,\n    currentItemRoughness: appState.currentItemRoughness,\n    currentItemOpacity: appState.currentItemOpacity,\n    currentItemFont: appState.currentItemFont,\n    currentItemTextAlign: appState.currentItemTextAlign,\n    viewBackgroundColor: appState.viewBackgroundColor,\n    name: appState.name,\n  };\n}\n\nexport function cleanAppStateForExport(appState: AppState) {\n  return {\n    viewBackgroundColor: appState.viewBackgroundColor,\n  };\n}\n","import oc from \"open-color\";\n\nconst shades = (i: number) => [\n  oc.red[i],\n  oc.pink[i],\n  oc.grape[i],\n  oc.violet[i],\n  oc.indigo[i],\n  oc.blue[i],\n  oc.cyan[i],\n  oc.teal[i],\n  oc.green[i],\n  oc.lime[i],\n  oc.yellow[i],\n  oc.orange[i],\n];\n\nexport default {\n  canvasBackground: [oc.white, oc.gray[0], oc.gray[1], ...shades(0)],\n  elementBackground: [\"transparent\", oc.gray[4], oc.gray[6], ...shades(6)],\n  elementStroke: [oc.black, oc.gray[8], oc.gray[7], ...shades(9)],\n};\n","import { RoughCanvas } from \"roughjs/bin/canvas\";\nimport { RoughSVG } from \"roughjs/bin/svg\";\nimport oc from \"open-color\";\n\nimport { FlooredNumber, AppState } from \"../types\";\nimport {\n  ExcalidrawElement,\n  NonDeletedExcalidrawElement,\n} from \"../element/types\";\nimport {\n  getElementAbsoluteCoords,\n  OMIT_SIDES_FOR_MULTIPLE_ELEMENTS,\n  handlerRectanglesFromCoords,\n  handlerRectangles,\n  getCommonBounds,\n  canResizeMutlipleElements,\n} from \"../element\";\n\nimport { roundRect } from \"./roundRect\";\nimport { SceneState } from \"../scene/types\";\nimport {\n  getScrollBars,\n  SCROLLBAR_COLOR,\n  SCROLLBAR_WIDTH,\n} from \"../scene/scrollbars\";\nimport { getSelectedElements } from \"../scene/selection\";\n\nimport { renderElement, renderElementToSvg } from \"./renderElement\";\nimport colors from \"../colors\";\n\ntype HandlerRectanglesRet = keyof ReturnType<typeof handlerRectangles>;\n\nfunction colorsForClientId(clientId: string) {\n  // Naive way of getting an integer out of the clientId\n  const sum = clientId.split(\"\").reduce((a, str) => a + str.charCodeAt(0), 0);\n\n  // Skip transparent background.\n  const backgrounds = colors.elementBackground.slice(1);\n  const strokes = colors.elementStroke.slice(1);\n  return {\n    background: backgrounds[sum % backgrounds.length],\n    stroke: strokes[sum % strokes.length],\n  };\n}\n\nfunction strokeRectWithRotation(\n  context: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  cx: number,\n  cy: number,\n  angle: number,\n  fill?: boolean,\n) {\n  context.translate(cx, cy);\n  context.rotate(angle);\n  if (fill) {\n    context.fillRect(x - cx, y - cy, width, height);\n  }\n  context.strokeRect(x - cx, y - cy, width, height);\n  context.rotate(-angle);\n  context.translate(-cx, -cy);\n}\n\nfunction strokeCircle(\n  context: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n) {\n  context.beginPath();\n  context.arc(x + width / 2, y + height / 2, width / 2, 0, Math.PI * 2);\n  context.fill();\n  context.stroke();\n}\n\nexport function renderScene(\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n  selectionElement: NonDeletedExcalidrawElement | null,\n  scale: number,\n  rc: RoughCanvas,\n  canvas: HTMLCanvasElement,\n  sceneState: SceneState,\n  // extra options, currently passed by export helper\n  {\n    renderScrollbars = true,\n    renderSelection = true,\n    // Whether to employ render optimizations to improve performance.\n    // Should not be turned on for export operations and similar, because it\n    //  doesn't guarantee pixel-perfect output.\n    renderOptimizations = false,\n  }: {\n    renderScrollbars?: boolean;\n    renderSelection?: boolean;\n    renderOptimizations?: boolean;\n  } = {},\n) {\n  if (!canvas) {\n    return { atLeastOneVisibleElement: false };\n  }\n\n  const context = canvas.getContext(\"2d\")!;\n  context.scale(scale, scale);\n\n  // When doing calculations based on canvas width we should used normalized one\n  const normalizedCanvasWidth = canvas.width / scale;\n  const normalizedCanvasHeight = canvas.height / scale;\n\n  // Paint background\n  if (typeof sceneState.viewBackgroundColor === \"string\") {\n    const hasTransparence =\n      sceneState.viewBackgroundColor === \"transparent\" ||\n      sceneState.viewBackgroundColor.length === 5 || // #RGBA\n      sceneState.viewBackgroundColor.length === 9 || // #RRGGBBA\n      /(hsla|rgba)\\(/.test(sceneState.viewBackgroundColor);\n    if (hasTransparence) {\n      context.clearRect(0, 0, normalizedCanvasWidth, normalizedCanvasHeight);\n    }\n    const fillStyle = context.fillStyle;\n    context.fillStyle = sceneState.viewBackgroundColor;\n    context.fillRect(0, 0, normalizedCanvasWidth, normalizedCanvasHeight);\n    context.fillStyle = fillStyle;\n  } else {\n    context.clearRect(0, 0, normalizedCanvasWidth, normalizedCanvasHeight);\n  }\n\n  // Apply zoom\n  const zoomTranslationX = (-normalizedCanvasWidth * (sceneState.zoom - 1)) / 2;\n  const zoomTranslationY =\n    (-normalizedCanvasHeight * (sceneState.zoom - 1)) / 2;\n  context.translate(zoomTranslationX, zoomTranslationY);\n  context.scale(sceneState.zoom, sceneState.zoom);\n\n  // Paint visible elements\n  const visibleElements = elements.filter((element) =>\n    isVisibleElement(\n      element,\n      normalizedCanvasWidth,\n      normalizedCanvasHeight,\n      sceneState,\n    ),\n  );\n\n  visibleElements.forEach((element) => {\n    renderElement(element, rc, context, renderOptimizations, sceneState);\n  });\n\n  // Pain selection element\n  if (selectionElement) {\n    renderElement(\n      selectionElement,\n      rc,\n      context,\n      renderOptimizations,\n      sceneState,\n    );\n  }\n\n  // Paint selected elements\n  if (renderSelection) {\n    context.translate(sceneState.scrollX, sceneState.scrollY);\n\n    const selections = elements.reduce((acc, element) => {\n      const selectionColors = [];\n      // local user\n      if (appState.selectedElementIds[element.id]) {\n        selectionColors.push(oc.black);\n      }\n      // remote users\n      if (sceneState.remoteSelectedElementIds[element.id]) {\n        selectionColors.push(\n          ...sceneState.remoteSelectedElementIds[element.id].map((socketId) => {\n            const { background } = colorsForClientId(socketId);\n            return background;\n          }),\n        );\n      }\n      if (selectionColors.length) {\n        acc.push({ element, selectionColors });\n      }\n      return acc;\n    }, [] as { element: ExcalidrawElement; selectionColors: string[] }[]);\n\n    selections.forEach(({ element, selectionColors }) => {\n      const [\n        elementX1,\n        elementY1,\n        elementX2,\n        elementY2,\n      ] = getElementAbsoluteCoords(element);\n\n      const elementWidth = elementX2 - elementX1;\n      const elementHeight = elementY2 - elementY1;\n\n      const initialLineDash = context.getLineDash();\n      const lineWidth = context.lineWidth;\n      const lineDashOffset = context.lineDashOffset;\n      const strokeStyle = context.strokeStyle;\n\n      const dashedLinePadding = 4 / sceneState.zoom;\n      const dashWidth = 8 / sceneState.zoom;\n      const spaceWidth = 4 / sceneState.zoom;\n\n      context.lineWidth = 1 / sceneState.zoom;\n\n      const count = selectionColors.length;\n      for (var i = 0; i < count; ++i) {\n        context.strokeStyle = selectionColors[i];\n        context.setLineDash([\n          dashWidth,\n          spaceWidth + (dashWidth + spaceWidth) * (count - 1),\n        ]);\n        context.lineDashOffset = (dashWidth + spaceWidth) * i;\n        strokeRectWithRotation(\n          context,\n          elementX1 - dashedLinePadding,\n          elementY1 - dashedLinePadding,\n          elementWidth + dashedLinePadding * 2,\n          elementHeight + dashedLinePadding * 2,\n          elementX1 + elementWidth / 2,\n          elementY1 + elementHeight / 2,\n          element.angle,\n        );\n      }\n      context.lineDashOffset = lineDashOffset;\n      context.strokeStyle = strokeStyle;\n      context.lineWidth = lineWidth;\n      context.setLineDash(initialLineDash);\n    });\n    context.translate(-sceneState.scrollX, -sceneState.scrollY);\n\n    const locallySelectedElements = getSelectedElements(elements, appState);\n\n    // Paint resize handlers\n    if (locallySelectedElements.length === 1) {\n      context.translate(sceneState.scrollX, sceneState.scrollY);\n      context.fillStyle = oc.white;\n      const handlers = handlerRectangles(\n        locallySelectedElements[0],\n        sceneState.zoom,\n      );\n      Object.keys(handlers).forEach((key) => {\n        const handler = handlers[key as HandlerRectanglesRet];\n        if (handler !== undefined) {\n          const lineWidth = context.lineWidth;\n          context.lineWidth = 1 / sceneState.zoom;\n          if (key === \"rotation\") {\n            strokeCircle(\n              context,\n              handler[0],\n              handler[1],\n              handler[2],\n              handler[3],\n            );\n          } else if (locallySelectedElements[0].type !== \"text\") {\n            strokeRectWithRotation(\n              context,\n              handler[0],\n              handler[1],\n              handler[2],\n              handler[3],\n              handler[0] + handler[2] / 2,\n              handler[1] + handler[3] / 2,\n              locallySelectedElements[0].angle,\n              true, // fill before stroke\n            );\n          }\n          context.lineWidth = lineWidth;\n        }\n      });\n      context.translate(-sceneState.scrollX, -sceneState.scrollY);\n    } else if (locallySelectedElements.length > 1) {\n      if (canResizeMutlipleElements(locallySelectedElements)) {\n        const dashedLinePadding = 4 / sceneState.zoom;\n        context.translate(sceneState.scrollX, sceneState.scrollY);\n        context.fillStyle = oc.white;\n        const [x1, y1, x2, y2] = getCommonBounds(locallySelectedElements);\n        const initialLineDash = context.getLineDash();\n        context.setLineDash([2 / sceneState.zoom]);\n        const lineWidth = context.lineWidth;\n        context.lineWidth = 1 / sceneState.zoom;\n        strokeRectWithRotation(\n          context,\n          x1 - dashedLinePadding,\n          y1 - dashedLinePadding,\n          x2 - x1 + dashedLinePadding * 2,\n          y2 - y1 + dashedLinePadding * 2,\n          (x1 + x2) / 2,\n          (y1 + y2) / 2,\n          0,\n        );\n        context.lineWidth = lineWidth;\n        context.setLineDash(initialLineDash);\n        const handlers = handlerRectanglesFromCoords(\n          [x1, y1, x2, y2],\n          0,\n          sceneState.zoom,\n          undefined,\n          OMIT_SIDES_FOR_MULTIPLE_ELEMENTS,\n        );\n        Object.keys(handlers).forEach((key) => {\n          const handler = handlers[key as HandlerRectanglesRet];\n          if (handler !== undefined) {\n            const lineWidth = context.lineWidth;\n            context.lineWidth = 1 / sceneState.zoom;\n            strokeRectWithRotation(\n              context,\n              handler[0],\n              handler[1],\n              handler[2],\n              handler[3],\n              handler[0] + handler[2] / 2,\n              handler[1] + handler[3] / 2,\n              0,\n              true, // fill before stroke\n            );\n            context.lineWidth = lineWidth;\n          }\n        });\n        context.translate(-sceneState.scrollX, -sceneState.scrollY);\n      }\n    }\n  }\n\n  // Reset zoom\n  context.scale(1 / sceneState.zoom, 1 / sceneState.zoom);\n  context.translate(-zoomTranslationX, -zoomTranslationY);\n\n  // Paint remote pointers\n  for (const clientId in sceneState.remotePointerViewportCoords) {\n    let { x, y } = sceneState.remotePointerViewportCoords[clientId];\n    const username = sceneState.remotePointerUsernames[clientId];\n\n    const width = 9;\n    const height = 14;\n\n    const isOutOfBounds =\n      x < 0 ||\n      x > normalizedCanvasWidth - width ||\n      y < 0 ||\n      y > normalizedCanvasHeight - height;\n\n    x = Math.max(x, 0);\n    x = Math.min(x, normalizedCanvasWidth - width);\n    y = Math.max(y, 0);\n    y = Math.min(y, normalizedCanvasHeight - height);\n\n    const { background, stroke } = colorsForClientId(clientId);\n\n    const strokeStyle = context.strokeStyle;\n    const fillStyle = context.fillStyle;\n    const globalAlpha = context.globalAlpha;\n    context.strokeStyle = stroke;\n    context.fillStyle = background;\n    if (isOutOfBounds) {\n      context.globalAlpha = 0.2;\n    }\n\n    if (\n      sceneState.remotePointerButton &&\n      sceneState.remotePointerButton[clientId] === \"down\"\n    ) {\n      context.beginPath();\n      context.arc(x, y, 15, 0, 2 * Math.PI, false);\n      context.lineWidth = 3;\n      context.strokeStyle = \"#ffffff88\";\n      context.stroke();\n      context.closePath();\n\n      context.beginPath();\n      context.arc(x, y, 15, 0, 2 * Math.PI, false);\n      context.lineWidth = 1;\n      context.strokeStyle = stroke;\n      context.stroke();\n      context.closePath();\n    }\n\n    context.beginPath();\n    context.moveTo(x, y);\n    context.lineTo(x + 1, y + 14);\n    context.lineTo(x + 4, y + 9);\n    context.lineTo(x + 9, y + 10);\n    context.lineTo(x, y);\n    context.fill();\n    context.stroke();\n\n    if (!isOutOfBounds && username) {\n      const offsetX = x + width;\n      const offsetY = y + height;\n      const paddingHorizontal = 4;\n      const paddingVertical = 4;\n      const measure = context.measureText(username);\n      const measureHeight =\n        measure.actualBoundingBoxDescent + measure.actualBoundingBoxAscent;\n\n      // Border\n      context.fillStyle = stroke;\n      context.globalAlpha = globalAlpha;\n      context.fillRect(\n        offsetX - 1,\n        offsetY - 1,\n        measure.width + 2 * paddingHorizontal + 2,\n        measureHeight + 2 * paddingVertical + 2,\n      );\n      // Background\n      context.fillStyle = background;\n      context.fillRect(\n        offsetX,\n        offsetY,\n        measure.width + 2 * paddingHorizontal,\n        measureHeight + 2 * paddingVertical,\n      );\n      context.fillStyle = oc.white;\n      context.fillText(\n        username,\n        offsetX + paddingHorizontal,\n        offsetY + paddingVertical + measure.actualBoundingBoxAscent,\n      );\n    }\n\n    context.strokeStyle = strokeStyle;\n    context.fillStyle = fillStyle;\n    context.globalAlpha = globalAlpha;\n    context.closePath();\n  }\n\n  // Paint scrollbars\n  let scrollBars;\n  if (renderScrollbars) {\n    scrollBars = getScrollBars(\n      elements,\n      normalizedCanvasWidth,\n      normalizedCanvasHeight,\n      sceneState,\n    );\n\n    const fillStyle = context.fillStyle;\n    const strokeStyle = context.strokeStyle;\n    context.fillStyle = SCROLLBAR_COLOR;\n    context.strokeStyle = \"rgba(255,255,255,0.8)\";\n    [scrollBars.horizontal, scrollBars.vertical].forEach((scrollBar) => {\n      if (scrollBar) {\n        roundRect(\n          context,\n          scrollBar.x,\n          scrollBar.y,\n          scrollBar.width,\n          scrollBar.height,\n          SCROLLBAR_WIDTH / 2,\n        );\n      }\n    });\n    context.fillStyle = fillStyle;\n    context.strokeStyle = strokeStyle;\n  }\n\n  context.scale(1 / scale, 1 / scale);\n\n  return { atLeastOneVisibleElement: visibleElements.length > 0, scrollBars };\n}\n\nfunction isVisibleElement(\n  element: ExcalidrawElement,\n  viewportWidth: number,\n  viewportHeight: number,\n  {\n    scrollX,\n    scrollY,\n    zoom,\n  }: {\n    scrollX: FlooredNumber;\n    scrollY: FlooredNumber;\n    zoom: number;\n  },\n) {\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n\n  // Apply zoom\n  const viewportWidthWithZoom = viewportWidth / zoom;\n  const viewportHeightWithZoom = viewportHeight / zoom;\n\n  const viewportWidthDiff = viewportWidth - viewportWidthWithZoom;\n  const viewportHeightDiff = viewportHeight - viewportHeightWithZoom;\n\n  return (\n    x2 + scrollX - viewportWidthDiff / 2 >= 0 &&\n    x1 + scrollX - viewportWidthDiff / 2 <= viewportWidthWithZoom &&\n    y2 + scrollY - viewportHeightDiff / 2 >= 0 &&\n    y1 + scrollY - viewportHeightDiff / 2 <= viewportHeightWithZoom\n  );\n}\n\n// This should be only called for exporting purposes\nexport function renderSceneToSvg(\n  elements: readonly NonDeletedExcalidrawElement[],\n  rsvg: RoughSVG,\n  svgRoot: SVGElement,\n  {\n    offsetX = 0,\n    offsetY = 0,\n  }: {\n    offsetX?: number;\n    offsetY?: number;\n  } = {},\n) {\n  if (!svgRoot) {\n    return;\n  }\n  // render elements\n  elements.forEach((element) => {\n    if (!element.isDeleted) {\n      renderElementToSvg(\n        element,\n        rsvg,\n        svgRoot,\n        element.x + offsetX,\n        element.y + offsetY,\n      );\n    }\n  });\n}\n","/**\n * https://stackoverflow.com/a/3368118\n * Draws a rounded rectangle using the current state of the canvas.\n * @param {CanvasRenderingContext2D} context\n * @param {Number} x The top left x coordinate\n * @param {Number} y The top left y coordinate\n * @param {Number} width The width of the rectangle\n * @param {Number} height The height of the rectangle\n * @param {Number} radius The corner radius\n */\nexport function roundRect(\n  context: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  radius: number,\n) {\n  context.beginPath();\n  context.moveTo(x + radius, y);\n  context.lineTo(x + width - radius, y);\n  context.quadraticCurveTo(x + width, y, x + width, y + radius);\n  context.lineTo(x + width, y + height - radius);\n  context.quadraticCurveTo(\n    x + width,\n    y + height,\n    x + width - radius,\n    y + height,\n  );\n  context.lineTo(x + radius, y + height);\n  context.quadraticCurveTo(x, y + height, x, y + height - radius);\n  context.lineTo(x, y + radius);\n  context.quadraticCurveTo(x, y, x + radius, y);\n  context.closePath();\n  context.fill();\n  context.stroke();\n}\n","import rough from \"roughjs/bin/rough\";\nimport oc from \"open-color\";\nimport { newTextElement } from \"../element\";\nimport { NonDeletedExcalidrawElement } from \"../element/types\";\nimport { getCommonBounds } from \"../element/bounds\";\nimport { renderScene, renderSceneToSvg } from \"../renderer/renderScene\";\nimport { distance, SVG_NS, measureText } from \"../utils\";\nimport { normalizeScroll } from \"./scroll\";\nimport { AppState } from \"../types\";\nimport { t } from \"../i18n\";\n\nexport const SVG_EXPORT_TAG = `<!-- svg-source:excalidraw -->`;\n\nexport function exportToCanvas(\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n  {\n    exportBackground,\n    exportPadding = 10,\n    viewBackgroundColor,\n    scale = 1,\n    shouldAddWatermark,\n  }: {\n    exportBackground: boolean;\n    exportPadding?: number;\n    scale?: number;\n    viewBackgroundColor: string;\n    shouldAddWatermark: boolean;\n  },\n  createCanvas: (width: number, height: number) => any = function (\n    width,\n    height,\n  ) {\n    const tempCanvas = document.createElement(\"canvas\");\n    tempCanvas.width = width * scale;\n    tempCanvas.height = height * scale;\n    return tempCanvas;\n  },\n) {\n  let sceneElements = elements;\n  if (shouldAddWatermark) {\n    const [, , maxX, maxY] = getCommonBounds(elements);\n    sceneElements = [...sceneElements, getWatermarkElement(maxX, maxY)];\n  }\n\n  // calculate smallest area to fit the contents in\n  const [minX, minY, maxX, maxY] = getCommonBounds(sceneElements);\n  const width = distance(minX, maxX) + exportPadding * 2;\n  const height =\n    distance(minY, maxY) +\n    exportPadding +\n    (shouldAddWatermark ? 0 : exportPadding);\n\n  const tempCanvas: any = createCanvas(width, height);\n\n  renderScene(\n    sceneElements,\n    appState,\n    null,\n    scale,\n    rough.canvas(tempCanvas),\n    tempCanvas,\n    {\n      viewBackgroundColor: exportBackground ? viewBackgroundColor : null,\n      scrollX: normalizeScroll(-minX + exportPadding),\n      scrollY: normalizeScroll(-minY + exportPadding),\n      zoom: 1,\n      remotePointerViewportCoords: {},\n      remoteSelectedElementIds: {},\n      shouldCacheIgnoreZoom: false,\n      remotePointerUsernames: {},\n    },\n    {\n      renderScrollbars: false,\n      renderSelection: false,\n      renderOptimizations: false,\n    },\n  );\n\n  return tempCanvas;\n}\n\nexport function exportToSvg(\n  elements: readonly NonDeletedExcalidrawElement[],\n  {\n    exportBackground,\n    exportPadding = 10,\n    viewBackgroundColor,\n    shouldAddWatermark,\n  }: {\n    exportBackground: boolean;\n    exportPadding?: number;\n    viewBackgroundColor: string;\n    shouldAddWatermark: boolean;\n  },\n): SVGSVGElement {\n  let sceneElements = elements;\n  if (shouldAddWatermark) {\n    const [, , maxX, maxY] = getCommonBounds(elements);\n    sceneElements = [...sceneElements, getWatermarkElement(maxX, maxY)];\n  }\n\n  // calculate canvas dimensions\n  const [minX, minY, maxX, maxY] = getCommonBounds(sceneElements);\n  const width = distance(minX, maxX) + exportPadding * 2;\n  const height =\n    distance(minY, maxY) +\n    exportPadding +\n    (shouldAddWatermark ? 0 : exportPadding);\n\n  // initialze SVG root\n  const svgRoot = document.createElementNS(SVG_NS, \"svg\");\n  svgRoot.setAttribute(\"version\", \"1.1\");\n  svgRoot.setAttribute(\"xmlns\", SVG_NS);\n  svgRoot.setAttribute(\"viewBox\", `0 0 ${width} ${height}`);\n\n  svgRoot.innerHTML = `\n  ${SVG_EXPORT_TAG}\n  <defs>\n    <style>\n      @font-face {\n        font-family: \"Virgil\";\n        src: url(\"https://excalidraw.com/FG_Virgil.woff2\");\n      }\n      @font-face {\n        font-family: \"Cascadia\";\n        src: url(\"https://excalidraw.com/Cascadia.woff2\");\n      }\n    </style>\n  </defs>\n  `;\n\n  // render backgroiund rect\n  if (exportBackground && viewBackgroundColor) {\n    const rect = svgRoot.ownerDocument!.createElementNS(SVG_NS, \"rect\");\n    rect.setAttribute(\"x\", \"0\");\n    rect.setAttribute(\"y\", \"0\");\n    rect.setAttribute(\"width\", `${width}`);\n    rect.setAttribute(\"height\", `${height}`);\n    rect.setAttribute(\"fill\", viewBackgroundColor);\n    svgRoot.appendChild(rect);\n  }\n\n  const rsvg = rough.svg(svgRoot);\n  renderSceneToSvg(sceneElements, rsvg, svgRoot, {\n    offsetX: -minX + exportPadding,\n    offsetY: -minY + exportPadding,\n  });\n\n  return svgRoot;\n}\n\nfunction getWatermarkElement(maxX: number, maxY: number) {\n  const text = t(\"labels.madeWithExcalidraw\");\n  const font = \"16px Virgil\";\n  const { width: textWidth } = measureText(text, font);\n\n  return newTextElement({\n    text,\n    font,\n    textAlign: \"center\",\n    x: maxX - textWidth / 2,\n    y: maxY + 16,\n    strokeColor: oc.gray[5],\n    backgroundColor: \"transparent\",\n    fillStyle: \"hachure\",\n    strokeWidth: 1,\n    strokeStyle: \"solid\",\n    roughness: 1,\n    opacity: 100,\n  });\n}\n","import {\n  ExcalidrawElement,\n  NonDeletedExcalidrawElement,\n} from \"./element/types\";\nimport { getSelectedElements } from \"./scene\";\nimport { AppState } from \"./types\";\nimport { SVG_EXPORT_TAG } from \"./scene/export\";\n\nlet CLIPBOARD = \"\";\nlet PREFER_APP_CLIPBOARD = false;\n\nexport const probablySupportsClipboardReadText =\n  \"clipboard\" in navigator && \"readText\" in navigator.clipboard;\n\nexport const probablySupportsClipboardWriteText =\n  \"clipboard\" in navigator && \"writeText\" in navigator.clipboard;\n\nexport const probablySupportsClipboardBlob =\n  \"clipboard\" in navigator &&\n  \"write\" in navigator.clipboard &&\n  \"ClipboardItem\" in window &&\n  \"toBlob\" in HTMLCanvasElement.prototype;\n\nexport async function copyToAppClipboard(\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n) {\n  CLIPBOARD = JSON.stringify(getSelectedElements(elements, appState));\n  try {\n    // when copying to in-app clipboard, clear system clipboard so that if\n    //  system clip contains text on paste we know it was copied *after* user\n    //  copied elements, and thus we should prefer the text content.\n    await copyTextToSystemClipboard(null);\n    PREFER_APP_CLIPBOARD = false;\n  } catch {\n    // if clearing system clipboard didn't work, we should prefer in-app\n    //  clipboard even if there's text in system clipboard on paste, because\n    //  we can't be sure of the order of copy operations\n    PREFER_APP_CLIPBOARD = true;\n  }\n}\n\nexport function getAppClipboard(): {\n  elements?: readonly ExcalidrawElement[];\n} {\n  if (!CLIPBOARD) {\n    return {};\n  }\n\n  try {\n    const clipboardElements = JSON.parse(CLIPBOARD);\n\n    if (\n      Array.isArray(clipboardElements) &&\n      clipboardElements.length > 0 &&\n      clipboardElements[0].type // need to implement a better check here...\n    ) {\n      return { elements: clipboardElements };\n    }\n  } catch (error) {\n    console.error(error);\n  }\n\n  return {};\n}\n\nexport async function getClipboardContent(\n  event: ClipboardEvent | null,\n): Promise<{\n  text?: string;\n  elements?: readonly ExcalidrawElement[];\n}> {\n  try {\n    const text = event\n      ? event.clipboardData?.getData(\"text/plain\").trim()\n      : probablySupportsClipboardReadText &&\n        (await navigator.clipboard.readText());\n\n    if (text && !PREFER_APP_CLIPBOARD && !text.includes(SVG_EXPORT_TAG)) {\n      return { text };\n    }\n  } catch (error) {\n    console.error(error);\n  }\n\n  return getAppClipboard();\n}\n\nexport async function copyCanvasToClipboardAsPng(canvas: HTMLCanvasElement) {\n  return new Promise((resolve, reject) => {\n    try {\n      canvas.toBlob(async function (blob: any) {\n        try {\n          await navigator.clipboard.write([\n            new window.ClipboardItem({ \"image/png\": blob }),\n          ]);\n          resolve();\n        } catch (error) {\n          reject(error);\n        }\n      });\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n\nexport async function copyCanvasToClipboardAsSvg(svgroot: SVGSVGElement) {\n  try {\n    await navigator.clipboard.writeText(svgroot.outerHTML);\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function copyTextToSystemClipboard(text: string | null) {\n  let copied = false;\n  if (probablySupportsClipboardWriteText) {\n    try {\n      // NOTE: doesn't work on FF on non-HTTPS domains, or when document\n      //  not focused\n      await navigator.clipboard.writeText(text || \"\");\n      copied = true;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  // Note that execCommand doesn't allow copying empty strings, so if we're\n  //  clearing clipboard using this API, we must copy at least an empty char\n  if (!copied && !copyTextViaExecCommand(text || \" \")) {\n    throw new Error(\"couldn't copy\");\n  }\n}\n\n// adapted from https://github.com/zenorocha/clipboard.js/blob/ce79f170aa655c408b6aab33c9472e8e4fa52e19/src/clipboard-action.js#L48\nfunction copyTextViaExecCommand(text: string) {\n  const isRTL = document.documentElement.getAttribute(\"dir\") === \"rtl\";\n\n  const textarea = document.createElement(\"textarea\");\n\n  textarea.style.border = \"0\";\n  textarea.style.padding = \"0\";\n  textarea.style.margin = \"0\";\n  textarea.style.position = \"absolute\";\n  textarea.style[isRTL ? \"right\" : \"left\"] = \"-9999px\";\n  const yPosition = window.pageYOffset || document.documentElement.scrollTop;\n  textarea.style.top = `${yPosition}px`;\n  // Prevent zooming on iOS\n  textarea.style.fontSize = \"12pt\";\n\n  textarea.setAttribute(\"readonly\", \"\");\n  textarea.value = text;\n\n  document.body.appendChild(textarea);\n\n  let success = false;\n\n  try {\n    textarea.select();\n    textarea.setSelectionRange(0, textarea.value.length);\n\n    success = document.execCommand(\"copy\");\n  } catch (error) {\n    console.error(error);\n  }\n\n  textarea.remove();\n\n  return success;\n}\n","import { Point } from \"../types\";\n\nimport { ExcalidrawElement } from \"../element/types\";\nimport { AppState } from \"../types\";\nimport { DataState } from \"./types\";\nimport {\n  isInvisiblySmallElement,\n  normalizeDimensions,\n  isTextElement,\n} from \"../element\";\nimport { calculateScrollCenter } from \"../scene\";\nimport { randomId } from \"../random\";\nimport { DEFAULT_TEXT_ALIGN } from \"../appState\";\n\nexport function restore(\n  // we're making the elements mutable for this API because we want to\n  //  efficiently remove/tweak properties on them (to migrate old scenes)\n  savedElements: readonly Mutable<ExcalidrawElement>[],\n  savedState: AppState | null,\n  opts?: { scrollToContent: boolean },\n): DataState {\n  const elements = savedElements\n    .filter((el) => {\n      // filtering out selection, which is legacy, no longer kept in elements,\n      //  and causing issues if retained\n      return el.type !== \"selection\" && !isInvisiblySmallElement(el);\n    })\n    .map((element) => {\n      let points: Point[] = [];\n      if (element.type === \"arrow\") {\n        if (Array.isArray(element.points)) {\n          // if point array is empty, add one point to the arrow\n          // this is used as fail safe to convert incoming data to a valid\n          // arrow. In the new arrow, width and height are not being usde\n          points = element.points.length > 0 ? element.points : [[0, 0]];\n        } else {\n          // convert old arrow type to a new one\n          // old arrow spec used width and height\n          // to determine the endpoints\n          points = [\n            [0, 0],\n            [element.width, element.height],\n          ];\n        }\n        element.points = points;\n      } else if (element.type === \"line\" || element.type === \"draw\") {\n        // old spec, pre-arrows\n        // old spec, post-arrows\n        if (!Array.isArray(element.points) || element.points.length === 0) {\n          points = [\n            [0, 0],\n            [element.width, element.height],\n          ];\n        } else {\n          points = element.points;\n        }\n        element.points = points;\n      } else {\n        if (isTextElement(element)) {\n          if (!element.textAlign) {\n            element.textAlign = DEFAULT_TEXT_ALIGN;\n          }\n        }\n\n        normalizeDimensions(element);\n        // old spec, where non-linear elements used to have empty points arrays\n        if (\"points\" in element) {\n          delete element.points;\n        }\n      }\n\n      return {\n        ...element,\n        // all elements must have version > 0 so getDrawingVersion() will pick up newly added elements\n        version: element.version || 1,\n        id: element.id || randomId(),\n        fillStyle: element.fillStyle || \"hachure\",\n        strokeWidth: element.strokeWidth || 1,\n        strokeStyle: element.strokeStyle ?? \"solid\",\n        roughness: element.roughness ?? 1,\n        opacity:\n          element.opacity === null || element.opacity === undefined\n            ? 100\n            : element.opacity,\n        angle: element.angle ?? 0,\n      };\n    });\n\n  if (opts?.scrollToContent && savedState) {\n    savedState = { ...savedState, ...calculateScrollCenter(elements) };\n  }\n\n  return {\n    elements: elements,\n    appState: savedState,\n  };\n}\n","import { getDefaultAppState } from \"../appState\";\nimport { restore } from \"./restore\";\nimport { t } from \"../i18n\";\n\nexport async function loadFromBlob(blob: any) {\n  const updateAppState = (contents: string) => {\n    const defaultAppState = getDefaultAppState();\n    let elements = [];\n    let appState = defaultAppState;\n    try {\n      const data = JSON.parse(contents);\n      if (data.type !== \"excalidraw\") {\n        throw new Error(t(\"alerts.couldNotLoadInvalidFile\"));\n      }\n      elements = data.elements || [];\n      appState = { ...defaultAppState, ...data.appState };\n    } catch {\n      throw new Error(t(\"alerts.couldNotLoadInvalidFile\"));\n    }\n    return { elements, appState };\n  };\n\n  if (blob.handle) {\n    (window as any).handle = blob.handle;\n  }\n  let contents;\n  if (\"text\" in Blob) {\n    contents = await blob.text();\n  } else {\n    contents = await new Promise((resolve) => {\n      const reader = new FileReader();\n      reader.readAsText(blob, \"utf8\");\n      reader.onloadend = () => {\n        if (reader.readyState === FileReader.DONE) {\n          resolve(reader.result as string);\n        }\n      };\n    });\n  }\n\n  const { elements, appState } = updateAppState(contents);\n  return restore(elements, appState, { scrollToContent: true });\n}\n","import { ExcalidrawElement } from \"../element/types\";\nimport { AppState } from \"../types\";\nimport { cleanAppStateForExport } from \"../appState\";\n\nimport { fileOpen, fileSave } from \"browser-nativefs\";\nimport { loadFromBlob } from \"./blob\";\n\nexport function serializeAsJSON(\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n): string {\n  return JSON.stringify(\n    {\n      type: \"excalidraw\",\n      version: 1,\n      source: window.location.origin,\n      elements: elements.filter((element) => !element.isDeleted),\n      appState: cleanAppStateForExport(appState),\n    },\n    null,\n    2,\n  );\n}\n\nexport async function saveAsJSON(\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n) {\n  const serialized = serializeAsJSON(elements, appState);\n\n  const name = `${appState.name}.excalidraw`;\n  await fileSave(\n    new Blob([serialized], {\n      type: /\\b(iPad|iPhone|iPod)\\b/.test(navigator.userAgent)\n        ? \"application/json\"\n        : \"application/vnd.excalidraw+json\",\n    }),\n    {\n      fileName: name,\n      description: \"Excalidraw file\",\n    },\n    (window as any).handle,\n  );\n}\nexport async function loadFromJSON() {\n  const blob = await fileOpen({\n    description: \"Excalidraw files\",\n    extensions: [\"json\", \"excalidraw\"],\n    mimeTypes: [\"application/json\", \"application/vnd.excalidraw+json\"],\n  });\n  return loadFromBlob(blob);\n}\n","import {\n  ExcalidrawElement,\n  NonDeletedExcalidrawElement,\n} from \"../element/types\";\n\nimport { getDefaultAppState } from \"../appState\";\n\nimport { AppState } from \"../types\";\nimport { exportToCanvas, exportToSvg } from \"../scene/export\";\nimport { fileSave } from \"browser-nativefs\";\n\nimport { t } from \"../i18n\";\nimport {\n  copyCanvasToClipboardAsPng,\n  copyCanvasToClipboardAsSvg,\n} from \"../clipboard\";\nimport { serializeAsJSON } from \"./json\";\n\nimport { ExportType } from \"../scene/types\";\nimport { restore } from \"./restore\";\nimport { restoreFromLocalStorage } from \"./localStorage\";\n\nexport { loadFromBlob } from \"./blob\";\nexport { saveAsJSON, loadFromJSON } from \"./json\";\nexport { saveToLocalStorage } from \"./localStorage\";\n\nconst BACKEND_GET = \"https://json.excalidraw.com/api/v1/\";\n\nconst BACKEND_V2_POST = \"https://json.excalidraw.com/api/v2/post/\";\nconst BACKEND_V2_GET = \"https://json.excalidraw.com/api/v2/\";\n\nexport const SOCKET_SERVER = \"https://excalidraw-socket.herokuapp.com\";\n\nexport type EncryptedData = {\n  data: ArrayBuffer;\n  iv: Uint8Array;\n};\n\nexport type SocketUpdateDataSource = {\n  SCENE_INIT: {\n    type: \"SCENE_INIT\";\n    payload: {\n      elements: readonly ExcalidrawElement[];\n    };\n  };\n  SCENE_UPDATE: {\n    type: \"SCENE_UPDATE\";\n    payload: {\n      elements: readonly ExcalidrawElement[];\n    };\n  };\n  MOUSE_LOCATION: {\n    type: \"MOUSE_LOCATION\";\n    payload: {\n      socketID: string;\n      pointerCoords: { x: number; y: number };\n      button: \"down\" | \"up\";\n      selectedElementIds: AppState[\"selectedElementIds\"];\n      username: string;\n    };\n  };\n};\n\nexport type SocketUpdateDataIncoming =\n  | SocketUpdateDataSource[keyof SocketUpdateDataSource]\n  | {\n      type: \"INVALID_RESPONSE\";\n    };\n\n// TODO: Defined globally, since file handles aren't yet serializable.\n// Once `FileSystemFileHandle` can be serialized, make this\n// part of `AppState`.\n(window as any).handle = null;\n\nfunction byteToHex(byte: number): string {\n  return `0${byte.toString(16)}`.slice(-2);\n}\n\nasync function generateRandomID() {\n  const arr = new Uint8Array(10);\n  window.crypto.getRandomValues(arr);\n  return Array.from(arr, byteToHex).join(\"\");\n}\n\nasync function generateEncryptionKey() {\n  const key = await window.crypto.subtle.generateKey(\n    {\n      name: \"AES-GCM\",\n      length: 128,\n    },\n    true, // extractable\n    [\"encrypt\", \"decrypt\"],\n  );\n  return (await window.crypto.subtle.exportKey(\"jwk\", key)).k;\n}\n\nfunction createIV() {\n  const arr = new Uint8Array(12);\n  return window.crypto.getRandomValues(arr);\n}\n\nexport function getCollaborationLinkData(link: string) {\n  if (link.length === 0) {\n    return;\n  }\n  const hash = new URL(link).hash;\n  return hash.match(/^#room=([a-zA-Z0-9_-]+),([a-zA-Z0-9_-]+)$/);\n}\n\nexport async function generateCollaborationLink() {\n  const id = await generateRandomID();\n  const key = await generateEncryptionKey();\n  return `${window.location.origin}${window.location.pathname}#room=${id},${key}`;\n}\n\nfunction getImportedKey(key: string, usage: string) {\n  return window.crypto.subtle.importKey(\n    \"jwk\",\n    {\n      alg: \"A128GCM\",\n      ext: true,\n      k: key,\n      key_ops: [\"encrypt\", \"decrypt\"],\n      kty: \"oct\",\n    },\n    {\n      name: \"AES-GCM\",\n      length: 128,\n    },\n    false, // extractable\n    [usage],\n  );\n}\n\nexport async function encryptAESGEM(\n  data: Uint8Array,\n  key: string,\n): Promise<EncryptedData> {\n  const importedKey = await getImportedKey(key, \"encrypt\");\n  const iv = createIV();\n  return {\n    data: await window.crypto.subtle.encrypt(\n      {\n        name: \"AES-GCM\",\n        iv,\n      },\n      importedKey,\n      data,\n    ),\n    iv,\n  };\n}\n\nexport async function decryptAESGEM(\n  data: ArrayBuffer,\n  key: string,\n  iv: Uint8Array,\n): Promise<SocketUpdateDataIncoming> {\n  try {\n    const importedKey = await getImportedKey(key, \"decrypt\");\n    const decrypted = await window.crypto.subtle.decrypt(\n      {\n        name: \"AES-GCM\",\n        iv: iv,\n      },\n      importedKey,\n      data,\n    );\n\n    const decodedData = new TextDecoder(\"utf-8\").decode(\n      new Uint8Array(decrypted) as any,\n    );\n\n    //console.log(decodedData)\n    console.log(JSON.parse(decodedData))\n    return JSON.parse(decodedData);\n  } catch (error) {\n    window.alert(t(\"alerts.decryptFailed\"));\n    console.error(error);\n  }\n  return {\n    type: \"INVALID_RESPONSE\",\n  };\n}\n\nexport async function exportToBackend(\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n) {\n  const json = serializeAsJSON(elements, appState);\n  const encoded = new TextEncoder().encode(json);\n\n  const key = await window.crypto.subtle.generateKey(\n    {\n      name: \"AES-GCM\",\n      length: 128,\n    },\n    true, // extractable\n    [\"encrypt\", \"decrypt\"],\n  );\n  // The iv is set to 0. We are never going to reuse the same key so we don't\n  // need to have an iv. (I hope that's correct...)\n  const iv = new Uint8Array(12);\n  // We use symmetric encryption. AES-GCM is the recommended algorithm and\n  // includes checks that the ciphertext has not been modified by an attacker.\n  const encrypted = await window.crypto.subtle.encrypt(\n    {\n      name: \"AES-GCM\",\n      iv: iv,\n    },\n    key,\n    encoded,\n  );\n  // We use jwk encoding to be able to extract just the base64 encoded key.\n  // We will hardcode the rest of the attributes when importing back the key.\n  const exportedKey = await window.crypto.subtle.exportKey(\"jwk\", key);\n\n  try {\n    const response = await fetch(BACKEND_V2_POST, {\n      method: \"POST\",\n      body: encrypted,\n    });\n    const json = await response.json();\n    if (json.id) {\n      const url = new URL(window.location.href);\n      // We need to store the key (and less importantly the id) as hash instead\n      // of queryParam in order to never send it to the server\n      url.hash = `json=${json.id},${exportedKey.k!}`;\n      const urlString = url.toString();\n\n      window.prompt(`🔒${t(\"alerts.uploadedSecurly\")}`, urlString);\n    } else {\n      window.alert(t(\"alerts.couldNotCreateShareableLink\"));\n    }\n  } catch (error) {\n    console.error(error);\n    window.alert(t(\"alerts.couldNotCreateShareableLink\"));\n  }\n}\n\nexport async function importFromBackend(\n  id: string | null,\n  privateKey: string | undefined,\n) {\n  let elements: readonly ExcalidrawElement[] = [];\n  let appState: AppState = getDefaultAppState();\n\n  try {\n    const response = await fetch(\n      privateKey ? `${BACKEND_V2_GET}${id}` : `${BACKEND_GET}${id}.json`,\n    );\n    if (!response.ok) {\n      window.alert(t(\"alerts.importBackendFailed\"));\n      return restore(elements, appState, { scrollToContent: true });\n    }\n    let data;\n    if (privateKey) {\n      const buffer = await response.arrayBuffer();\n      const key = await getImportedKey(privateKey, \"decrypt\");\n      const iv = new Uint8Array(12);\n      const decrypted = await window.crypto.subtle.decrypt(\n        {\n          name: \"AES-GCM\",\n          iv: iv,\n        },\n        key,\n        buffer,\n      );\n      // We need to convert the decrypted array buffer to a string\n      const string = new window.TextDecoder(\"utf-8\").decode(\n        new Uint8Array(decrypted) as any,\n      );\n      data = JSON.parse(string);\n    } else {\n      // Legacy format\n      data = await response.json();\n    }\n\n    elements = data.elements || elements;\n    appState = data.appState || appState;\n  } catch (error) {\n    window.alert(t(\"alerts.importBackendFailed\"));\n    console.error(error);\n  } finally {\n    return restore(elements, appState, { scrollToContent: true });\n  }\n}\n\nexport async function exportCanvas(\n  type: ExportType,\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n  canvas: HTMLCanvasElement,\n  {\n    exportBackground,\n    exportPadding = 10,\n    viewBackgroundColor,\n    name,\n    scale = 1,\n    shouldAddWatermark,\n  }: {\n    exportBackground: boolean;\n    exportPadding?: number;\n    viewBackgroundColor: string;\n    name: string;\n    scale?: number;\n    shouldAddWatermark: boolean;\n  },\n) {\n  if (elements.length === 0) {\n    return window.alert(t(\"alerts.cannotExportEmptyCanvas\"));\n  }\n  if (type === \"svg\" || type === \"clipboard-svg\") {\n    const tempSvg = exportToSvg(elements, {\n      exportBackground,\n      viewBackgroundColor,\n      exportPadding,\n      shouldAddWatermark,\n    });\n    if (type === \"svg\") {\n      await fileSave(new Blob([tempSvg.outerHTML], { type: \"image/svg+xml\" }), {\n        fileName: `${name}.svg`,\n      });\n      return;\n    } else if (type === \"clipboard-svg\") {\n      copyCanvasToClipboardAsSvg(tempSvg);\n      return;\n    }\n  }\n\n  const tempCanvas = exportToCanvas(elements, appState, {\n    exportBackground,\n    viewBackgroundColor,\n    exportPadding,\n    scale,\n    shouldAddWatermark,\n  });\n  tempCanvas.style.display = \"none\";\n  document.body.appendChild(tempCanvas);\n\n  if (type === \"png\") {\n    const fileName = `${name}.png`;\n    tempCanvas.toBlob(async (blob: any) => {\n      if (blob) {\n        await fileSave(blob, {\n          fileName: fileName,\n        });\n      }\n    });\n  } else if (type === \"clipboard\") {\n    try {\n      copyCanvasToClipboardAsPng(tempCanvas);\n    } catch {\n      window.alert(t(\"alerts.couldNotCopyToClipboard\"));\n    }\n  } else if (type === \"backend\") {\n    const appState = getDefaultAppState();\n    if (exportBackground) {\n      appState.viewBackgroundColor = viewBackgroundColor;\n    }\n    exportToBackend(elements, appState);\n  }\n\n  // clean up the DOM\n  if (tempCanvas !== canvas) {\n    tempCanvas.remove();\n  }\n}\n\nexport async function loadScene(id: string | null, privateKey?: string) {\n  let data;\n  if (id != null) {\n    // the private key is used to decrypt the content from the server, take\n    // extra care not to leak it\n    data = await importFromBackend(id, privateKey);\n    window.history.replaceState({}, \"Excalidraw\", window.location.origin);\n  } else {\n    data = restoreFromLocalStorage();\n  }\n\n  return {\n    elements: data.elements,\n    appState: data.appState && { ...data.appState },\n    commitToHistory: false,\n  };\n}\n","import { ExcalidrawElement } from \"../element/types\";\nimport { AppState } from \"../types\";\nimport { clearAppStateForLocalStorage } from \"../appState\";\nimport { restore } from \"./restore\";\n\nconst LOCAL_STORAGE_KEY = \"excalidraw\";\nconst LOCAL_STORAGE_KEY_STATE = \"excalidraw-state\";\nconst LOCAL_STORAGE_KEY_COLLAB = \"excalidraw-collab\";\n\nexport function saveUsernameToLocalStorage(username: string) {\n  try {\n    console.log(\"username::\",username)\n    localStorage.setItem(\n      LOCAL_STORAGE_KEY_COLLAB,\n      JSON.stringify({ username }),\n    );\n  } catch (error) {\n    // Unable to access window.localStorage\n    console.error(error);\n  }\n}\n\nexport function restoreUsernameFromLocalStorage(): string | null {\n  try {\n    console.log(\"Restorl local  \",LOCAL_STORAGE_KEY_COLLAB)\n    const data = localStorage.getItem(LOCAL_STORAGE_KEY_COLLAB);\n    if (data) {\n      return JSON.parse(data).username;\n    }\n  } catch (error) {\n    // Unable to access localStorage\n    console.error(error);\n  }\n\n  return null;\n}\n\nexport function saveToLocalStorage(\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n) {\n  try {\n    console.log(\"save to localstorage\")\n    console.log(elements)\n    //debugger\n    localStorage.setItem(\n      LOCAL_STORAGE_KEY,\n      JSON.stringify(elements.filter((element) => !element.isDeleted)),\n    );\n    localStorage.setItem(\n      LOCAL_STORAGE_KEY_STATE,\n      JSON.stringify(clearAppStateForLocalStorage(appState)),\n    );\n  } catch (error) {\n    // Unable to access window.localStorage\n    console.error(error);\n  }\n}\n\nexport function restoreFromLocalStorage() {\n  console.log(\"Restore\", LOCAL_STORAGE_KEY, LOCAL_STORAGE_KEY_STATE)\n  let savedElements = null;\n  let savedState = null;\n\n  try {\n    savedElements = localStorage.getItem(LOCAL_STORAGE_KEY);\n    savedState = localStorage.getItem(LOCAL_STORAGE_KEY_STATE);\n  } catch (error) {\n    // Unable to access localStorage\n    console.error(error);\n  }\n\n  let elements = [];\n  if (savedElements) {\n    try {\n      elements = JSON.parse(savedElements);\n    } catch {\n      // Do nothing because elements array is already empty\n    }\n  }\n\n  let appState = null;\n  if (savedState) {\n    try {\n      appState = JSON.parse(savedState) as AppState;\n      // If we're retrieving from local storage, we should not be collaborating\n      appState.isCollaborating = false;\n      appState.collaborators = new Map();\n    } catch {\n      // Do nothing because appState is already null\n    }\n  }\n\n  return restore(elements, appState);\n}\n","import { encryptAESGEM } from \"../data\";\n\nimport { SocketUpdateData } from \"../types\";\nimport { BROADCAST, SCENE } from \"../constants\";\nimport App from \"./App\";\n\nclass Portal {\n  app: App;\n  socket: SocketIOClient.Socket | null = null;\n  socketInitialized: boolean = false; // we don't want the socket to emit any updates until it is fully initialized\n  roomID: string | null = null;\n  roomKey: string | null = null;\n\n  constructor(app: App) {\n    this.app = app;\n  }\n\n  open(socket: SocketIOClient.Socket, id: string, key: string) {\n    this.socket = socket;\n    this.roomID = id;\n    this.roomKey = key;\n\n    // Initialize socket listeners (moving from App)\n    this.socket.on(\"init-room\", () => {\n      if (this.socket) {\n        this.socket.emit(\"join-room\", this.roomID);\n\n        this.app.restoreUserName();\n      }\n    });\n    this.socket.on(\"new-user\", async (_socketID: string) => {\n      this.app.broadcastScene(SCENE.INIT, /* syncAll */ true);\n    });\n    this.socket.on(\"room-user-change\", (clients: string[]) => {\n      this.app.setCollaborators(clients);\n    });\n  }\n\n  close() {\n    if (!this.socket) {\n      return;\n    }\n    this.socket.close();\n    this.socket = null;\n    this.roomID = null;\n    this.roomKey = null;\n  }\n\n  isOpen() {\n    return !!(\n      this.socketInitialized &&\n      this.socket &&\n      this.roomID &&\n      this.roomKey\n    );\n  }\n\n  async _broadcastSocketData(\n    data: SocketUpdateData,\n    volatile: boolean = false,\n  ) {\n    if (this.isOpen()) {\n      const json = JSON.stringify(data);\n      const encoded = new TextEncoder().encode(json);\n      const encrypted = await encryptAESGEM(encoded, this.roomKey!);\n      this.socket!.emit(\n        volatile ? BROADCAST.SERVER_VOLATILE : BROADCAST.SERVER,\n        this.roomID,\n        encrypted.data,\n        encrypted.iv,\n      );\n    }\n  }\n}\nexport default Portal;\n","import React from \"react\";\nimport oc from \"open-color\";\n\n// We inline font-awesome icons in order to save on js size rather than including the font awesome react library\nexport const SHAPES = [\n  {\n    icon: (\n      // fa-mouse-pointer\n      <svg viewBox=\"0 0 320 512\" className=\"\">\n        <path d=\"M302.189 329.126H196.105l55.831 135.993c3.889 9.428-.555 19.999-9.444 23.999l-49.165 21.427c-9.165 4-19.443-.571-23.332-9.714l-53.053-129.136-86.664 89.138C18.729 472.71 0 463.554 0 447.977V18.299C0 1.899 19.921-6.096 30.277 5.443l284.412 292.542c11.472 11.179 3.007 31.141-12.5 31.141z\" />\n      </svg>\n    ),\n    value: \"selection\",\n    key: \"s\",\n  },\n  {\n    icon: (\n      // fa-square\n      <svg viewBox=\"0 0 448 512\">\n        <path d=\"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48z\" />\n      </svg>\n    ),\n    value: \"rectangle\",\n    key: \"r\",\n  },\n  {\n    icon: (\n      // custom\n      <svg viewBox=\"0 0 223.646 223.646\">\n        <path d=\"M111.823 0L16.622 111.823 111.823 223.646 207.025 111.823z\" />\n      </svg>\n    ),\n    value: \"diamond\",\n    key: \"d\",\n  },\n  {\n    icon: (\n      // fa-circle\n      <svg viewBox=\"0 0 512 512\">\n        <path d=\"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8z\" />\n      </svg>\n    ),\n    value: \"ellipse\",\n    key: \"e\",\n  },\n  {\n    icon: (\n      // fa-long-arrow-alt-right\n      <svg viewBox=\"0 0 448 512\" className=\"rtl-mirror\">\n        <path d=\"M313.941 216H12c-6.627 0-12 5.373-12 12v56c0 6.627 5.373 12 12 12h301.941v46.059c0 21.382 25.851 32.09 40.971 16.971l86.059-86.059c9.373-9.373 9.373-24.569 0-33.941l-86.059-86.059c-15.119-15.119-40.971-4.411-40.971 16.971V216z\" />\n      </svg>\n    ),\n    value: \"arrow\",\n    key: \"a\",\n  },\n  {\n    icon: (\n      // custom\n      <svg viewBox=\"0 0 6 6\">\n        <line\n          x1=\"0\"\n          y1=\"3\"\n          x2=\"6\"\n          y2=\"3\"\n          stroke={oc.black}\n          strokeLinecap=\"round\"\n        />\n      </svg>\n    ),\n    value: \"line\",\n    key: \"l\",\n  },\n  {\n    icon: (\n      // fa-pencil\n      <svg viewBox=\"0 0 512 512\">\n        <path\n          fill=\"currentColor\"\n          d=\"M290.74 93.24l128.02 128.02-277.99 277.99-114.14 12.6C11.35 513.54-1.56 500.62.14 485.34l12.7-114.22 277.9-277.88zm207.2-19.06l-60.11-60.11c-18.75-18.75-49.16-18.75-67.91 0l-56.55 56.55 128.02 128.02 56.55-56.55c18.75-18.76 18.75-49.16 0-67.91z\"\n        ></path>\n      </svg>\n    ),\n    value: \"draw\",\n    key: \"x\",\n  },\n  {\n    icon: (\n      // fa-font\n      <svg viewBox=\"0 0 448 512\">\n        <path d=\"M432 416h-23.41L277.88 53.69A32 32 0 0 0 247.58 32h-47.16a32 32 0 0 0-30.3 21.69L39.41 416H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-19.58l23.3-64h152.56l23.3 64H304a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM176.85 272L224 142.51 271.15 272z\" />\n      </svg>\n    ),\n    value: \"text\",\n    key: \"t\",\n  },\n] as const;\n\nexport const shapesShortcutKeys = SHAPES.map((shape, index) => [\n  shape.key,\n  (index + 1).toString(),\n]).flat(1);\n\nexport function findShapeByKey(key: string) {\n  return (\n    SHAPES.find((shape, index) => {\n      return shape.key === key.toLowerCase() || key === (index + 1).toString();\n    })?.value || \"selection\"\n  );\n}\n","import { AppState } from \"./types\";\nimport { ExcalidrawElement } from \"./element/types\";\nimport { clearAppStatePropertiesForHistory } from \"./appState\";\nimport { newElementWith } from \"./element/mutateElement\";\nimport { isLinearElement } from \"./element/typeChecks\";\n\ntype Result = {\n  appState: AppState;\n  elements: ExcalidrawElement[];\n};\n\nexport class SceneHistory {\n  private recording: boolean = true;\n  private stateHistory: string[] = [];\n  private redoStack: string[] = [];\n\n  getSnapshotForTest() {\n    return {\n      recording: this.recording,\n      stateHistory: this.stateHistory.map((s) => JSON.parse(s)),\n      redoStack: this.redoStack.map((s) => JSON.parse(s)),\n    };\n  }\n\n  clear() {\n    this.stateHistory.length = 0;\n    this.redoStack.length = 0;\n  }\n\n  private generateEntry(\n    appState: AppState,\n    elements: readonly ExcalidrawElement[],\n  ) {\n    return JSON.stringify({\n      appState: clearAppStatePropertiesForHistory(appState),\n      elements: elements.reduce((elements, element) => {\n        if (\n          isLinearElement(element) &&\n          appState.multiElement &&\n          appState.multiElement.id === element.id\n        ) {\n          // don't store multi-point arrow if still has only one point\n          if (\n            appState.multiElement &&\n            appState.multiElement.id === element.id &&\n            element.points.length < 2\n          ) {\n            return elements;\n          }\n\n          elements.push(\n            newElementWith(element, {\n              // don't store last point if not committed\n              points:\n                element.lastCommittedPoint !==\n                element.points[element.points.length - 1]\n                  ? element.points.slice(0, -1)\n                  : element.points,\n              // don't regenerate versionNonce else this will short-circuit our\n              //  bail-on-no-change logic in pushEntry()\n              versionNonce: element.versionNonce,\n            }),\n          );\n        } else {\n          elements.push(\n            newElementWith(element, { versionNonce: element.versionNonce }),\n          );\n        }\n        return elements;\n      }, [] as Mutable<typeof elements>),\n    });\n  }\n\n  pushEntry(appState: AppState, elements: readonly ExcalidrawElement[]) {\n    const newEntry = this.generateEntry(appState, elements);\n    if (\n      this.stateHistory.length > 0 &&\n      this.stateHistory[this.stateHistory.length - 1] === newEntry\n    ) {\n      // If the last entry is the same as this one, ignore it\n      return;\n    }\n\n    this.stateHistory.push(newEntry);\n\n    // As a new entry was pushed, we invalidate the redo stack\n    this.clearRedoStack();\n  }\n\n  restoreEntry(entry: string) {\n    try {\n      return JSON.parse(entry);\n    } catch {\n      return null;\n    }\n  }\n\n  clearRedoStack() {\n    this.redoStack.splice(0, this.redoStack.length);\n  }\n\n  redoOnce(): Result | null {\n    if (this.redoStack.length === 0) {\n      return null;\n    }\n\n    const entryToRestore = this.redoStack.pop();\n\n    if (entryToRestore !== undefined) {\n      this.stateHistory.push(entryToRestore);\n      return this.restoreEntry(entryToRestore);\n    }\n\n    return null;\n  }\n\n  undoOnce(): Result | null {\n    if (this.stateHistory.length === 1) {\n      return null;\n    }\n\n    const currentEntry = this.stateHistory.pop();\n\n    const entryToRestore = this.stateHistory[this.stateHistory.length - 1];\n\n    if (currentEntry !== undefined) {\n      this.redoStack.push(currentEntry);\n      return this.restoreEntry(entryToRestore);\n    }\n\n    return null;\n  }\n\n  // Suspicious that this is called so many places. Seems error-prone.\n  resumeRecording() {\n    this.recording = true;\n  }\n\n  record(state: AppState, elements: readonly ExcalidrawElement[]) {\n    if (this.recording) {\n      this.pushEntry(state, elements);\n      this.recording = false;\n    }\n  }\n}\n\nexport const createHistory: () => { history: SceneHistory } = () => {\n  const history = new SceneHistory();\n  return { history };\n};\n","import React, { useLayoutEffect, useRef, useEffect } from \"react\";\nimport \"./Popover.css\";\nimport { unstable_batchedUpdates } from \"react-dom\";\n\ntype Props = {\n  top?: number;\n  left?: number;\n  children?: React.ReactNode;\n  onCloseRequest?(event: PointerEvent): void;\n  fitInViewport?: boolean;\n};\n\nexport function Popover({\n  children,\n  left,\n  top,\n  onCloseRequest,\n  fitInViewport = false,\n}: Props) {\n  const popoverRef = useRef<HTMLDivElement>(null);\n\n  // ensure the popover doesn't overflow the viewport\n  useLayoutEffect(() => {\n    if (fitInViewport && popoverRef.current) {\n      const element = popoverRef.current;\n      const { x, y, width, height } = element.getBoundingClientRect();\n\n      const viewportWidth = window.innerWidth;\n      if (x + width > viewportWidth) {\n        element.style.left = `${viewportWidth - width}px`;\n      }\n      const viewportHeight = window.innerHeight;\n      if (y + height > viewportHeight) {\n        element.style.top = `${viewportHeight - height}px`;\n      }\n    }\n  }, [fitInViewport]);\n\n  useEffect(() => {\n    if (onCloseRequest) {\n      const handler = (event: PointerEvent) => {\n        if (!popoverRef.current?.contains(event.target as Node)) {\n          unstable_batchedUpdates(() => onCloseRequest(event));\n        }\n      };\n      document.addEventListener(\"pointerdown\", handler, false);\n      return () => document.removeEventListener(\"pointerdown\", handler, false);\n    }\n  }, [onCloseRequest]);\n\n  return (\n    <div className=\"popover\" style={{ top: top, left: left }} ref={popoverRef}>\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Popover } from \"./Popover\";\nimport { render, unmountComponentAtNode } from \"react-dom\";\n\nimport \"./ContextMenu.scss\";\n\ntype ContextMenuOption = {\n  label: string;\n  action(): void;\n};\n\ntype Props = {\n  options: ContextMenuOption[];\n  onCloseRequest?(): void;\n  top: number;\n  left: number;\n};\n\nfunction ContextMenu({ options, onCloseRequest, top, left }: Props) {\n  return (\n    <Popover\n      onCloseRequest={onCloseRequest}\n      top={top}\n      left={left}\n      fitInViewport={true}\n    >\n      <ul\n        className=\"context-menu\"\n        onContextMenu={(event) => event.preventDefault()}\n      >\n        {options.map((option, idx) => (\n          <li key={idx} onClick={onCloseRequest}>\n            <ContextMenuOption {...option} />\n          </li>\n        ))}\n      </ul>\n    </Popover>\n  );\n}\n\nfunction ContextMenuOption({ label, action }: ContextMenuOption) {\n  return (\n    <button className=\"context-menu-option\" onClick={action}>\n      {label}\n    </button>\n  );\n}\n\nlet contextMenuNode: HTMLDivElement;\nfunction getContextMenuNode(): HTMLDivElement {\n  if (contextMenuNode) {\n    return contextMenuNode;\n  }\n  const div = document.createElement(\"div\");\n  document.body.appendChild(div);\n  return (contextMenuNode = div);\n}\n\ntype ContextMenuParams = {\n  options: (ContextMenuOption | false | null | undefined)[];\n  top: number;\n  left: number;\n};\n\nfunction handleClose() {\n  unmountComponentAtNode(getContextMenuNode());\n}\n\nexport default {\n  push(params: ContextMenuParams) {\n    const options = Array.of<ContextMenuOption>();\n    params.options.forEach((option) => {\n      if (option) {\n        options.push(option);\n      }\n    });\n    if (options.length) {\n      render(\n        <ContextMenu\n          top={params.top}\n          left={params.left}\n          options={options}\n          onCloseRequest={handleClose}\n        />,\n        getContextMenuNode(),\n      );\n    }\n  },\n};\n","import React from \"react\";\nimport {\n  Action,\n  ActionsManagerInterface,\n  UpdaterFn,\n  ActionFilterFn,\n  ActionName,\n} from \"./types\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { AppState } from \"../types\";\nimport { t } from \"../i18n\";\nimport { globalSceneState } from \"../scene\";\n\nexport class ActionManager implements ActionsManagerInterface {\n  actions = {} as ActionsManagerInterface[\"actions\"];\n\n  updater: UpdaterFn;\n\n  getAppState: () => AppState;\n\n  getElementsIncludingDeleted: () => readonly ExcalidrawElement[];\n\n  constructor(\n    updater: UpdaterFn,\n    getAppState: () => AppState,\n    getElementsIncludingDeleted: () => ReturnType<\n      typeof globalSceneState[\"getElementsIncludingDeleted\"]\n    >,\n  ) {\n    this.updater = updater;\n    this.getAppState = getAppState;\n    this.getElementsIncludingDeleted = getElementsIncludingDeleted;\n  }\n\n  registerAction(action: Action) {\n    this.actions[action.name] = action;\n  }\n\n  registerAll(actions: readonly Action[]) {\n    actions.forEach((action) => this.registerAction(action));\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    const data = Object.values(this.actions)\n      .sort((a, b) => (b.keyPriority || 0) - (a.keyPriority || 0))\n      .filter(\n        (action) =>\n          action.keyTest &&\n          action.keyTest(\n            event,\n            this.getAppState(),\n            this.getElementsIncludingDeleted(),\n          ),\n      );\n\n    if (data.length === 0) {\n      return false;\n    }\n\n    event.preventDefault();\n    this.updater(\n      data[0].perform(\n        this.getElementsIncludingDeleted(),\n        this.getAppState(),\n        null,\n      ),\n    );\n    return true;\n  }\n\n  executeAction(action: Action) {\n    this.updater(\n      action.perform(\n        this.getElementsIncludingDeleted(),\n        this.getAppState(),\n        null,\n      ),\n    );\n  }\n\n  getContextMenuItems(actionFilter: ActionFilterFn = (action) => action) {\n    return Object.values(this.actions)\n      .filter(actionFilter)\n      .filter((action) => \"contextItemLabel\" in action)\n      .sort(\n        (a, b) =>\n          (a.contextMenuOrder !== undefined ? a.contextMenuOrder : 999) -\n          (b.contextMenuOrder !== undefined ? b.contextMenuOrder : 999),\n      )\n      .map((action) => ({\n        label: action.contextItemLabel ? t(action.contextItemLabel) : \"\",\n        action: () => {\n          this.updater(\n            action.perform(\n              this.getElementsIncludingDeleted(),\n              this.getAppState(),\n              null,\n            ),\n          );\n        },\n      }));\n  }\n\n  renderAction = (name: ActionName) => {\n    if (this.actions[name] && \"PanelComponent\" in this.actions[name]) {\n      const action = this.actions[name];\n      const PanelComponent = action.PanelComponent!;\n      const updateData = (formState?: any) => {\n        this.updater(\n          action.perform(\n            this.getElementsIncludingDeleted(),\n            this.getAppState(),\n            formState,\n          ),\n        );\n      };\n\n      return (\n        <PanelComponent\n          elements={this.getElementsIncludingDeleted()}\n          appState={this.getAppState()}\n          updateData={updateData}\n        />\n      );\n    }\n\n    return null;\n  };\n}\n","import \"./ToolIcon.scss\";\n\nimport React from \"react\";\n\ntype ToolIconSize = \"s\" | \"m\";\n\ntype ToolButtonBaseProps = {\n  icon?: React.ReactNode;\n  \"aria-label\": string;\n  \"aria-keyshortcuts\"?: string;\n  \"data-testid\"?: string;\n  label?: string;\n  title?: string;\n  name?: string;\n  id?: string;\n  size?: ToolIconSize;\n  keyBindingLabel?: string;\n  showAriaLabel?: boolean;\n  visible?: boolean;\n  selected?: boolean;\n  className?: string;\n};\n\ntype ToolButtonProps =\n  | (ToolButtonBaseProps & {\n      type: \"button\";\n      children?: React.ReactNode;\n      onClick?(): void;\n    })\n  | (ToolButtonBaseProps & {\n      type: \"radio\";\n\n      checked: boolean;\n      onChange?(): void;\n    });\n\nconst DEFAULT_SIZE: ToolIconSize = \"m\";\n\nexport const ToolButton = React.forwardRef(function (\n  props: ToolButtonProps,\n  ref,\n) {\n  const innerRef = React.useRef(null);\n  React.useImperativeHandle(ref, () => innerRef.current);\n  const sizeCn = `ToolIcon_size_${props.size || DEFAULT_SIZE}`;\n\n  if (props.type === \"button\") {\n    return (\n      <button\n        className={`ToolIcon_type_button ToolIcon ${sizeCn}${\n          props.selected ? \" ToolIcon--selected\" : \"\"\n        } ${props.className} ${\n          props.visible\n            ? \"ToolIcon_type_button--show\"\n            : \"ToolIcon_type_button--hide\"\n        }`}\n        title={props.title}\n        aria-label={props[\"aria-label\"]}\n        type=\"button\"\n        onClick={props.onClick}\n        ref={innerRef}\n      >\n        <div className=\"ToolIcon__icon\" aria-hidden=\"true\">\n          {props.icon || props.label}\n        </div>\n        {props.showAriaLabel && (\n          <div className=\"ToolIcon__label\">{props[\"aria-label\"]}</div>\n        )}\n        {props.children}\n      </button>\n    );\n  }\n\n  return (\n    <label className=\"ToolIcon\" title={props.title}>\n      <input\n        className={`ToolIcon_type_radio ${sizeCn}`}\n        type=\"radio\"\n        name={props.name}\n        aria-label={props[\"aria-label\"]}\n        aria-keyshortcuts={props[\"aria-keyshortcuts\"]}\n        data-testid={props[\"data-testid\"]}\n        id={props.id}\n        onChange={props.onChange}\n        checked={props.checked}\n        ref={innerRef}\n      />\n      <div className=\"ToolIcon__icon\">\n        {props.icon}\n        {props.keyBindingLabel && (\n          <span className=\"ToolIcon__keybinding\">{props.keyBindingLabel}</span>\n        )}\n      </div>\n    </label>\n  );\n});\n\nToolButton.defaultProps = {\n  visible: true,\n  className: \"\",\n};\n","//\n// All icons are imported from https://fontawesome.com/icons?d=gallery\n// Icons are under the license https://fontawesome.com/license\n//\n\nimport React from \"react\";\n\nimport oc from \"open-color\";\n\nconst ACTIVE_ELEMENT_COLOR = oc.orange[4];\ntype Opts = { width?: number; height?: number; mirror?: true } & React.SVGProps<\n  SVGSVGElement\n>;\n\nconst createIcon = (d: string | React.ReactNode, opts: number | Opts = 512) => {\n  const { width = 512, height = width, mirror, style } =\n    typeof opts === \"number\" ? ({ width: opts } as Opts) : opts;\n  return (\n    <svg\n      aria-hidden=\"true\"\n      focusable=\"false\"\n      role=\"img\"\n      viewBox={`0 0 ${width} ${height}`}\n      className={mirror && \"rtl-mirror\"}\n      style={style}\n    >\n      {typeof d === \"string\" ? <path fill=\"currentColor\" d={d} /> : d}\n    </svg>\n  );\n};\n\nexport const link = createIcon(\n  \"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\",\n  { mirror: true },\n);\n\nexport const save = createIcon(\n  \"M433.941 129.941l-83.882-83.882A48 48 0 0 0 316.118 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V163.882a48 48 0 0 0-14.059-33.941zM224 416c-35.346 0-64-28.654-64-64 0-35.346 28.654-64 64-64s64 28.654 64 64c0 35.346-28.654 64-64 64zm96-304.52V212c0 6.627-5.373 12-12 12H76c-6.627 0-12-5.373-12-12V108c0-6.627 5.373-12 12-12h228.52c3.183 0 6.235 1.264 8.485 3.515l3.48 3.48A11.996 11.996 0 0 1 320 111.48z\",\n  { width: 448, height: 512 },\n);\n\nexport const load = createIcon(\n  \"M572.694 292.093L500.27 416.248A63.997 63.997 0 0 1 444.989 448H45.025c-18.523 0-30.064-20.093-20.731-36.093l72.424-124.155A64 64 0 0 1 152 256h399.964c18.523 0 30.064 20.093 20.73 36.093zM152 224h328v-48c0-26.51-21.49-48-48-48H272l-64-64H48C21.49 64 0 85.49 0 112v278.046l69.077-118.418C86.214 242.25 117.989 224 152 224z\",\n  { width: 576, height: 512, mirror: true },\n);\n\nexport const clipboard = createIcon(\n  \"M384 112v352c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V112c0-26.51 21.49-48 48-48h80c0-35.29 28.71-64 64-64s64 28.71 64 64h80c26.51 0 48 21.49 48 48zM192 40c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24m96 114v-20a6 6 0 0 0-6-6H102a6 6 0 0 0-6 6v20a6 6 0 0 0 6 6h180a6 6 0 0 0 6-6z\",\n  { width: 384, height: 512 },\n);\n\nexport const trash = createIcon(\n  \"M32 464a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V128H32zm272-256a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zm-96 0a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zm-96 0a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zM432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z\",\n  { width: 448, height: 512 },\n);\n\nexport const palette = createIcon(\n  \"M204.3 5C104.9 24.4 24.8 104.3 5.2 203.4c-37 187 131.7 326.4 258.8 306.7 41.2-6.4 61.4-54.6 42.5-91.7-23.1-45.4 9.9-98.4 60.9-98.4h79.7c35.8 0 64.8-29.6 64.9-65.3C511.5 97.1 368.1-26.9 204.3 5zM96 320c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm32-128c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm128-64c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm128 64c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z\",\n);\n\nexport const exportFile = createIcon(\n  \"M384 121.9c0-6.3-2.5-12.4-7-16.9L279.1 7c-4.5-4.5-10.6-7-17-7H256v128h128zM571 308l-95.7-96.4c-10.1-10.1-27.4-3-27.4 11.3V288h-64v64h64v65.2c0 14.3 17.3 21.4 27.4 11.3L571 332c6.6-6.6 6.6-17.4 0-24zm-379 28v-32c0-8.8 7.2-16 16-16h176V160H248c-13.2 0-24-10.8-24-24V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V352H208c-8.8 0-16-7.2-16-16z\",\n  { width: 576, height: 512, mirror: true },\n);\n\nexport const zoomIn = createIcon(\n  \"M416 208H272V64c0-17.67-14.33-32-32-32h-32c-17.67 0-32 14.33-32 32v144H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h144v144c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32V304h144c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z\",\n  { width: 448, height: 512 },\n);\n\nexport const zoomOut = createIcon(\n  \"M416 208H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h384c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z\",\n  { width: 448, height: 512 },\n);\n\nexport const done = createIcon(\n  \"M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z\",\n  { mirror: true },\n);\n\nexport const menu = createIcon(\n  \"M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z\",\n);\n\nexport const undo = createIcon(\n  \"M255.545 8c-66.269.119-126.438 26.233-170.86 68.685L48.971 40.971C33.851 25.851 8 36.559 8 57.941V192c0 13.255 10.745 24 24 24h134.059c21.382 0 32.09-25.851 16.971-40.971l-41.75-41.75c30.864-28.899 70.801-44.907 113.23-45.273 92.398-.798 170.283 73.977 169.484 169.442C423.236 348.009 349.816 424 256 424c-41.127 0-79.997-14.678-110.63-41.556-4.743-4.161-11.906-3.908-16.368.553L89.34 422.659c-4.872 4.872-4.631 12.815.482 17.433C133.798 479.813 192.074 504 256 504c136.966 0 247.999-111.033 248-247.998C504.001 119.193 392.354 7.755 255.545 8z\",\n  { mirror: true },\n);\n\nexport const redo = createIcon(\n  \"M256.455 8c66.269.119 126.437 26.233 170.859 68.685l35.715-35.715C478.149 25.851 504 36.559 504 57.941V192c0 13.255-10.745 24-24 24H345.941c-21.382 0-32.09-25.851-16.971-40.971l41.75-41.75c-30.864-28.899-70.801-44.907-113.23-45.273-92.398-.798-170.283 73.977-169.484 169.442C88.764 348.009 162.184 424 256 424c41.127 0 79.997-14.678 110.629-41.556 4.743-4.161 11.906-3.908 16.368.553l39.662 39.662c4.872 4.872 4.631 12.815-.482 17.433C378.202 479.813 319.926 504 256 504 119.034 504 8.001 392.967 8 256.002 7.999 119.193 119.646 7.755 256.455 8z\",\n  { mirror: true },\n);\n\n// Icon imported form Storybook\n// Storybook is licensed under MIT https://github.com/storybookjs/storybook/blob/next/LICENSE\nexport const resetZoom = createIcon(\n  <path\n    stroke=\"currentColor\"\n    strokeWidth=\"40\"\n    fill=\"currentColor\"\n    d=\"M148 560a318 318 0 0 0 522 110 316 316 0 0 0 0-450 316 316 0 0 0-450 0c-11 11-21 22-30 34v4h47c25 0 46 21 46 46s-21 45-46 45H90c-13 0-25-6-33-14-9-9-14-20-14-33V156c0-25 20-45 45-45s45 20 45 45v32l1 1a401 401 0 0 1 623 509l212 212a42 42 0 0 1-59 59L698 757A401 401 0 0 1 65 570a42 42 0 0 1 83-10z\"\n  />,\n  { width: 1024 },\n);\n\nexport const bringForward = createIcon(\n  <>\n    <path\n      d=\"M22 9.556C22 8.696 21.303 8 20.444 8H16v8H8v4.444C8 21.304 8.697 22 9.556 22h10.888c.86 0 1.556-.697 1.556-1.556V9.556z\"\n      stroke={oc.black}\n      strokeWidth=\"2\"\n    />\n    <path\n      d=\"M16 3.556C16 2.696 15.303 2 14.444 2H3.556C2.696 2 2 2.697 2 3.556v10.888C2 15.304 2.697 16 3.556 16h10.888c.86 0 1.556-.697 1.556-1.556V3.556z\"\n      fill={ACTIVE_ELEMENT_COLOR}\n      stroke={ACTIVE_ELEMENT_COLOR}\n      strokeWidth=\"2\"\n    />\n  </>,\n  { width: 24 },\n);\n\nexport const sendBackward = createIcon(\n  <>\n    <path\n      d=\"M16 3.556C16 2.696 15.303 2 14.444 2H3.556C2.696 2 2 2.697 2 3.556v10.888C2 15.304 2.697 16 3.556 16h10.888c.86 0 1.556-.697 1.556-1.556V3.556z\"\n      fill={ACTIVE_ELEMENT_COLOR}\n      stroke={ACTIVE_ELEMENT_COLOR}\n      strokeWidth=\"2\"\n    />\n    <path\n      d=\"M22 9.556C22 8.696 21.303 8 20.444 8H9.556C8.696 8 8 8.697 8 9.556v10.888C8 21.304 8.697 22 9.556 22h10.888c.86 0 1.556-.697 1.556-1.556V9.556z\"\n      stroke={oc.black}\n      strokeWidth=\"2\"\n    />\n  </>,\n  { width: 24 },\n);\n\nexport const bringToFront = createIcon(\n  <>\n    <path\n      d=\"M13 21a1 1 0 001 1h7a1 1 0 001-1v-7a1 1 0 00-1-1h-3v5h-5v3zM11 3a1 1 0 00-1-1H3a1 1 0 00-1 1v7a1 1 0 001 1h3V6h5V3z\"\n      stroke={oc.black}\n      strokeWidth=\"2\"\n    />\n    <path\n      d=\"M18 7.333C18 6.597 17.403 6 16.667 6H7.333C6.597 6 6 6.597 6 7.333v9.334C6 17.403 6.597 18 7.333 18h9.334c.736 0 1.333-.597 1.333-1.333V7.333z\"\n      fill={ACTIVE_ELEMENT_COLOR}\n      stroke={ACTIVE_ELEMENT_COLOR}\n      strokeWidth=\"2\"\n    />\n  </>,\n  { width: 24 },\n);\n\nexport const sendToBack = createIcon(\n  <>\n    <path\n      d=\"M18 7.333C18 6.597 17.403 6 16.667 6H7.333C6.597 6 6 6.597 6 7.333v9.334C6 17.403 6.597 18 7.333 18h9.334c.736 0 1.333-.597 1.333-1.333V7.333z\"\n      fill={ACTIVE_ELEMENT_COLOR}\n      stroke={ACTIVE_ELEMENT_COLOR}\n      strokeLinejoin=\"round\"\n      strokeWidth=\"2\"\n    />\n    <path\n      d=\"M11 3a1 1 0 00-1-1H3a1 1 0 00-1 1v7a1 1 0 001 1h8V3zM22 14a1 1 0 00-1-1h-7a1 1 0 00-1 1v7a1 1 0 001 1h8v-8z\"\n      stroke={oc.black}\n      strokeLinejoin=\"round\"\n      strokeWidth=\"2\"\n    />\n  </>,\n  { width: 24 },\n);\n\nexport const users = createIcon(\n  \"M192 256c61.9 0 112-50.1 112-112S253.9 32 192 32 80 82.1 80 144s50.1 112 112 112zm76.8 32h-8.3c-20.8 10-43.9 16-68.5 16s-47.6-6-68.5-16h-8.3C51.6 288 0 339.6 0 403.2V432c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48v-28.8c0-63.6-51.6-115.2-115.2-115.2zM480 256c53 0 96-43 96-96s-43-96-96-96-96 43-96 96 43 96 96 96zm48 32h-3.8c-13.9 4.8-28.6 8-44.2 8s-30.3-3.2-44.2-8H432c-20.4 0-39.2 5.9-55.7 15.4 24.4 26.3 39.7 61.2 39.7 99.8v38.4c0 2.2-.5 4.3-.6 6.4H592c26.5 0 48-21.5 48-48 0-61.9-50.1-112-112-112z\",\n  { width: 640, height: 512, mirror: true },\n);\n\nexport const start = createIcon(\n  \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm115.7 272l-176 101c-15.8 8.8-35.7-2.5-35.7-21V152c0-18.4 19.8-29.8 35.7-21l176 107c16.4 9.2 16.4 32.9 0 42z\",\n);\n\nexport const stop = createIcon(\n  \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm96 328c0 8.8-7.2 16-16 16H176c-8.8 0-16-7.2-16-16V176c0-8.8 7.2-16 16-16h160c8.8 0 16 7.2 16 16v160z\",\n);\n\nexport const close = createIcon(\n  \"M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z\",\n  { width: 352, height: 512 },\n);\n\nexport const back = createIcon(\n  \"M34.52 239.03L228.87 44.69c9.37-9.37 24.57-9.37 33.94 0l22.67 22.67c9.36 9.36 9.37 24.52.04 33.9L131.49 256l154.02 154.75c9.34 9.38 9.32 24.54-.04 33.9l-22.67 22.67c-9.37 9.37-24.57 9.37-33.94 0L34.52 272.97c-9.37-9.37-9.37-24.57 0-33.94z\",\n  { width: 320, height: 512, style: { marginLeft: \"-0.2rem\" }, mirror: true },\n);\n\nexport const clone = createIcon(\n  \"M464 0c26.51 0 48 21.49 48 48v288c0 26.51-21.49 48-48 48H176c-26.51 0-48-21.49-48-48V48c0-26.51 21.49-48 48-48h288M176 416c-44.112 0-80-35.888-80-80V128H48c-26.51 0-48 21.49-48 48v288c0 26.51 21.49 48 48 48h288c26.51 0 48-21.49 48-48v-48H176z\",\n  { mirror: true },\n);\n\n// modified https://feathericons.com/?query=shield\nexport const shield = createIcon(\n  \"M11.553 22.894a.998.998 0 00.894 0s3.037-1.516 5.465-4.097C19.616 16.987 21 14.663 21 12V5a1 1 0 00-.649-.936l-8-3a.998.998 0 00-.702 0l-8 3A1 1 0 003 5v7c0 2.663 1.384 4.987 3.088 6.797 2.428 2.581 5.465 4.097 5.465 4.097zm-1.303-8.481l6.644-6.644a.856.856 0 111.212 1.212l-7.25 7.25a.856.856 0 01-1.212 0l-3.75-3.75a.856.856 0 111.212-1.212l3.144 3.144z\",\n  { width: 24 },\n);\n","import { Action } from \"./types\";\n\nexport let actions: readonly Action[] = [];\n\nexport function register(action: Action): Action {\n  actions = actions.concat(action);\n  return action;\n}\n","import { deleteSelectedElements, isSomeElementSelected } from \"../scene\";\nimport { KEYS } from \"../keys\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport React from \"react\";\nimport { trash } from \"../components/icons\";\nimport { t } from \"../i18n\";\nimport { register } from \"./register\";\nimport { getNonDeletedElements } from \"../element\";\n\nexport const actionDeleteSelected = register({\n  name: \"deleteSelectedElements\",\n  perform: (elements, appState) => {\n    const {\n      elements: nextElements,\n      appState: nextAppState,\n    } = deleteSelectedElements(elements, appState);\n    return {\n      elements: nextElements,\n      appState: {\n        ...nextAppState,\n        elementType: \"selection\",\n        multiElement: null,\n      },\n      commitToHistory: isSomeElementSelected(\n        getNonDeletedElements(elements),\n        appState,\n      ),\n    };\n  },\n  contextItemLabel: \"labels.delete\",\n  contextMenuOrder: 3,\n  keyTest: (event) => event.key === KEYS.BACKSPACE || event.key === KEYS.DELETE,\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={trash}\n      title={t(\"labels.delete\")}\n      aria-label={t(\"labels.delete\")}\n      onClick={() => updateData(null)}\n      visible={isSomeElementSelected(getNonDeletedElements(elements), appState)}\n    />\n  ),\n});\n","function swap<T>(elements: T[], indexA: number, indexB: number) {\n  const element = elements[indexA];\n  elements[indexA] = elements[indexB];\n  elements[indexB] = element;\n}\n\nexport function moveOneLeft<T>(elements: T[], indicesToMove: number[]) {\n  indicesToMove.sort((a: number, b: number) => a - b);\n  let isSorted = true;\n  // We go from left to right to avoid overriding the wrong elements\n  indicesToMove.forEach((index, i) => {\n    // We don't want to bubble the first elements that are sorted as they are\n    // already in their correct position\n    isSorted = isSorted && index === i;\n    if (isSorted) {\n      return;\n    }\n    swap(elements, index - 1, index);\n  });\n\n  return elements;\n}\n\nexport function moveOneRight<T>(elements: T[], indicesToMove: number[]) {\n  const reversedIndicesToMove = indicesToMove.sort(\n    (a: number, b: number) => b - a,\n  );\n  let isSorted = true;\n\n  // We go from right to left to avoid overriding the wrong elements\n  reversedIndicesToMove.forEach((index, i) => {\n    // We don't want to bubble the first elements that are sorted as they are\n    // already in their correct position\n    isSorted = isSorted && index === elements.length - i - 1;\n    if (isSorted) {\n      return;\n    }\n    swap(elements, index + 1, index);\n  });\n  return elements;\n}\n\n// Let's go through an example\n//        |        |\n// [a, b, c, d, e, f, g]\n// -->\n// [c, f, a, b, d, e, g]\n//\n// We are going to override all the elements we want to move, so we keep them in an array\n// that we will restore at the end.\n// [c, f]\n//\n// From now on, we'll never read those values from the array anymore\n//        |1       |0\n// [a, b, _, d, e, _, g]\n//\n// The idea is that we want to shift all the elements between the marker 0 and 1\n// by one slot to the right.\n//\n//        |1       |0\n// [a, b, _, d, e, _, g]\n//          -> ->\n//\n// which gives us\n//\n//        |1       |0\n// [a, b, _, _, d, e, g]\n//\n// Now, we need to move all the elements from marker 1 to the beginning by two (not one)\n// slots to the right, which gives us\n//\n//        |1       |0\n// [a, b, _, _, d, e, g]\n//  ---|--^  ^\n//     ------|\n//\n// which gives us\n//\n//        |1       |0\n// [_, _, a, b, d, e, g]\n//\n// At this point, we can fill back the leftmost elements with the array we saved at\n// the beginning\n//\n//        |1       |0\n// [c, f, a, b, d, e, g]\n//\n// And we are done!\nexport function moveAllLeft<T>(elements: T[], indicesToMove: number[]) {\n  indicesToMove.sort((a: number, b: number) => a - b);\n\n  // Copy the elements to move\n  const leftMostElements = indicesToMove.map((index) => elements[index]);\n\n  const reversedIndicesToMove = indicesToMove\n    // We go from right to left to avoid overriding elements.\n    .reverse()\n    // We add 0 for the final marker\n    .concat([0]);\n\n  reversedIndicesToMove.forEach((index, i) => {\n    // We skip the first one as it is not paired with anything else\n    if (i === 0) {\n      return;\n    }\n\n    // We go from the next marker to the right (i - 1) to the current one (index)\n    for (let pos = reversedIndicesToMove[i - 1] - 1; pos >= index; --pos) {\n      // We move by 1 the first time, 2 the second... So we can use the index i in the array\n      elements[pos + i] = elements[pos];\n    }\n  });\n\n  // The final step\n  leftMostElements.forEach((element, i) => {\n    elements[i] = element;\n  });\n\n  return elements;\n}\n\n// Let's go through an example\n//        |        |\n// [a, b, c, d, e, f, g]\n// -->\n// [a, b, d, e, g, c, f]\n//\n// We are going to override all the elements we want to move, so we keep them in an array\n// that we will restore at the end.\n// [c, f]\n//\n// From now on, we'll never read those values from the array anymore\n//        |0       |1\n// [a, b, _, d, e, _, g]\n//\n// The idea is that we want to shift all the elements between the marker 0 and 1\n// by one slot to the left.\n//\n//        |0       |1\n// [a, b, _, d, e, _, g]\n//          <- <-\n//\n// which gives us\n//\n//        |0       |1\n// [a, b, d, e, _, _, g]\n//\n// Now, we need to move all the elements from marker 1 to the end by two (not one)\n// slots to the left, which gives us\n//\n//        |0       |1\n// [a, b, d, e, _, _, g]\n//              ^------\n//\n// which gives us\n//\n//        |0       |1\n// [a, b, d, e, g, _, _]\n//\n// At this point, we can fill back the rightmost elements with the array we saved at\n// the beginning\n//\n//        |0       |1\n// [a, b, d, e, g, c, f]\n//\n// And we are done!\nexport function moveAllRight<T>(elements: T[], indicesToMove: number[]) {\n  const reversedIndicesToMove = indicesToMove.sort(\n    (a: number, b: number) => b - a,\n  );\n\n  // Copy the elements to move\n  const rightMostElements = reversedIndicesToMove.map(\n    (index) => elements[index],\n  );\n\n  indicesToMove = reversedIndicesToMove\n    // We go from left to right to avoid overriding elements.\n    .reverse()\n    // We last element index for the final marker\n    .concat([elements.length]);\n\n  indicesToMove.forEach((index, i) => {\n    // We skip the first one as it is not paired with anything else\n    if (i === 0) {\n      return;\n    }\n\n    // We go from the next marker to the left (i - 1) to the current one (index)\n    for (let pos = indicesToMove[i - 1] + 1; pos < index; ++pos) {\n      // We move by 1 the first time, 2 the second... So we can use the index i in the array\n      elements[pos - i] = elements[pos];\n    }\n  });\n\n  // The final step\n  rightMostElements.forEach((element, i) => {\n    elements[elements.length - i - 1] = element;\n  });\n\n  return elements;\n}\n","import React from \"react\";\nimport {\n  moveOneLeft,\n  moveOneRight,\n  moveAllLeft,\n  moveAllRight,\n} from \"../zindex\";\nimport { KEYS, isDarwin } from \"../keys\";\nimport { t } from \"../i18n\";\nimport { getShortcutKey } from \"../utils\";\nimport { register } from \"./register\";\nimport {\n  sendBackward,\n  bringToFront,\n  sendToBack,\n  bringForward,\n} from \"../components/icons\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { AppState } from \"../types\";\n\nfunction getElementIndices(\n  direction: \"left\" | \"right\",\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n) {\n  const selectedIndices: number[] = [];\n  let deletedIndicesCache: number[] = [];\n\n  function cb(element: ExcalidrawElement, index: number) {\n    if (element.isDeleted) {\n      // we want to build an array of deleted elements that are preceeding\n      //  a selected element so that we move them together\n      deletedIndicesCache.push(index);\n    } else {\n      if (appState.selectedElementIds[element.id]) {\n        selectedIndices.push(...deletedIndicesCache, index);\n      }\n      // always empty cache of deleted elements after either pushing a group\n      //  of selected/deleted elements, of after encountering non-deleted elem\n      deletedIndicesCache = [];\n    }\n  }\n\n  // sending back → select contiguous deleted elements that are to the left of\n  //  selected element(s)\n  if (direction === \"left\") {\n    let i = -1;\n    const len = elements.length;\n    while (++i < len) {\n      cb(elements[i], i);\n    }\n    // moving to front → loop from right to left so that we don't need to\n    //  backtrack when gathering deleted elements\n  } else {\n    let i = elements.length;\n    while (--i > -1) {\n      cb(elements[i], i);\n    }\n  }\n  // sort in case we were gathering indexes from right to left\n  return selectedIndices.sort();\n}\n\nfunction moveElements(\n  func: typeof moveOneLeft,\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n) {\n  const _elements = elements.slice();\n  const direction =\n    func === moveOneLeft || func === moveAllLeft ? \"left\" : \"right\";\n  const indices = getElementIndices(direction, _elements, appState);\n  return func(_elements, indices);\n}\n\nexport const actionSendBackward = register({\n  name: \"sendBackward\",\n  perform: (elements, appState) => {\n    return {\n      elements: moveElements(moveOneLeft, elements, appState),\n      appState,\n      commitToHistory: true,\n    };\n  },\n  contextItemLabel: \"labels.sendBackward\",\n  keyPriority: 40,\n  keyTest: (event) =>\n    event[KEYS.CTRL_OR_CMD] && !event.shiftKey && event.code === \"BracketLeft\",\n  PanelComponent: ({ updateData }) => (\n    <button\n      type=\"button\"\n      className=\"zIndexButton\"\n      onClick={() => updateData(null)}\n      title={`${t(\"labels.sendBackward\")} — ${getShortcutKey(\"CtrlOrCmd+[\")}`}\n    >\n      {sendBackward}\n    </button>\n  ),\n});\n\nexport const actionBringForward = register({\n  name: \"bringForward\",\n  perform: (elements, appState) => {\n    return {\n      elements: moveElements(moveOneRight, elements, appState),\n      appState,\n      commitToHistory: true,\n    };\n  },\n  contextItemLabel: \"labels.bringForward\",\n  keyPriority: 40,\n  keyTest: (event) =>\n    event[KEYS.CTRL_OR_CMD] && !event.shiftKey && event.code === \"BracketRight\",\n  PanelComponent: ({ updateData }) => (\n    <button\n      type=\"button\"\n      className=\"zIndexButton\"\n      onClick={() => updateData(null)}\n      title={`${t(\"labels.bringForward\")} — ${getShortcutKey(\"CtrlOrCmd+]\")}`}\n    >\n      {bringForward}\n    </button>\n  ),\n});\n\nexport const actionSendToBack = register({\n  name: \"sendToBack\",\n  perform: (elements, appState) => {\n    return {\n      elements: moveElements(moveAllLeft, elements, appState),\n      appState,\n      commitToHistory: true,\n    };\n  },\n  contextItemLabel: \"labels.sendToBack\",\n  keyTest: (event) => {\n    return isDarwin\n      ? event[KEYS.CTRL_OR_CMD] && event.altKey && event.code === \"BracketLeft\"\n      : event[KEYS.CTRL_OR_CMD] &&\n          event.shiftKey &&\n          event.code === \"BracketLeft\";\n  },\n  PanelComponent: ({ updateData }) => (\n    <button\n      type=\"button\"\n      className=\"zIndexButton\"\n      onClick={() => updateData(null)}\n      title={`${t(\"labels.sendToBack\")} — ${\n        isDarwin\n          ? getShortcutKey(\"CtrlOrCmd+Alt+[\")\n          : getShortcutKey(\"CtrlOrCmd+Shift+[\")\n      }`}\n    >\n      {sendToBack}\n    </button>\n  ),\n});\n\nexport const actionBringToFront = register({\n  name: \"bringToFront\",\n  perform: (elements, appState) => {\n    return {\n      elements: moveElements(moveAllRight, elements, appState),\n      appState,\n      commitToHistory: true,\n    };\n  },\n  contextItemLabel: \"labels.bringToFront\",\n  keyTest: (event) => {\n    return isDarwin\n      ? event[KEYS.CTRL_OR_CMD] && event.altKey && event.code === \"BracketRight\"\n      : event[KEYS.CTRL_OR_CMD] &&\n          event.shiftKey &&\n          event.code === \"BracketRight\";\n  },\n  PanelComponent: ({ updateData }) => (\n    <button\n      type=\"button\"\n      className=\"zIndexButton\"\n      onClick={(event) => updateData(null)}\n      title={`${t(\"labels.bringToFront\")} — ${\n        isDarwin\n          ? getShortcutKey(\"CtrlOrCmd+Alt+]\")\n          : getShortcutKey(\"CtrlOrCmd+Shift+]\")\n      }`}\n    >\n      {bringToFront}\n    </button>\n  ),\n});\n","import { KEYS } from \"../keys\";\nimport { register } from \"./register\";\n\nexport const actionSelectAll = register({\n  name: \"selectAll\",\n  perform: (elements, appState) => {\n    return {\n      appState: {\n        ...appState,\n        selectedElementIds: elements.reduce((map, element) => {\n          if (!element.isDeleted) {\n            map[element.id] = true;\n          }\n          return map;\n        }, {} as any),\n      },\n      commitToHistory: true,\n    };\n  },\n  contextItemLabel: \"labels.selectAll\",\n  keyTest: (event) => event[KEYS.CTRL_OR_CMD] && event.key === \"a\",\n});\n","import React from \"react\";\nimport { KEYS } from \"../keys\";\nimport { register } from \"./register\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { duplicateElement, getNonDeletedElements } from \"../element\";\nimport { isSomeElementSelected } from \"../scene\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { clone } from \"../components/icons\";\nimport { t } from \"../i18n\";\nimport { getShortcutKey } from \"../utils\";\n\nexport const actionDuplicateSelection = register({\n  name: \"duplicateSelection\",\n  perform: (elements, appState) => {\n    return {\n      appState,\n      elements: elements.reduce(\n        (acc: Array<ExcalidrawElement>, element: ExcalidrawElement) => {\n          if (appState.selectedElementIds[element.id]) {\n            const newElement = duplicateElement(element, {\n              x: element.x + 10,\n              y: element.y + 10,\n            });\n            appState.selectedElementIds[newElement.id] = true;\n            delete appState.selectedElementIds[element.id];\n            return acc.concat([element, newElement]);\n          }\n          return acc.concat(element);\n        },\n        [],\n      ),\n      commitToHistory: true,\n    };\n  },\n  contextItemLabel: \"labels.duplicateSelection\",\n  keyTest: (event) => event[KEYS.CTRL_OR_CMD] && event.key === \"d\",\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={clone}\n      title={`${t(\"labels.duplicateSelection\")} — ${getShortcutKey(\n        \"CtrlOrCmd+D\",\n      )}`}\n      aria-label={t(\"labels.duplicateSelection\")}\n      onClick={() => updateData(null)}\n      visible={isSomeElementSelected(getNonDeletedElements(elements), appState)}\n    />\n  ),\n});\n","import React from \"react\";\n\nexport function ButtonSelect<T>({\n  options,\n  value,\n  onChange,\n  group,\n}: {\n  options: { value: T; text: string }[];\n  value: T | null;\n  onChange: (value: T) => void;\n  group: string;\n}) {\n  return (\n    <div className=\"buttonList\">\n      {options.map((option) => (\n        <label\n          key={option.text}\n          className={value === option.value ? \"active\" : \"\"}\n        >\n          <input\n            type=\"radio\"\n            name={group}\n            onChange={() => onChange(option.value)}\n            checked={value === option.value ? true : false}\n          />\n          {option.text}\n        </label>\n      ))}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Popover } from \"./Popover\";\n\nimport \"./ColorPicker.scss\";\nimport { KEYS } from \"../keys\";\nimport { t, getLanguage } from \"../i18n\";\nimport { isWritableElement } from \"../utils\";\nimport colors from \"../colors\";\n\nfunction isValidColor(color: string) {\n  const style = new Option().style;\n  style.color = color;\n  return !!style.color;\n}\n\nconst getColor = (color: string): string | null => {\n  if (color === \"transparent\") {\n    return color;\n  }\n\n  return isValidColor(color)\n    ? color\n    : isValidColor(`#${color}`)\n    ? `#${color}`\n    : null;\n};\n\n// This is a narrow reimplementation of the awesome react-color Twitter component\n// https://github.com/casesandberg/react-color/blob/master/src/components/twitter/Twitter.js\n\n// Unfortunately, we can't detect keyboard layout in the browser. So this will\n// only work well for QWERTY but not AZERTY or others...\nconst keyBindings = [\n  [\"1\", \"2\", \"3\", \"4\", \"5\"],\n  [\"q\", \"w\", \"e\", \"r\", \"t\"],\n  [\"a\", \"s\", \"d\", \"f\", \"g\"],\n].flat();\n\nconst Picker = function ({\n  colors,\n  color,\n  onChange,\n  onClose,\n  label,\n  showInput = true,\n}: {\n  colors: string[];\n  color: string | null;\n  onChange: (color: string) => void;\n  onClose: () => void;\n  label: string;\n  showInput: boolean;\n}) {\n  const firstItem = React.useRef<HTMLButtonElement>();\n  const activeItem = React.useRef<HTMLButtonElement>();\n  const gallery = React.useRef<HTMLDivElement>();\n  const colorInput = React.useRef<HTMLInputElement>();\n\n  React.useEffect(() => {\n    // After the component is first mounted\n    // focus on first input\n    if (activeItem.current) {\n      activeItem.current.focus();\n    } else if (colorInput.current) {\n      colorInput.current.focus();\n    }\n  }, []);\n\n  const handleKeyDown = (event: React.KeyboardEvent) => {\n    if (event.key === KEYS.TAB) {\n      const { activeElement } = document;\n      if (event.shiftKey) {\n        if (activeElement === firstItem.current) {\n          colorInput.current?.focus();\n          event.preventDefault();\n        }\n      } else {\n        if (activeElement === colorInput.current) {\n          firstItem.current?.focus();\n          event.preventDefault();\n        }\n      }\n    } else if (\n      event.key === KEYS.ARROW_RIGHT ||\n      event.key === KEYS.ARROW_LEFT ||\n      event.key === KEYS.ARROW_UP ||\n      event.key === KEYS.ARROW_DOWN\n    ) {\n      const { activeElement } = document;\n      const isRTL = getLanguage().rtl;\n      const index = Array.prototype.indexOf.call(\n        gallery!.current!.children,\n        activeElement,\n      );\n      if (index !== -1) {\n        const length = gallery!.current!.children.length - (showInput ? 1 : 0);\n        const nextIndex =\n          event.key === (isRTL ? KEYS.ARROW_LEFT : KEYS.ARROW_RIGHT)\n            ? (index + 1) % length\n            : event.key === (isRTL ? KEYS.ARROW_RIGHT : KEYS.ARROW_LEFT)\n            ? (length + index - 1) % length\n            : event.key === KEYS.ARROW_DOWN\n            ? (index + 5) % length\n            : event.key === KEYS.ARROW_UP\n            ? (length + index - 5) % length\n            : index;\n        (gallery!.current!.children![nextIndex] as any).focus();\n      }\n      event.preventDefault();\n    } else if (\n      keyBindings.includes(event.key.toLowerCase()) &&\n      !isWritableElement(event.target)\n    ) {\n      const index = keyBindings.indexOf(event.key.toLowerCase());\n      (gallery!.current!.children![index] as any).focus();\n      event.preventDefault();\n    } else if (event.key === KEYS.ESCAPE || event.key === KEYS.ENTER) {\n      event.preventDefault();\n      onClose();\n    }\n    event.nativeEvent.stopImmediatePropagation();\n  };\n\n  return (\n    <div\n      className=\"color-picker\"\n      role=\"dialog\"\n      aria-modal=\"true\"\n      aria-label={t(\"labels.colorPicker\")}\n      onKeyDown={handleKeyDown}\n    >\n      <div className=\"color-picker-triangle color-picker-triangle-shadow\"></div>\n      <div className=\"color-picker-triangle\"></div>\n      <div\n        className=\"color-picker-content\"\n        ref={(el) => {\n          if (el) {\n            gallery.current = el;\n          }\n        }}\n      >\n        {colors.map((_color, i) => (\n          <button\n            className=\"color-picker-swatch\"\n            onClick={(event) => {\n              (event.currentTarget as HTMLButtonElement).focus();\n              onChange(_color);\n            }}\n            title={`${_color} — ${keyBindings[i].toUpperCase()}`}\n            aria-label={_color}\n            aria-keyshortcuts={keyBindings[i]}\n            style={{ color: _color }}\n            key={_color}\n            ref={(el) => {\n              if (el && i === 0) {\n                firstItem.current = el;\n              }\n              if (el && _color === color) {\n                activeItem.current = el;\n              }\n            }}\n            onFocus={() => {\n              onChange(_color);\n            }}\n          >\n            {_color === \"transparent\" ? (\n              <div className=\"color-picker-transparent\"></div>\n            ) : undefined}\n            <span className=\"color-picker-keybinding\">{keyBindings[i]}</span>\n          </button>\n        ))}\n        {showInput && (\n          <ColorInput\n            color={color}\n            label={label}\n            onChange={(color) => {\n              onChange(color);\n            }}\n            ref={colorInput}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst ColorInput = React.forwardRef(\n  (\n    {\n      color,\n      onChange,\n      label,\n    }: {\n      color: string | null;\n      onChange: (color: string) => void;\n      label: string;\n    },\n    ref,\n  ) => {\n    const [innerValue, setInnerValue] = React.useState(color);\n    const inputRef = React.useRef(null);\n\n    React.useEffect(() => {\n      setInnerValue(color);\n    }, [color]);\n\n    React.useImperativeHandle(ref, () => inputRef.current);\n\n    const changeColor = React.useCallback(\n      (inputValue: string) => {\n        const value = inputValue.toLowerCase();\n        const color = getColor(value);\n        if (color) {\n          onChange(color);\n        }\n        setInnerValue(value);\n      },\n      [onChange],\n    );\n\n    return (\n      <label className=\"color-input-container\">\n        <div className=\"color-picker-hash\">#</div>\n        <input\n          spellCheck={false}\n          className=\"color-picker-input\"\n          aria-label={label}\n          onChange={(event) => changeColor(event.target.value)}\n          value={(innerValue || \"\").replace(/^#/, \"\")}\n          onBlur={() => setInnerValue(color)}\n          ref={inputRef}\n        />\n      </label>\n    );\n  },\n);\n\nexport function ColorPicker({\n  type,\n  color,\n  onChange,\n  label,\n}: {\n  type: \"canvasBackground\" | \"elementBackground\" | \"elementStroke\";\n  color: string | null;\n  onChange: (color: string) => void;\n  label: string;\n}) {\n  const [isActive, setActive] = React.useState(false);\n  const pickerButton = React.useRef<HTMLButtonElement>(null);\n\n  return (\n    <div>\n      <div className=\"color-picker-control-container\">\n        <button\n          className=\"color-picker-label-swatch\"\n          aria-label={label}\n          style={\n            color\n              ? ({ \"--swatch-color\": color } as React.CSSProperties)\n              : undefined\n          }\n          onClick={() => setActive(!isActive)}\n          ref={pickerButton}\n        />\n        <ColorInput\n          color={color}\n          label={label}\n          onChange={(color) => {\n            onChange(color);\n          }}\n        />\n      </div>\n      <React.Suspense fallback=\"\">\n        {isActive ? (\n          <Popover\n            onCloseRequest={(event) =>\n              event.target !== pickerButton.current && setActive(false)\n            }\n          >\n            <Picker\n              colors={colors[type]}\n              color={color || null}\n              onChange={(changedColor) => {\n                onChange(changedColor);\n              }}\n              onClose={() => {\n                setActive(false);\n                pickerButton.current?.focus();\n              }}\n              label={label}\n              showInput={false}\n            />\n          </Popover>\n        ) : null}\n      </React.Suspense>\n    </div>\n  );\n}\n","import React from \"react\";\nimport {\n  ExcalidrawElement,\n  ExcalidrawTextElement,\n  TextAlign,\n} from \"../element/types\";\nimport {\n  getCommonAttributeOfSelectedElements,\n  isSomeElementSelected,\n} from \"../scene\";\nimport { ButtonSelect } from \"../components/ButtonSelect\";\nimport {\n  isTextElement,\n  redrawTextBoundingBox,\n  getNonDeletedElements,\n} from \"../element\";\nimport { ColorPicker } from \"../components/ColorPicker\";\nimport { AppState } from \"../../src/types\";\nimport { t } from \"../i18n\";\nimport { DEFAULT_FONT } from \"../appState\";\nimport { register } from \"./register\";\nimport { newElementWith } from \"../element/mutateElement\";\n\nconst changeProperty = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n  callback: (element: ExcalidrawElement) => ExcalidrawElement,\n) => {\n  return elements.map((element) => {\n    if (\n      appState.selectedElementIds[element.id] ||\n      element.id === appState.editingElement?.id\n    ) {\n      return callback(element);\n    }\n    return element;\n  });\n};\n\nconst getFormValue = function <T>(\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n  getAttribute: (element: ExcalidrawElement) => T,\n  defaultValue?: T,\n): T | null {\n  const editingElement = appState.editingElement;\n  const nonDeletedElements = getNonDeletedElements(elements);\n  return (\n    (editingElement && getAttribute(editingElement)) ??\n    (isSomeElementSelected(nonDeletedElements, appState)\n      ? getCommonAttributeOfSelectedElements(\n          nonDeletedElements,\n          appState,\n          getAttribute,\n        )\n      : defaultValue) ??\n    null\n  );\n};\n\nexport const actionChangeStrokeColor = register({\n  name: \"changeStrokeColor\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) =>\n        newElementWith(el, {\n          strokeColor: value,\n        }),\n      ),\n      appState: { ...appState, currentItemStrokeColor: value },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <>\n      <h3 aria-hidden=\"true\">{t(\"labels.stroke\")}</h3>\n      <ColorPicker\n        type=\"elementStroke\"\n        label={t(\"labels.stroke\")}\n        color={getFormValue(\n          elements,\n          appState,\n          (element) => element.strokeColor,\n          appState.currentItemStrokeColor,\n        )}\n        onChange={updateData}\n      />\n    </>\n  ),\n});\n\nexport const actionChangeBackgroundColor = register({\n  name: \"changeBackgroundColor\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) =>\n        newElementWith(el, {\n          backgroundColor: value,\n        }),\n      ),\n      appState: { ...appState, currentItemBackgroundColor: value },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <>\n      <h3 aria-hidden=\"true\">{t(\"labels.background\")}</h3>\n      <ColorPicker\n        type=\"elementBackground\"\n        label={t(\"labels.background\")}\n        color={getFormValue(\n          elements,\n          appState,\n          (element) => element.backgroundColor,\n          appState.currentItemBackgroundColor,\n        )}\n        onChange={updateData}\n      />\n    </>\n  ),\n});\n\nexport const actionChangeFillStyle = register({\n  name: \"changeFillStyle\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) =>\n        newElementWith(el, {\n          fillStyle: value,\n        }),\n      ),\n      appState: { ...appState, currentItemFillStyle: value },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <fieldset>\n      <legend>{t(\"labels.fill\")}</legend>\n      <ButtonSelect\n        options={[\n          { value: \"hachure\", text: t(\"labels.hachure\") },\n          { value: \"cross-hatch\", text: t(\"labels.crossHatch\") },\n          { value: \"solid\", text: t(\"labels.solid\") },\n        ]}\n        group=\"fill\"\n        value={getFormValue(\n          elements,\n          appState,\n          (element) => element.fillStyle,\n          appState.currentItemFillStyle,\n        )}\n        onChange={(value) => {\n          updateData(value);\n        }}\n      />\n    </fieldset>\n  ),\n});\n\nexport const actionChangeStrokeWidth = register({\n  name: \"changeStrokeWidth\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) =>\n        newElementWith(el, {\n          strokeWidth: value,\n        }),\n      ),\n      appState: { ...appState, currentItemStrokeWidth: value },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <fieldset>\n      <legend>{t(\"labels.strokeWidth\")}</legend>\n      <ButtonSelect\n        group=\"stroke-width\"\n        options={[\n          { value: 1, text: t(\"labels.thin\") },\n          { value: 2, text: t(\"labels.bold\") },\n          { value: 4, text: t(\"labels.extraBold\") },\n        ]}\n        value={getFormValue(\n          elements,\n          appState,\n          (element) => element.strokeWidth,\n          appState.currentItemStrokeWidth,\n        )}\n        onChange={(value) => updateData(value)}\n      />\n    </fieldset>\n  ),\n});\n\nexport const actionChangeSloppiness = register({\n  name: \"changeSloppiness\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) =>\n        newElementWith(el, {\n          roughness: value,\n        }),\n      ),\n      appState: { ...appState, currentItemRoughness: value },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <fieldset>\n      <legend>{t(\"labels.sloppiness\")}</legend>\n      <ButtonSelect\n        group=\"sloppiness\"\n        options={[\n          { value: 0, text: t(\"labels.architect\") },\n          { value: 1, text: t(\"labels.artist\") },\n          { value: 2, text: t(\"labels.cartoonist\") },\n        ]}\n        value={getFormValue(\n          elements,\n          appState,\n          (element) => element.roughness,\n          appState.currentItemRoughness,\n        )}\n        onChange={(value) => updateData(value)}\n      />\n    </fieldset>\n  ),\n});\n\nexport const actionChangeStrokeStyle = register({\n  name: \"changeStrokeStyle\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) =>\n        newElementWith(el, {\n          strokeStyle: value,\n        }),\n      ),\n      appState: { ...appState, currentItemStrokeStyle: value },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <fieldset>\n      <legend>{t(\"labels.strokeStyle\")}</legend>\n      <ButtonSelect\n        group=\"strokeStyle\"\n        options={[\n          { value: \"solid\", text: t(\"labels.strokeStyle_solid\") },\n          { value: \"dashed\", text: t(\"labels.strokeStyle_dashed\") },\n          { value: \"dotted\", text: t(\"labels.strokeStyle_dotted\") },\n        ]}\n        value={getFormValue(\n          elements,\n          appState,\n          (element) => element.strokeStyle,\n          appState.currentItemStrokeStyle,\n        )}\n        onChange={(value) => updateData(value)}\n      />\n    </fieldset>\n  ),\n});\n\nexport const actionChangeOpacity = register({\n  name: \"changeOpacity\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) =>\n        newElementWith(el, {\n          opacity: value,\n        }),\n      ),\n      appState: { ...appState, currentItemOpacity: value },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <label className=\"control-label\">\n      {t(\"labels.opacity\")}\n      <input\n        type=\"range\"\n        min=\"0\"\n        max=\"100\"\n        step=\"10\"\n        onChange={(event) => updateData(+event.target.value)}\n        onWheel={(event) => {\n          event.stopPropagation();\n          const target = event.target as HTMLInputElement;\n          const STEP = 10;\n          const MAX = 100;\n          const MIN = 0;\n          const value = +target.value;\n\n          if (event.deltaY < 0 && value < MAX) {\n            updateData(value + STEP);\n          } else if (event.deltaY > 0 && value > MIN) {\n            updateData(value - STEP);\n          }\n        }}\n        value={\n          getFormValue(\n            elements,\n            appState,\n            (element) => element.opacity,\n            appState.currentItemOpacity,\n          ) ?? undefined\n        }\n      />\n    </label>\n  ),\n});\n\nexport const actionChangeFontSize = register({\n  name: \"changeFontSize\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) => {\n        if (isTextElement(el)) {\n          const element: ExcalidrawTextElement = newElementWith(el, {\n            font: `${value}px ${el.font.split(\"px \")[1]}`,\n          });\n          redrawTextBoundingBox(element);\n          return element;\n        }\n\n        return el;\n      }),\n      appState: {\n        ...appState,\n        currentItemFont: `${value}px ${\n          appState.currentItemFont.split(\"px \")[1]\n        }`,\n      },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <fieldset>\n      <legend>{t(\"labels.fontSize\")}</legend>\n      <ButtonSelect\n        group=\"font-size\"\n        options={[\n          { value: 16, text: t(\"labels.small\") },\n          { value: 20, text: t(\"labels.medium\") },\n          { value: 28, text: t(\"labels.large\") },\n          { value: 36, text: t(\"labels.veryLarge\") },\n        ]}\n        value={getFormValue(\n          elements,\n          appState,\n          (element) => isTextElement(element) && +element.font.split(\"px \")[0],\n          +(appState.currentItemFont || DEFAULT_FONT).split(\"px \")[0],\n        )}\n        onChange={(value) => updateData(value)}\n      />\n    </fieldset>\n  ),\n});\n\nexport const actionChangeFontFamily = register({\n  name: \"changeFontFamily\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) => {\n        if (isTextElement(el)) {\n          const element: ExcalidrawTextElement = newElementWith(el, {\n            font: `${el.font.split(\"px \")[0]}px ${value}`,\n          });\n          redrawTextBoundingBox(element);\n          return element;\n        }\n\n        return el;\n      }),\n      appState: {\n        ...appState,\n        currentItemFont: `${\n          appState.currentItemFont.split(\"px \")[0]\n        }px ${value}`,\n      },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <fieldset>\n      <legend>{t(\"labels.fontFamily\")}</legend>\n      <ButtonSelect\n        group=\"font-family\"\n        options={[\n          { value: \"Virgil\", text: t(\"labels.handDrawn\") },\n          { value: \"Helvetica\", text: t(\"labels.normal\") },\n          { value: \"Cascadia\", text: t(\"labels.code\") },\n        ]}\n        value={getFormValue(\n          elements,\n          appState,\n          (element) => isTextElement(element) && element.font.split(\"px \")[1],\n          (appState.currentItemFont || DEFAULT_FONT).split(\"px \")[1],\n        )}\n        onChange={(value) => updateData(value)}\n      />\n    </fieldset>\n  ),\n});\n\nexport const actionChangeTextAlign = register({\n  name: \"changeTextAlign\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) => {\n        if (isTextElement(el)) {\n          const element: ExcalidrawTextElement = newElementWith(el, {\n            textAlign: value,\n          });\n          redrawTextBoundingBox(element);\n          return element;\n        }\n\n        return el;\n      }),\n      appState: {\n        ...appState,\n        currentItemTextAlign: value,\n      },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <fieldset>\n      <legend>{t(\"labels.textAlign\")}</legend>\n      <ButtonSelect<TextAlign | false>\n        group=\"text-align\"\n        options={[\n          { value: \"left\", text: t(\"labels.left\") },\n          { value: \"center\", text: t(\"labels.center\") },\n          { value: \"right\", text: t(\"labels.right\") },\n        ]}\n        value={getFormValue(\n          elements,\n          appState,\n          (element) => isTextElement(element) && element.textAlign,\n          appState.currentItemTextAlign,\n        )}\n        onChange={(value) => updateData(value)}\n      />\n    </fieldset>\n  ),\n});\n","import React from \"react\";\nimport { ColorPicker } from \"../components/ColorPicker\";\nimport { getDefaultAppState } from \"../appState\";\nimport { trash, zoomIn, zoomOut, resetZoom } from \"../components/icons\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { t } from \"../i18n\";\nimport { getNormalizedZoom, calculateScrollCenter } from \"../scene\";\nimport { KEYS } from \"../keys\";\nimport { getShortcutKey } from \"../utils\";\nimport useIsMobile from \"../is-mobile\";\nimport { register } from \"./register\";\nimport { newElementWith } from \"../element/mutateElement\";\nimport { AppState, FlooredNumber } from \"../types\";\nimport { getCommonBounds } from \"../element\";\n\nexport const actionChangeViewBackgroundColor = register({\n  name: \"changeViewBackgroundColor\",\n  perform: (_, appState, value) => {\n    return {\n      appState: { ...appState, viewBackgroundColor: value },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ appState, updateData }) => {\n    return (\n      <div style={{ position: \"relative\" }}>\n        <ColorPicker\n          label={t(\"labels.canvasBackground\")}\n          type=\"canvasBackground\"\n          color={appState.viewBackgroundColor}\n          onChange={(color) => updateData(color)}\n        />\n      </div>\n    );\n  },\n});\n\nexport const actionClearCanvas = register({\n  name: \"clearCanvas\",\n  perform: (elements, appState: AppState) => {\n    return {\n      elements: elements.map((element) =>\n        newElementWith(element, { isDeleted: true }),\n      ),\n      appState: {\n        ...getDefaultAppState(),\n        username: appState.username,\n      },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={trash}\n      title={t(\"buttons.clearReset\")}\n      aria-label={t(\"buttons.clearReset\")}\n      showAriaLabel={useIsMobile()}\n      onClick={() => {\n        if (window.confirm(t(\"alerts.clearReset\"))) {\n          // TODO: Defined globally, since file handles aren't yet serializable.\n          // Once `FileSystemFileHandle` can be serialized, make this\n          // part of `AppState`.\n          (window as any).handle = null;\n          updateData(null);\n        }\n      }}\n    />\n  ),\n});\n\nconst ZOOM_STEP = 0.1;\n\nconst KEY_CODES = {\n  MINUS: \"Minus\",\n  EQUAL: \"Equal\",\n  ONE: \"Digit1\",\n  ZERO: \"Digit0\",\n  NUM_SUBTRACT: \"NumpadSubtract\",\n  NUM_ADD: \"NumpadAdd\",\n  NUM_ZERO: \"Numpad0\",\n};\n\nexport const actionZoomIn = register({\n  name: \"zoomIn\",\n  perform: (_elements, appState) => {\n    return {\n      appState: {\n        ...appState,\n        zoom: getNormalizedZoom(appState.zoom + ZOOM_STEP),\n      },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={zoomIn}\n      title={`${t(\"buttons.zoomIn\")} — ${getShortcutKey(\"CtrlOrCmd++\")}`}\n      aria-label={t(\"buttons.zoomIn\")}\n      onClick={() => {\n        updateData(null);\n      }}\n    />\n  ),\n  keyTest: (event) =>\n    (event.code === KEY_CODES.EQUAL || event.code === KEY_CODES.NUM_ADD) &&\n    (event[KEYS.CTRL_OR_CMD] || event.shiftKey),\n});\n\nexport const actionZoomOut = register({\n  name: \"zoomOut\",\n  perform: (_elements, appState) => {\n    return {\n      appState: {\n        ...appState,\n        zoom: getNormalizedZoom(appState.zoom - ZOOM_STEP),\n      },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={zoomOut}\n      title={`${t(\"buttons.zoomOut\")} — ${getShortcutKey(\"CtrlOrCmd+-\")}`}\n      aria-label={t(\"buttons.zoomOut\")}\n      onClick={() => {\n        updateData(null);\n      }}\n    />\n  ),\n  keyTest: (event) =>\n    (event.code === KEY_CODES.MINUS || event.code === KEY_CODES.NUM_SUBTRACT) &&\n    (event[KEYS.CTRL_OR_CMD] || event.shiftKey),\n});\n\nexport const actionResetZoom = register({\n  name: \"resetZoom\",\n  perform: (_elements, appState) => {\n    return {\n      appState: {\n        ...appState,\n        zoom: 1,\n      },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={resetZoom}\n      title={t(\"buttons.resetZoom\")}\n      aria-label={t(\"buttons.resetZoom\")}\n      onClick={() => {\n        updateData(null);\n      }}\n    />\n  ),\n  keyTest: (event) =>\n    (event.code === KEY_CODES.ZERO || event.code === KEY_CODES.NUM_ZERO) &&\n    (event[KEYS.CTRL_OR_CMD] || event.shiftKey),\n});\n\nconst calculateZoom = (\n  commonBounds: number[],\n  currentZoom: number,\n  {\n    scrollX,\n    scrollY,\n  }: {\n    scrollX: FlooredNumber;\n    scrollY: FlooredNumber;\n  },\n): number => {\n  const { innerWidth, innerHeight } = window;\n  const [x, y] = commonBounds;\n  const zoomX = -innerWidth / (2 * scrollX + 2 * x - innerWidth);\n  const zoomY = -innerHeight / (2 * scrollY + 2 * y - innerHeight);\n  const margin = 0.01;\n  let newZoom;\n\n  if (zoomX < zoomY) {\n    newZoom = zoomX - margin;\n  } else if (zoomY <= zoomX) {\n    newZoom = zoomY - margin;\n  } else {\n    newZoom = currentZoom;\n  }\n\n  if (newZoom <= 0.1) {\n    return 0.1;\n  }\n  if (newZoom >= 1) {\n    return 1;\n  }\n\n  return newZoom;\n};\n\nexport const actionZoomToFit = register({\n  name: \"zoomToFit\",\n  perform: (elements, appState) => {\n    const nonDeletedElements = elements.filter((element) => !element.isDeleted);\n    const scrollCenter = calculateScrollCenter(nonDeletedElements);\n    const commonBounds = getCommonBounds(nonDeletedElements);\n    const zoom = calculateZoom(commonBounds, appState.zoom, scrollCenter);\n\n    return {\n      appState: {\n        ...appState,\n        scrollX: scrollCenter.scrollX,\n        scrollY: scrollCenter.scrollY,\n        zoom,\n      },\n      commitToHistory: false,\n    };\n  },\n  keyTest: (event) =>\n    event.code === KEY_CODES.ONE &&\n    event.shiftKey &&\n    !event.altKey &&\n    !event[KEYS.CTRL_OR_CMD],\n});\n","import { KEYS } from \"../keys\";\nimport { isInvisiblySmallElement } from \"../element\";\nimport { resetCursor } from \"../utils\";\nimport React from \"react\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { done } from \"../components/icons\";\nimport { t } from \"../i18n\";\nimport { register } from \"./register\";\nimport { mutateElement } from \"../element/mutateElement\";\nimport { isPathALoop } from \"../math\";\n\nexport const actionFinalize = register({\n  name: \"finalize\",\n  perform: (elements, appState) => {\n    let newElements = elements;\n    if (window.document.activeElement instanceof HTMLElement) {\n      window.document.activeElement.blur();\n    }\n\n    const multiPointElement = appState.multiElement\n      ? appState.multiElement\n      : appState.editingElement?.type === \"draw\"\n      ? appState.editingElement\n      : null;\n\n    if (multiPointElement) {\n      // pen and mouse have hover\n      if (\n        multiPointElement.type !== \"draw\" &&\n        appState.lastPointerDownWith !== \"touch\"\n      ) {\n        const { points, lastCommittedPoint } = multiPointElement;\n        if (\n          !lastCommittedPoint ||\n          points[points.length - 1] !== lastCommittedPoint\n        ) {\n          mutateElement(multiPointElement, {\n            points: multiPointElement.points.slice(0, -1),\n          });\n        }\n      }\n      if (isInvisiblySmallElement(multiPointElement)) {\n        newElements = newElements.slice(0, -1);\n      }\n\n      // If the multi point line closes the loop,\n      // set the last point to first point.\n      // This ensures that loop remains closed at different scales.\n      if (\n        multiPointElement.type === \"line\" ||\n        multiPointElement.type === \"draw\"\n      ) {\n        if (isPathALoop(multiPointElement.points)) {\n          const linePoints = multiPointElement.points;\n          const firstPoint = linePoints[0];\n          mutateElement(multiPointElement, {\n            points: linePoints.map((point, i) =>\n              i === linePoints.length - 1\n                ? ([firstPoint[0], firstPoint[1]] as const)\n                : point,\n            ),\n          });\n        }\n      }\n\n      if (!appState.elementLocked) {\n        appState.selectedElementIds[multiPointElement.id] = true;\n      }\n    }\n    if (!appState.elementLocked || !multiPointElement) {\n      resetCursor();\n    }\n    return {\n      elements: newElements,\n      appState: {\n        ...appState,\n        elementType:\n          appState.elementLocked && multiPointElement\n            ? appState.elementType\n            : \"selection\",\n        draggingElement: null,\n        multiElement: null,\n        editingElement: null,\n        selectedElementIds:\n          multiPointElement && !appState.elementLocked\n            ? {\n                ...appState.selectedElementIds,\n                [multiPointElement.id]: true,\n              }\n            : appState.selectedElementIds,\n      },\n      commitToHistory: appState.elementType === \"draw\",\n    };\n  },\n  keyTest: (event, appState) =>\n    (event.key === KEYS.ESCAPE &&\n      !appState.draggingElement &&\n      appState.multiElement === null) ||\n    ((event.key === KEYS.ESCAPE || event.key === KEYS.ENTER) &&\n      appState.multiElement !== null),\n  PanelComponent: ({ appState, updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={done}\n      title={t(\"buttons.done\")}\n      aria-label={t(\"buttons.done\")}\n      onClick={updateData}\n      visible={appState.multiElement != null}\n    />\n  ),\n});\n","import \"./TextInput.scss\";\n\nimport React, { Component } from \"react\";\nimport { selectNode, removeSelection } from \"../utils\";\n\ntype Props = {\n  value: string;\n  onChange: (value: string) => void;\n  label: string;\n};\n\nexport class ProjectName extends Component<Props> {\n  private handleFocus = (event: React.FocusEvent<HTMLElement>) => {\n    selectNode(event.currentTarget);\n  };\n\n  private handleBlur = (event: React.FocusEvent<HTMLElement>) => {\n    const value = event.currentTarget.innerText.trim();\n    if (value !== this.props.value) {\n      this.props.onChange(value);\n    }\n    removeSelection();\n  };\n\n  private handleKeyDown = (event: React.KeyboardEvent<HTMLElement>) => {\n    if (event.key === \"Enter\") {\n      event.preventDefault();\n      if (event.nativeEvent.isComposing || event.keyCode === 229) {\n        return;\n      }\n      event.currentTarget.blur();\n    }\n  };\n  private makeEditable = (editable: HTMLSpanElement | null) => {\n    if (!editable) {\n      return;\n    }\n    try {\n      editable.contentEditable = \"plaintext-only\";\n    } catch {\n      editable.contentEditable = \"true\";\n    }\n  };\n\n  public render() {\n    return (\n      <span\n        suppressContentEditableWarning\n        ref={this.makeEditable}\n        data-type=\"wysiwyg\"\n        className=\"TextInput\"\n        role=\"textbox\"\n        aria-label={this.props.label}\n        onBlur={this.handleBlur}\n        onKeyDown={this.handleKeyDown}\n        onFocus={this.handleFocus}\n      >\n        {this.props.value}\n      </span>\n    );\n  }\n}\n","import React from \"react\";\nimport { ProjectName } from \"../components/ProjectName\";\nimport { saveAsJSON, loadFromJSON } from \"../data\";\nimport { load, save } from \"../components/icons\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { t } from \"../i18n\";\nimport useIsMobile from \"../is-mobile\";\nimport { register } from \"./register\";\nimport { KEYS } from \"../keys\";\n\nexport const actionChangeProjectName = register({\n  name: \"changeProjectName\",\n  perform: (_elements, appState, value) => {\n    return { appState: { ...appState, name: value }, commitToHistory: false };\n  },\n  PanelComponent: ({ appState, updateData }) => (\n    <ProjectName\n      label={t(\"labels.fileTitle\")}\n      value={appState.name || \"Unnamed\"}\n      onChange={(name: string) => updateData(name)}\n    />\n  ),\n});\n\nexport const actionChangeExportBackground = register({\n  name: \"changeExportBackground\",\n  perform: (_elements, appState, value) => {\n    return {\n      appState: { ...appState, exportBackground: value },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ appState, updateData }) => (\n    <label>\n      <input\n        type=\"checkbox\"\n        checked={appState.exportBackground}\n        onChange={(event) => updateData(event.target.checked)}\n      />{\" \"}\n      {t(\"labels.withBackground\")}\n    </label>\n  ),\n});\n\nexport const actionChangeShouldAddWatermark = register({\n  name: \"changeShouldAddWatermark\",\n  perform: (_elements, appState, value) => {\n    return {\n      appState: { ...appState, shouldAddWatermark: value },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ appState, updateData }) => (\n    <label>\n      <input\n        type=\"checkbox\"\n        checked={appState.shouldAddWatermark}\n        onChange={(event) => updateData(event.target.checked)}\n      />{\" \"}\n      {t(\"labels.addWatermark\")}\n    </label>\n  ),\n});\n\nexport const actionSaveScene = register({\n  name: \"saveScene\",\n  perform: (elements, appState, value) => {\n    saveAsJSON(elements, appState).catch((error) => console.error(error));\n    return { commitToHistory: false };\n  },\n  keyTest: (event) => {\n    return event.key === \"s\" && event[KEYS.CTRL_OR_CMD];\n  },\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={save}\n      title={t(\"buttons.save\")}\n      aria-label={t(\"buttons.save\")}\n      showAriaLabel={useIsMobile()}\n      onClick={() => updateData(null)}\n    />\n  ),\n});\n\nexport const actionLoadScene = register({\n  name: \"loadScene\",\n  perform: (\n    elements,\n    appState,\n    { elements: loadedElements, appState: loadedAppState, error },\n  ) => {\n    return {\n      elements: loadedElements,\n      appState: {\n        ...loadedAppState,\n        errorMessage: error,\n      },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={load}\n      title={t(\"buttons.load\")}\n      aria-label={t(\"buttons.load\")}\n      showAriaLabel={useIsMobile()}\n      onClick={() => {\n        loadFromJSON()\n          .then(({ elements, appState }) => {\n            updateData({ elements: elements, appState: appState });\n          })\n          .catch((error) => {\n            // if user cancels, ignore the error\n            if (error.name === \"AbortError\") {\n              return;\n            }\n            updateData({ error: error.message });\n          });\n      }}\n    />\n  ),\n});\n","import {\n  isTextElement,\n  isExcalidrawElement,\n  redrawTextBoundingBox,\n} from \"../element\";\nimport { KEYS } from \"../keys\";\nimport { DEFAULT_FONT, DEFAULT_TEXT_ALIGN } from \"../appState\";\nimport { register } from \"./register\";\nimport { mutateElement, newElementWith } from \"../element/mutateElement\";\n\nlet copiedStyles: string = \"{}\";\n\nexport const actionCopyStyles = register({\n  name: \"copyStyles\",\n  perform: (elements, appState) => {\n    const element = elements.find((el) => appState.selectedElementIds[el.id]);\n    if (element) {\n      copiedStyles = JSON.stringify(element);\n    }\n    return {\n      commitToHistory: false,\n    };\n  },\n  contextItemLabel: \"labels.copyStyles\",\n  keyTest: (event) =>\n    event[KEYS.CTRL_OR_CMD] && event.shiftKey && event.key === \"C\",\n  contextMenuOrder: 0,\n});\n\nexport const actionPasteStyles = register({\n  name: \"pasteStyles\",\n  perform: (elements, appState) => {\n    const pastedElement = JSON.parse(copiedStyles);\n    if (!isExcalidrawElement(pastedElement)) {\n      return { elements, commitToHistory: false };\n    }\n    return {\n      elements: elements.map((element) => {\n        if (appState.selectedElementIds[element.id]) {\n          const newElement = newElementWith(element, {\n            backgroundColor: pastedElement?.backgroundColor,\n            strokeWidth: pastedElement?.strokeWidth,\n            strokeColor: pastedElement?.strokeColor,\n            fillStyle: pastedElement?.fillStyle,\n            opacity: pastedElement?.opacity,\n            roughness: pastedElement?.roughness,\n          });\n          if (isTextElement(newElement)) {\n            mutateElement(newElement, {\n              font: pastedElement?.font || DEFAULT_FONT,\n              textAlign: pastedElement?.textAlign || DEFAULT_TEXT_ALIGN,\n            });\n            redrawTextBoundingBox(newElement);\n          }\n          return newElement;\n        }\n        return element;\n      }),\n      commitToHistory: true,\n    };\n  },\n  contextItemLabel: \"labels.pasteStyles\",\n  keyTest: (event) =>\n    event[KEYS.CTRL_OR_CMD] && event.shiftKey && event.key === \"V\",\n  contextMenuOrder: 1,\n});\n","import React from \"react\";\n\ntype HelpIconProps = {\n  title?: string;\n  name?: string;\n  id?: string;\n  onClick?(): void;\n};\n\nconst ICON = (\n  <svg\n    width=\"30\"\n    height=\"22\"\n    viewBox=\"0 0 512 512\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path d=\"M528 448H48c-26.51 0-48-21.49-48-48V112c0-26.51 21.49-48 48-48h480c26.51 0 48 21.49 48 48v288c0 26.51-21.49 48-48 48zM128 180v-40c0-6.627-5.373-12-12-12H76c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm-336 96v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm-336 96v-40c0-6.627-5.373-12-12-12H76c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm288 0v-40c0-6.627-5.373-12-12-12H172c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h232c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12z\" />\n  </svg>\n);\n\nexport function HelpIcon(props: HelpIconProps) {\n  return (\n    <label title={`${props.title} — ?`} className=\"help-icon\">\n      <div onClick={props.onClick}>{ICON}</div>\n    </label>\n  );\n}\n","import React from \"react\";\nimport { menu, palette } from \"../components/icons\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { t } from \"../i18n\";\nimport { showSelectedShapeActions, getNonDeletedElements } from \"../element\";\nimport { register } from \"./register\";\nimport { allowFullScreen, exitFullScreen, isFullScreen } from \"../utils\";\nimport { KEYS } from \"../keys\";\nimport { HelpIcon } from \"../components/HelpIcon\";\n\nexport const actionToggleCanvasMenu = register({\n  name: \"toggleCanvasMenu\",\n  perform: (_, appState) => ({\n    appState: {\n      ...appState,\n      openMenu: appState.openMenu === \"canvas\" ? null : \"canvas\",\n    },\n    commitToHistory: false,\n  }),\n  PanelComponent: ({ appState, updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={menu}\n      aria-label={t(\"buttons.menu\")}\n      onClick={updateData}\n      selected={appState.openMenu === \"canvas\"}\n    />\n  ),\n});\n\nexport const actionToggleEditMenu = register({\n  name: \"toggleEditMenu\",\n  perform: (_elements, appState) => ({\n    appState: {\n      ...appState,\n      openMenu: appState.openMenu === \"shape\" ? null : \"shape\",\n    },\n    commitToHistory: false,\n  }),\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <ToolButton\n      visible={showSelectedShapeActions(\n        appState,\n        getNonDeletedElements(elements),\n      )}\n      type=\"button\"\n      icon={palette}\n      aria-label={t(\"buttons.edit\")}\n      onClick={updateData}\n      selected={appState.openMenu === \"shape\"}\n    />\n  ),\n});\n\nexport const actionFullScreen = register({\n  name: \"toggleFullScreen\",\n  perform: () => {\n    if (!isFullScreen()) {\n      allowFullScreen();\n    }\n    if (isFullScreen()) {\n      exitFullScreen();\n    }\n    return {\n      commitToHistory: false,\n    };\n  },\n  keyTest: (event) => event.keyCode === KEYS.F_KEY_CODE,\n});\n\nexport const actionShortcuts = register({\n  name: \"toggleShortcuts\",\n  perform: (_elements, appState) => {\n    return {\n      appState: {\n        ...appState,\n        showShortcutsDialog: true,\n      },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ updateData }) => (\n    <HelpIcon title={t(\"shortcutsDialog.title\")} onClick={updateData} />\n  ),\n  keyTest: (event) => event.key === KEYS.QUESTION_MARK,\n});\n","import { PointerCoords } from \"./types\";\nimport { normalizeScroll } from \"./scene\";\n\nexport function getCenter(pointers: Map<number, PointerCoords>) {\n  const allCoords = Array.from(pointers.values());\n  return {\n    x: normalizeScroll(sum(allCoords, (coords) => coords.x) / allCoords.length),\n    y: normalizeScroll(sum(allCoords, (coords) => coords.y) / allCoords.length),\n  };\n}\n\nexport function getDistance([a, b]: readonly PointerCoords[]) {\n  return Math.hypot(a.x - b.x, a.y - b.y);\n}\n\nfunction sum<T>(array: readonly T[], mapper: (item: T) => number): number {\n  return array.reduce((acc, item) => acc + mapper(item), 0);\n}\n","import { Action, ActionResult } from \"./types\";\nimport React from \"react\";\nimport { undo, redo } from \"../components/icons\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { t } from \"../i18n\";\nimport { SceneHistory } from \"../history\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { AppState } from \"../types\";\nimport { KEYS } from \"../keys\";\nimport { getElementMap } from \"../element\";\nimport { newElementWith } from \"../element/mutateElement\";\n\nconst writeData = (\n  prevElements: readonly ExcalidrawElement[],\n  appState: AppState,\n  updater: () => {\n    elements: ExcalidrawElement[];\n    appState: AppState;\n  } | null,\n): ActionResult => {\n  const commitToHistory = false;\n  if (\n    !appState.multiElement &&\n    !appState.resizingElement &&\n    !appState.editingElement &&\n    !appState.draggingElement\n  ) {\n    const data = updater();\n    if (data === null) {\n      return { commitToHistory };\n    }\n\n    const prevElementMap = getElementMap(prevElements);\n    const nextElements = data.elements;\n    const nextElementMap = getElementMap(nextElements);\n    return {\n      elements: nextElements\n        .map((nextElement) =>\n          newElementWith(\n            prevElementMap[nextElement.id] || nextElement,\n            nextElement,\n          ),\n        )\n        .concat(\n          prevElements\n            .filter(\n              (prevElement) => !nextElementMap.hasOwnProperty(prevElement.id),\n            )\n            .map((prevElement) =>\n              newElementWith(prevElement, { isDeleted: true }),\n            ),\n        ),\n      appState: { ...appState, ...data.appState },\n      commitToHistory,\n    };\n  }\n  return { commitToHistory };\n};\n\nconst testUndo = (shift: boolean) => (event: KeyboardEvent) =>\n  event[KEYS.CTRL_OR_CMD] && /z/i.test(event.key) && event.shiftKey === shift;\n\ntype ActionCreator = (history: SceneHistory) => Action;\n\nexport const createUndoAction: ActionCreator = (history) => ({\n  name: \"undo\",\n  perform: (elements, appState) =>\n    writeData(elements, appState, () => history.undoOnce()),\n  keyTest: testUndo(false),\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={undo}\n      aria-label={t(\"buttons.undo\")}\n      onClick={updateData}\n    />\n  ),\n  commitToHistory: () => false,\n});\n\nexport const createRedoAction: ActionCreator = (history) => ({\n  name: \"redo\",\n  perform: (elements, appState) =>\n    writeData(elements, appState, () => history.redoOnce()),\n  keyTest: testUndo(true),\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={redo}\n      aria-label={t(\"buttons.redo\")}\n      onClick={updateData}\n    />\n  ),\n  commitToHistory: () => false,\n});\n","import \"./Island.scss\";\n\nimport React from \"react\";\n\ntype IslandProps = {\n  children: React.ReactNode;\n  padding?: number;\n  className?: string | boolean;\n  style?: object;\n};\n\nexport const Island = React.forwardRef<HTMLDivElement, IslandProps>(\n  ({ children, padding, className, style }, ref) => (\n    <div\n      className={`${className ?? \"\"} Island`}\n      style={{ \"--padding\": padding, ...style } as React.CSSProperties}\n      ref={ref}\n    >\n      {children}\n    </div>\n  ),\n);\n","import \"./Stack.css\";\n\nimport React from \"react\";\n\ntype StackProps = {\n  children: React.ReactNode;\n  gap?: number;\n  align?: \"start\" | \"center\" | \"end\" | \"baseline\";\n  justifyContent?: \"center\" | \"space-around\" | \"space-between\";\n  className?: string | boolean;\n};\n\nfunction RowStack({\n  children,\n  gap,\n  align,\n  justifyContent,\n  className,\n}: StackProps) {\n  return (\n    <div\n      className={`Stack Stack_horizontal ${className || \"\"}`}\n      style={\n        {\n          \"--gap\": gap,\n          alignItems: align,\n          justifyContent,\n        } as React.CSSProperties\n      }\n    >\n      {children}\n    </div>\n  );\n}\n\nfunction ColStack({\n  children,\n  gap,\n  align,\n  justifyContent,\n  className,\n}: StackProps) {\n  return (\n    <div\n      className={`Stack Stack_vertical ${className || \"\"}`}\n      style={\n        {\n          \"--gap\": gap,\n          justifyItems: align,\n          justifyContent,\n        } as React.CSSProperties\n      }\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default {\n  Row: RowStack,\n  Col: ColStack,\n};\n","import \"./FixedSideContainer.css\";\n\nimport React from \"react\";\n\ntype FixedSideContainerProps = {\n  children: React.ReactNode;\n  side: \"top\" | \"left\" | \"right\";\n  className?: string;\n};\n\nexport function FixedSideContainer({\n  children,\n  side,\n  className,\n}: FixedSideContainerProps) {\n  return (\n    <div\n      className={`FixedSideContainer FixedSideContainer_side_${side} ${className}`}\n    >\n      {children}\n    </div>\n  );\n}\n","import \"./ToolIcon.scss\";\n\nimport React from \"react\";\n\ntype LockIconSize = \"s\" | \"m\";\n\ntype LockIconProps = {\n  title?: string;\n  name?: string;\n  id?: string;\n  checked: boolean;\n  onChange?(): void;\n  size?: LockIconSize;\n  zenModeEnabled?: boolean;\n};\n\nconst DEFAULT_SIZE: LockIconSize = \"m\";\n\nconst ICONS = {\n  CHECKED: (\n    <svg\n      width=\"1792\"\n      height=\"1792\"\n      viewBox=\"0 0 1792 1792\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path d=\"M640 768h512v-192q0-106-75-181t-181-75-181 75-75 181v192zm832 96v576q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-576q0-40 28-68t68-28h32v-192q0-184 132-316t316-132 316 132 132 316v192h32q40 0 68 28t28 68z\" />\n    </svg>\n  ),\n  UNCHECKED: (\n    <svg\n      width=\"1792\"\n      height=\"1792\"\n      viewBox=\"0 0 1792 1792\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"unlocked-icon rtl-mirror\"\n    >\n      <path d=\"M1728 576v256q0 26-19 45t-45 19h-64q-26 0-45-19t-19-45v-256q0-106-75-181t-181-75-181 75-75 181v192h96q40 0 68 28t28 68v576q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-576q0-40 28-68t68-28h672v-192q0-185 131.5-316.5t316.5-131.5 316.5 131.5 131.5 316.5z\" />\n    </svg>\n  ),\n};\n\nexport function LockIcon(props: LockIconProps) {\n  const sizeCn = `ToolIcon_size_${props.size || DEFAULT_SIZE}`;\n\n  return (\n    <label\n      className={`ToolIcon ToolIcon__lock ToolIcon_type_floating ${sizeCn} zen-mode-visibility ${\n        props.zenModeEnabled && \"zen-mode-visibility--hidden\"\n      }`}\n      title={`${props.title} — Q`}\n    >\n      <input\n        className=\"ToolIcon_type_checkbox\"\n        type=\"checkbox\"\n        name={props.name}\n        id={props.id}\n        onChange={props.onChange}\n        checked={props.checked}\n        aria-label={props.title}\n      />\n      <div className=\"ToolIcon__icon\">\n        {props.checked ? ICONS.CHECKED : ICONS.UNCHECKED}\n      </div>\n    </label>\n  );\n}\n","import \"./Modal.scss\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { KEYS } from \"../keys\";\n\nexport function Modal(props: {\n  className?: string;\n  children: React.ReactNode;\n  maxWidth?: number;\n  onCloseRequest(): void;\n  labelledBy: string;\n}) {\n  const modalRoot = useBodyRoot();\n\n  const handleKeydown = (event: React.KeyboardEvent) => {\n    if (event.key === KEYS.ESCAPE) {\n      event.nativeEvent.stopImmediatePropagation();\n      props.onCloseRequest();\n    }\n  };\n  return createPortal(\n    <div\n      className={`Modal ${props.className ?? \"\"}`}\n      role=\"dialog\"\n      aria-modal=\"true\"\n      onKeyDown={handleKeydown}\n      aria-labelledby={props.labelledBy}\n      tabIndex={-1}\n    >\n      <div className=\"Modal__background\" onClick={props.onCloseRequest}></div>\n      <div\n        className=\"Modal__content\"\n        style={\n          {\n            \"--max-width\": `${props.maxWidth}px`,\n            maxHeight: \"100%\",\n            overflowY: \"scroll\",\n          } as any\n        }\n      >\n        {props.children}\n      </div>\n    </div>,\n    modalRoot,\n  );\n}\n\nfunction useBodyRoot() {\n  function createDiv() {\n    const div = document.createElement(\"div\");\n    document.body.appendChild(div);\n    return div;\n  }\n  const [div] = useState(createDiv);\n  useEffect(() => {\n    return () => {\n      document.body.removeChild(div);\n    };\n  }, [div]);\n  return div;\n}\n","import React, { useEffect, useRef } from \"react\";\nimport { Modal } from \"./Modal\";\nimport { Island } from \"./Island\";\nimport { t } from \"../i18n\";\nimport useIsMobile from \"../is-mobile\";\nimport { back, close } from \"./icons\";\nimport { KEYS } from \"../keys\";\n\nimport \"./Dialog.scss\";\n\nexport function Dialog(props: {\n  children: React.ReactNode;\n  className?: string;\n  maxWidth?: number;\n  onCloseRequest(): void;\n  title: React.ReactNode;\n}) {\n  const islandRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const focusableElements = queryFocusableElements();\n\n    if (focusableElements.length > 0) {\n      // If there's an element other than close, focus it.\n      (focusableElements[1] || focusableElements[0]).focus();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!islandRef.current) {\n      return;\n    }\n\n    function handleKeyDown(event: KeyboardEvent) {\n      if (event.key === KEYS.TAB) {\n        const focusableElements = queryFocusableElements();\n        const { activeElement } = document;\n        const currentIndex = focusableElements.findIndex(\n          (element) => element === activeElement,\n        );\n\n        if (currentIndex === 0 && event.shiftKey) {\n          focusableElements[focusableElements.length - 1].focus();\n          event.preventDefault();\n        } else if (\n          currentIndex === focusableElements.length - 1 &&\n          !event.shiftKey\n        ) {\n          focusableElements[0].focus();\n          event.preventDefault();\n        }\n      }\n    }\n\n    const node = islandRef.current;\n    node.addEventListener(\"keydown\", handleKeyDown);\n\n    return () => node.removeEventListener(\"keydown\", handleKeyDown);\n  }, []);\n\n  function queryFocusableElements() {\n    const focusableElements = islandRef.current?.querySelectorAll<HTMLElement>(\n      \"button, a, input, select, textarea, div[tabindex]\",\n    );\n\n    return focusableElements ? Array.from(focusableElements) : [];\n  }\n\n  return (\n    <Modal\n      className={`${props.className ?? \"\"} Dialog`}\n      labelledBy=\"dialog-title\"\n      maxWidth={props.maxWidth}\n      onCloseRequest={props.onCloseRequest}\n    >\n      <Island padding={4} ref={islandRef}>\n        <h2 id=\"dialog-title\" className=\"Dialog__title\">\n          <span className=\"Dialog__titleContent\">{props.title}</span>\n          <button\n            className=\"Modal__close\"\n            onClick={props.onCloseRequest}\n            aria-label={t(\"buttons.close\")}\n          >\n            {useIsMobile() ? back : close}\n          </button>\n        </h2>\n        {props.children}\n      </Island>\n    </Modal>\n  );\n}\n","import \"./ExportDialog.scss\";\n\nimport React, { useState, useEffect, useRef } from \"react\";\n\nimport { ToolButton } from \"./ToolButton\";\nimport { clipboard, exportFile, link } from \"./icons\";\nimport { NonDeletedExcalidrawElement } from \"../element/types\";\nimport { AppState } from \"../types\";\nimport { exportToCanvas } from \"../scene/export\";\nimport { ActionsManagerInterface } from \"../actions/types\";\nimport Stack from \"./Stack\";\nimport { t } from \"../i18n\";\n\nimport { probablySupportsClipboardBlob } from \"../clipboard\";\nimport { getSelectedElements, isSomeElementSelected } from \"../scene\";\nimport useIsMobile from \"../is-mobile\";\nimport { Dialog } from \"./Dialog\";\n\nconst scales = [1, 2, 3];\nconst defaultScale = scales.includes(devicePixelRatio) ? devicePixelRatio : 1;\n\nexport type ExportCB = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  scale?: number,\n) => void;\n\nfunction ExportModal({\n  elements,\n  appState,\n  exportPadding = 10,\n  actionManager,\n  onExportToPng,\n  onExportToSvg,\n  onExportToClipboard,\n  onExportToBackend,\n}: {\n  appState: AppState;\n  elements: readonly NonDeletedExcalidrawElement[];\n  exportPadding?: number;\n  actionManager: ActionsManagerInterface;\n  onExportToPng: ExportCB;\n  onExportToSvg: ExportCB;\n  onExportToClipboard: ExportCB;\n  onExportToBackend: ExportCB;\n  onCloseRequest: () => void;\n}) {\n  const someElementIsSelected = isSomeElementSelected(elements, appState);\n  const [scale, setScale] = useState(defaultScale);\n  const [exportSelected, setExportSelected] = useState(someElementIsSelected);\n  const previewRef = useRef<HTMLDivElement>(null);\n  const {\n    exportBackground,\n    viewBackgroundColor,\n    shouldAddWatermark,\n  } = appState;\n\n  const exportedElements = exportSelected\n    ? getSelectedElements(elements, appState)\n    : elements;\n\n  useEffect(() => {\n    setExportSelected(someElementIsSelected);\n  }, [someElementIsSelected]);\n\n  useEffect(() => {\n    const previewNode = previewRef.current;\n    const canvas = exportToCanvas(exportedElements, appState, {\n      exportBackground,\n      viewBackgroundColor,\n      exportPadding,\n      scale,\n      shouldAddWatermark,\n    });\n    previewNode?.appendChild(canvas);\n    return () => {\n      previewNode?.removeChild(canvas);\n    };\n  }, [\n    appState,\n    exportedElements,\n    exportBackground,\n    exportPadding,\n    viewBackgroundColor,\n    scale,\n    shouldAddWatermark,\n  ]);\n\n  return (\n    <div className=\"ExportDialog\">\n      <div className=\"ExportDialog__preview\" ref={previewRef}></div>\n      <Stack.Col gap={2} align=\"center\">\n        <div className=\"ExportDialog__actions\">\n          <Stack.Row gap={2}>\n            <ToolButton\n              type=\"button\"\n              label=\"PNG\"\n              title={t(\"buttons.exportToPng\")}\n              aria-label={t(\"buttons.exportToPng\")}\n              onClick={() => onExportToPng(exportedElements, scale)}\n            />\n            <ToolButton\n              type=\"button\"\n              label=\"SVG\"\n              title={t(\"buttons.exportToSvg\")}\n              aria-label={t(\"buttons.exportToSvg\")}\n              onClick={() => onExportToSvg(exportedElements, scale)}\n            />\n            {probablySupportsClipboardBlob && (\n              <ToolButton\n                type=\"button\"\n                icon={clipboard}\n                title={t(\"buttons.copyPngToClipboard\")}\n                aria-label={t(\"buttons.copyPngToClipboard\")}\n                onClick={() => onExportToClipboard(exportedElements, scale)}\n              />\n            )}\n            <ToolButton\n              type=\"button\"\n              icon={link}\n              title={t(\"buttons.getShareableLink\")}\n              aria-label={t(\"buttons.getShareableLink\")}\n              onClick={() => onExportToBackend(exportedElements)}\n            />\n          </Stack.Row>\n          <div className=\"ExportDialog__name\">\n            {actionManager.renderAction(\"changeProjectName\")}\n          </div>\n          <Stack.Row gap={2}>\n            {scales.map((s) => (\n              <ToolButton\n                key={s}\n                size=\"s\"\n                type=\"radio\"\n                icon={`x${s}`}\n                name=\"export-canvas-scale\"\n                aria-label={`Scale ${s} x`}\n                id=\"export-canvas-scale\"\n                checked={s === scale}\n                onChange={() => setScale(s)}\n              />\n            ))}\n          </Stack.Row>\n        </div>\n        {actionManager.renderAction(\"changeExportBackground\")}\n        {someElementIsSelected && (\n          <div>\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={exportSelected}\n                onChange={(event) =>\n                  setExportSelected(event.currentTarget.checked)\n                }\n              />{\" \"}\n              {t(\"labels.onlySelected\")}\n            </label>\n          </div>\n        )}\n        {actionManager.renderAction(\"changeShouldAddWatermark\")}\n      </Stack.Col>\n    </div>\n  );\n}\n\nexport function ExportDialog({\n  elements,\n  appState,\n  exportPadding = 10,\n  actionManager,\n  onExportToPng,\n  onExportToSvg,\n  onExportToClipboard,\n  onExportToBackend,\n}: {\n  appState: AppState;\n  elements: readonly NonDeletedExcalidrawElement[];\n  exportPadding?: number;\n  actionManager: ActionsManagerInterface;\n  onExportToPng: ExportCB;\n  onExportToSvg: ExportCB;\n  onExportToClipboard: ExportCB;\n  onExportToBackend: ExportCB;\n}) {\n  const [modalIsShown, setModalIsShown] = useState(false);\n  const triggerButton = useRef<HTMLButtonElement>(null);\n\n  const handleClose = React.useCallback(() => {\n    setModalIsShown(false);\n    triggerButton.current?.focus();\n  }, []);\n\n  return (\n    <>\n      <ToolButton\n        onClick={() => setModalIsShown(true)}\n        icon={exportFile}\n        type=\"button\"\n        aria-label={t(\"buttons.export\")}\n        showAriaLabel={useIsMobile()}\n        title={t(\"buttons.export\")}\n        ref={triggerButton}\n      />\n      {modalIsShown && (\n        <Dialog\n          maxWidth={800}\n          onCloseRequest={handleClose}\n          title={t(\"buttons.export\")}\n        >\n          <ExportModal\n            elements={elements}\n            appState={appState}\n            exportPadding={exportPadding}\n            actionManager={actionManager}\n            onExportToPng={onExportToPng}\n            onExportToSvg={onExportToSvg}\n            onExportToClipboard={onExportToClipboard}\n            onExportToBackend={onExportToBackend}\n            onCloseRequest={handleClose}\n          />\n        </Dialog>\n      )}\n    </>\n  );\n}\n","import React from \"react\";\nimport * as i18n from \"../i18n\";\n\nexport function LanguageList({\n  onChange,\n  languages = i18n.languages,\n  currentLanguage = i18n.getLanguage().lng,\n  floating,\n}: {\n  languages?: { lng: string; label: string }[];\n  onChange: (value: string) => void;\n  currentLanguage?: string;\n  floating?: boolean;\n}) {\n  return (\n    <React.Fragment>\n      <select\n        className={`dropdown-select dropdown-select__language${\n          floating ? \" dropdown-select--floating\" : \"\"\n        }`}\n        onChange={({ target }) => onChange(target.value)}\n        value={currentLanguage}\n        aria-label={i18n.t(\"buttons.selectLanguage\")}\n      >\n        {languages.map((language) => (\n          <option key={language.lng} value={language.lng}>\n            {language.label}\n          </option>\n        ))}\n      </select>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport { t } from \"../i18n\";\nimport { NonDeletedExcalidrawElement } from \"../element/types\";\nimport { getSelectedElements } from \"../scene\";\n\nimport \"./HintViewer.scss\";\nimport { AppState } from \"../types\";\nimport { isLinearElement } from \"../element/typeChecks\";\n\ninterface Hint {\n  appState: AppState;\n  elements: readonly NonDeletedExcalidrawElement[];\n}\n\nconst getHints = ({ appState, elements }: Hint) => {\n  const { elementType, isResizing, isRotating, lastPointerDownWith } = appState;\n  const multiMode = appState.multiElement !== null;\n  if (elementType === \"arrow\" || elementType === \"line\") {\n    if (!multiMode) {\n      return t(\"hints.linearElement\");\n    }\n    return t(\"hints.linearElementMulti\");\n  }\n\n  if (elementType === \"draw\") {\n    return t(\"hints.freeDraw\");\n  }\n\n  const selectedElements = getSelectedElements(elements, appState);\n  if (\n    isResizing &&\n    lastPointerDownWith === \"mouse\" &&\n    selectedElements.length === 1\n  ) {\n    const targetElement = selectedElements[0];\n    if (isLinearElement(targetElement) && targetElement.points.length > 2) {\n      return null;\n    }\n    return t(\"hints.resize\");\n  }\n\n  if (isRotating && lastPointerDownWith === \"mouse\") {\n    return t(\"hints.rotate\");\n  }\n\n  return null;\n};\n\nexport const HintViewer = ({ appState, elements }: Hint) => {\n  const hint = getHints({\n    appState,\n    elements,\n  });\n  if (!hint) {\n    return null;\n  }\n\n  return (\n    <div className=\"HintViewer\">\n      <span>{hint}</span>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { AppState } from \"../types\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { ActionManager } from \"../actions/manager\";\nimport { hasBackground, hasStroke, hasText, getTargetElement } from \"../scene\";\nimport { t } from \"../i18n\";\nimport { SHAPES } from \"../shapes\";\nimport { ToolButton } from \"./ToolButton\";\nimport { capitalizeString, setCursorForShape } from \"../utils\";\nimport Stack from \"./Stack\";\nimport useIsMobile from \"../is-mobile\";\nimport { getNonDeletedElements } from \"../element\";\n\nexport function SelectedShapeActions({\n  appState,\n  elements,\n  renderAction,\n  elementType,\n}: {\n  appState: AppState;\n  elements: readonly ExcalidrawElement[];\n  renderAction: ActionManager[\"renderAction\"];\n  elementType: ExcalidrawElement[\"type\"];\n}) {\n  const targetElements = getTargetElement(\n    getNonDeletedElements(elements),\n    appState,\n  );\n  const isEditing = Boolean(appState.editingElement);\n  const isMobile = useIsMobile();\n\n  return (\n    <div className=\"panelColumn\">\n      {renderAction(\"changeStrokeColor\")}\n      {(hasBackground(elementType) ||\n        targetElements.some((element) => hasBackground(element.type))) && (\n        <>\n          {renderAction(\"changeBackgroundColor\")}\n\n          {renderAction(\"changeFillStyle\")}\n        </>\n      )}\n\n      {(hasStroke(elementType) ||\n        targetElements.some((element) => hasStroke(element.type))) && (\n        <>\n          {renderAction(\"changeStrokeWidth\")}\n          {renderAction(\"changeStrokeStyle\")}\n          {renderAction(\"changeSloppiness\")}\n        </>\n      )}\n\n      {(hasText(elementType) ||\n        targetElements.some((element) => hasText(element.type))) && (\n        <>\n          {renderAction(\"changeFontSize\")}\n\n          {renderAction(\"changeFontFamily\")}\n\n          {renderAction(\"changeTextAlign\")}\n        </>\n      )}\n\n      {renderAction(\"changeOpacity\")}\n\n      <fieldset>\n        <legend>{t(\"labels.layers\")}</legend>\n        <div className=\"buttonList\">\n          {renderAction(\"sendToBack\")}\n          {renderAction(\"sendBackward\")}\n          {renderAction(\"bringToFront\")}\n          {renderAction(\"bringForward\")}\n        </div>\n      </fieldset>\n      {!isMobile && !isEditing && targetElements.length > 0 && (\n        <fieldset>\n          <legend>{t(\"labels.actions\")}</legend>\n          <div className=\"buttonList\">\n            {renderAction(\"duplicateSelection\")}\n            {renderAction(\"deleteSelectedElements\")}\n          </div>\n        </fieldset>\n      )}\n    </div>\n  );\n}\n\nexport function ShapesSwitcher({\n  elementType,\n  setAppState,\n}: {\n  elementType: ExcalidrawElement[\"type\"];\n  setAppState: any;\n}) {\n  return (\n    <>\n      {SHAPES.map(({ value, icon, key }, index) => {\n        const label = t(`toolBar.${value}`);\n        const shortcut = `${capitalizeString(key)} ${t(\"shortcutsDialog.or\")} ${\n          index + 1\n        }`;\n        return (\n          <ToolButton\n            key={value}\n            type=\"radio\"\n            icon={icon}\n            checked={elementType === value}\n            name=\"editor-current-shape\"\n            title={`${capitalizeString(label)} — ${shortcut}`}\n            keyBindingLabel={`${index + 1}`}\n            aria-label={capitalizeString(label)}\n            aria-keyshortcuts={`${key} ${index + 1}`}\n            data-testid={value}\n            onChange={() => {\n              setAppState({\n                elementType: value,\n                multiElement: null,\n                selectedElementIds: {},\n              });\n              setCursorForShape(value);\n              setAppState({});\n            }}\n          ></ToolButton>\n        );\n      })}\n    </>\n  );\n}\n\nexport function ZoomActions({\n  renderAction,\n  zoom,\n}: {\n  renderAction: ActionManager[\"renderAction\"];\n  zoom: number;\n}) {\n  return (\n    <Stack.Col gap={1}>\n      <Stack.Row gap={1} align=\"center\">\n        {renderAction(\"zoomIn\")}\n        {renderAction(\"zoomOut\")}\n        {renderAction(\"resetZoom\")}\n        <div style={{ marginInlineStart: 4 }}>{(zoom * 100).toFixed(0)}%</div>\n      </Stack.Row>\n    </Stack.Col>\n  );\n}\n","import React from \"react\";\nimport { t } from \"../i18n\";\n\ninterface SectionProps extends React.HTMLProps<HTMLElement> {\n  heading: string;\n  children: React.ReactNode | ((header: React.ReactNode) => React.ReactNode);\n}\n\nexport function Section({ heading, children, ...props }: SectionProps) {\n  const header = (\n    <h2 className=\"visually-hidden\" id={`${heading}-title`}>\n      {t(`headings.${heading}`)}\n    </h2>\n  );\n  return (\n    <section {...props} aria-labelledby={`${heading}-title`}>\n      {typeof children === \"function\" ? (\n        children(header)\n      ) : (\n        <>\n          {header}\n          {children}\n        </>\n      )}\n    </section>\n  );\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { ToolButton } from \"./ToolButton\";\nimport { t } from \"../i18n\";\nimport useIsMobile from \"../is-mobile\";\nimport { users, clipboard, start, stop } from \"./icons\";\n\nimport \"./RoomDialog.scss\";\nimport { copyTextToSystemClipboard } from \"../clipboard\";\nimport { Dialog } from \"./Dialog\";\nimport { AppState } from \"../types\";\n\nfunction RoomModal({\n  activeRoomLink,\n  username,\n  onUsernameChange,\n  onRoomCreate,\n  onRoomDestroy,\n  onPressingEnter,\n}: {\n  activeRoomLink: string;\n  username: string;\n  onUsernameChange: (username: string) => void;\n  onRoomCreate: () => void;\n  onRoomDestroy: () => void;\n  onPressingEnter: () => void;\n}) {\n  const roomLinkInput = useRef<HTMLInputElement>(null);\n\n  function copyRoomLink() {\n    copyTextToSystemClipboard(activeRoomLink);\n    if (roomLinkInput.current) {\n      roomLinkInput.current.select();\n    }\n  }\n  function selectInput(event: React.MouseEvent<HTMLInputElement>) {\n    if (event.target !== document.activeElement) {\n      event.preventDefault();\n      (event.target as HTMLInputElement).select();\n    }\n  }\n\n  return (\n    <div className=\"RoomDialog-modal\">\n      {!activeRoomLink && (\n        <>\n          <p>{t(\"roomDialog.desc_intro\")}</p>\n          <p>{`🔒 ${t(\"roomDialog.desc_privacy\")}`}</p>\n          <div className=\"RoomDialog-sessionStartButtonContainer\">\n            <ToolButton\n              className=\"RoomDialog-startSession\"\n              type=\"button\"\n              icon={start}\n              title={t(\"roomDialog.button_startSession\")}\n              aria-label={t(\"roomDialog.button_startSession\")}\n              showAriaLabel={true}\n              onClick={onRoomCreate}\n            />\n          </div>\n        </>\n      )}\n      {activeRoomLink && (\n        <>\n          <p>{t(\"roomDialog.desc_inProgressIntro\")}</p>\n          <p>{t(\"roomDialog.desc_shareLink\")}</p>\n          <div className=\"RoomDialog-linkContainer\">\n            <ToolButton\n              type=\"button\"\n              icon={clipboard}\n              title={t(\"labels.copy\")}\n              aria-label={t(\"labels.copy\")}\n              onClick={copyRoomLink}\n            />\n            <input\n              value={activeRoomLink}\n              readOnly={true}\n              className=\"RoomDialog-link\"\n              ref={roomLinkInput}\n              onPointerDown={selectInput}\n            />\n          </div>\n          <div className=\"RoomDialog-usernameContainer\">\n            <label className=\"RoomDialog-usernameLabel\" htmlFor=\"username\">\n              {t(\"labels.yourName\")}\n            </label>\n            <input\n              id=\"username\"\n              value={username || \"\"}\n              className=\"RoomDialog-username TextInput\"\n              onChange={(event) => onUsernameChange(event.target.value)}\n              onKeyPress={(event) => event.key === \"Enter\" && onPressingEnter()}\n            />\n          </div>\n          <p>{`🔒 ${t(\"roomDialog.desc_privacy\")}`}</p>\n          <p>\n            <span role=\"img\" aria-hidden=\"true\">\n              ⚠️\n            </span>{\" \"}\n            {t(\"roomDialog.desc_persistenceWarning\")}\n          </p>\n          <p>{t(\"roomDialog.desc_exitSession\")}</p>\n          <div className=\"RoomDialog-sessionStartButtonContainer\">\n            <ToolButton\n              className=\"RoomDialog-stopSession\"\n              type=\"button\"\n              icon={stop}\n              title={t(\"roomDialog.button_stopSession\")}\n              aria-label={t(\"roomDialog.button_stopSession\")}\n              showAriaLabel={true}\n              onClick={onRoomDestroy}\n            />\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport function RoomDialog({\n  isCollaborating,\n  collaboratorCount,\n  username,\n  onUsernameChange,\n  onRoomCreate,\n  onRoomDestroy,\n}: {\n  isCollaborating: AppState[\"isCollaborating\"];\n  collaboratorCount: number;\n  username: string;\n  onUsernameChange: (username: string) => void;\n  onRoomCreate: () => void;\n  onRoomDestroy: () => void;\n}) {\n  const [modalIsShown, setModalIsShown] = useState(false);\n  const [activeRoomLink, setActiveRoomLink] = useState(\"\");\n\n  const triggerButton = useRef<HTMLButtonElement>(null);\n\n  const handleClose = React.useCallback(() => {\n    setModalIsShown(false);\n    triggerButton.current?.focus();\n  }, []);\n\n  useEffect(() => {\n    setActiveRoomLink(isCollaborating ? window.location.href : \"\");\n  }, [isCollaborating]);\n\n  return (\n    <>\n      <ToolButton\n        className={`RoomDialog-modalButton ${\n          isCollaborating ? \"is-collaborating\" : \"\"\n        }`}\n        onClick={() => setModalIsShown(true)}\n        icon={users}\n        type=\"button\"\n        title={t(\"buttons.roomDialog\")}\n        aria-label={t(\"buttons.roomDialog\")}\n        showAriaLabel={useIsMobile()}\n        ref={triggerButton}\n      >\n        {collaboratorCount > 0 && (\n          <div className=\"RoomDialog-modalButton-collaborators\">\n            {collaboratorCount}\n          </div>\n        )}\n      </ToolButton>\n      {modalIsShown && (\n        <Dialog\n          maxWidth={800}\n          onCloseRequest={handleClose}\n          title={t(\"labels.createRoom\")}\n        >\n          <RoomModal\n            activeRoomLink={activeRoomLink}\n            username={username}\n            onUsernameChange={onUsernameChange}\n            onRoomCreate={onRoomCreate}\n            onRoomDestroy={onRoomDestroy}\n            onPressingEnter={handleClose}\n          />\n        </Dialog>\n      )}\n    </>\n  );\n}\n","import React from \"react\";\n\nexport const LoadingMessage = () => {\n  // !! KEEP THIS IN SYNC WITH index.html !!\n  return (\n    <div className=\"LoadingMessage\">\n      <span>{\"Loading scene...\"}</span>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { AppState } from \"../types\";\nimport { ActionManager } from \"../actions/manager\";\nimport { t, setLanguage } from \"../i18n\";\nimport Stack from \"./Stack\";\nimport { LanguageList } from \"./LanguageList\";\nimport { showSelectedShapeActions } from \"../element\";\nimport { NonDeletedExcalidrawElement } from \"../element/types\";\nimport { FixedSideContainer } from \"./FixedSideContainer\";\nimport { Island } from \"./Island\";\nimport { HintViewer } from \"./HintViewer\";\nimport { calculateScrollCenter } from \"../scene\";\nimport { SelectedShapeActions, ShapesSwitcher } from \"./Actions\";\nimport { Section } from \"./Section\";\nimport { RoomDialog } from \"./RoomDialog\";\nimport { SCROLLBAR_WIDTH, SCROLLBAR_MARGIN } from \"../scene/scrollbars\";\nimport { LockIcon } from \"./LockIcon\";\nimport { LoadingMessage } from \"./LoadingMessage\";\n\ntype MobileMenuProps = {\n  appState: AppState;\n  actionManager: ActionManager;\n  exportButton: React.ReactNode;\n  setAppState: any;\n  elements: readonly NonDeletedExcalidrawElement[];\n  onRoomCreate: () => void;\n  onUsernameChange: (username: string) => void;\n  onRoomDestroy: () => void;\n  onLockToggle: () => void;\n};\n\nexport function MobileMenu({\n  appState,\n  elements,\n  actionManager,\n  exportButton,\n  setAppState,\n  onRoomCreate,\n  onUsernameChange,\n  onRoomDestroy,\n  onLockToggle,\n}: MobileMenuProps) {\n  return (\n    <>\n      {appState.isLoading && <LoadingMessage />}\n      <FixedSideContainer side=\"top\">\n        <Section heading=\"shapes\">\n          {(heading) => (\n            <Stack.Col gap={4} align=\"center\">\n              <Stack.Row gap={1}>\n                <Island padding={1}>\n                  {heading}\n                  <Stack.Row gap={1}>\n                    <ShapesSwitcher\n                      elementType={appState.elementType}\n                      setAppState={setAppState}\n                    />\n                  </Stack.Row>\n                </Island>\n                <LockIcon\n                  checked={appState.elementLocked}\n                  onChange={onLockToggle}\n                  title={t(\"toolBar.lock\")}\n                />\n              </Stack.Row>\n            </Stack.Col>\n          )}\n        </Section>\n        <HintViewer appState={appState} elements={elements} />\n      </FixedSideContainer>\n      <div\n        className=\"App-bottom-bar\"\n        style={{\n          marginBottom: SCROLLBAR_WIDTH + SCROLLBAR_MARGIN * 2,\n          marginLeft: SCROLLBAR_WIDTH + SCROLLBAR_MARGIN * 2,\n          marginRight: SCROLLBAR_WIDTH + SCROLLBAR_MARGIN * 2,\n        }}\n      >\n        <Island padding={3}>\n          {appState.openMenu === \"canvas\" ? (\n            <Section className=\"App-mobile-menu\" heading=\"canvasActions\">\n              <div className=\"panelColumn\">\n                <Stack.Col gap={4}>\n                  {actionManager.renderAction(\"loadScene\")}\n                  {actionManager.renderAction(\"saveScene\")}\n                  {exportButton}\n                  {actionManager.renderAction(\"clearCanvas\")}\n                  <RoomDialog\n                    isCollaborating={appState.isCollaborating}\n                    collaboratorCount={appState.collaborators.size}\n                    username={appState.username}\n                    onUsernameChange={onUsernameChange}\n                    onRoomCreate={onRoomCreate}\n                    onRoomDestroy={onRoomDestroy}\n                  />\n                  {actionManager.renderAction(\"changeViewBackgroundColor\")}\n                  <fieldset>\n                    <legend>{t(\"labels.language\")}</legend>\n                    <LanguageList\n                      onChange={(lng) => {\n                        setLanguage(lng);\n                        setAppState({});\n                      }}\n                    />\n                  </fieldset>\n                </Stack.Col>\n              </div>\n            </Section>\n          ) : appState.openMenu === \"shape\" &&\n            showSelectedShapeActions(appState, elements) ? (\n            <Section className=\"App-mobile-menu\" heading=\"selectedShapeActions\">\n              <SelectedShapeActions\n                appState={appState}\n                elements={elements}\n                renderAction={actionManager.renderAction}\n                elementType={appState.elementType}\n              />\n            </Section>\n          ) : null}\n          <footer className=\"App-toolbar\">\n            <div className=\"App-toolbar-content\">\n              {actionManager.renderAction(\"toggleCanvasMenu\")}\n              {actionManager.renderAction(\"toggleEditMenu\")}\n              {actionManager.renderAction(\"undo\")}\n              {actionManager.renderAction(\"redo\")}\n              {actionManager.renderAction(\n                appState.multiElement ? \"finalize\" : \"duplicateSelection\",\n              )}\n              {actionManager.renderAction(\"deleteSelectedElements\")}\n            </div>\n            {appState.scrolledOutside && (\n              <button\n                className=\"scroll-back-to-content\"\n                onClick={() => {\n                  setAppState({ ...calculateScrollCenter(elements) });\n                }}\n              >\n                {t(\"buttons.scrollBackToContent\")}\n              </button>\n            )}\n          </footer>\n        </Island>\n      </div>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { t } from \"../i18n\";\n\nimport { Dialog } from \"./Dialog\";\n\nexport function ErrorDialog({\n  message,\n  onClose,\n}: {\n  message: string;\n  onClose?: () => void;\n}) {\n  const [modalIsShown, setModalIsShown] = useState(!!message);\n\n  const handleClose = React.useCallback(() => {\n    setModalIsShown(false);\n\n    if (onClose) {\n      onClose();\n    }\n  }, [onClose]);\n\n  return (\n    <>\n      {modalIsShown && (\n        <Dialog\n          maxWidth={500}\n          onCloseRequest={handleClose}\n          title={t(\"errorDialog.title\")}\n        >\n          <div>{message}</div>\n        </Dialog>\n      )}\n    </>\n  );\n}\n","import React from \"react\";\nimport oc from \"open-color\";\nimport { t } from \"../i18n\";\nimport { isDarwin } from \"../keys\";\nimport { Dialog } from \"./Dialog\";\nimport { getShortcutKey } from \"../utils\";\n\nconst Columns = (props: { children: React.ReactNode }) => (\n  <div\n    style={{\n      display: \"flex\",\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      justifyContent: \"space-between\",\n    }}\n  >\n    {props.children}\n  </div>\n);\n\nconst Column = (props: { children: React.ReactNode }) => (\n  <div\n    style={{\n      width: \"49%\",\n    }}\n  >\n    {props.children}\n  </div>\n);\n\nconst ShortcutIsland = (props: {\n  caption: string;\n  children: React.ReactNode;\n}) => (\n  <div\n    style={{\n      border: `1px solid ${oc.gray[4]}`,\n      marginBottom: \"16px\",\n    }}\n  >\n    <h3\n      style={{\n        margin: \"0\",\n        padding: \"4px\",\n        backgroundColor: oc.gray[2],\n        textAlign: \"center\",\n      }}\n    >\n      {props.caption}\n    </h3>\n    {props.children}\n  </div>\n);\n\nconst Shortcut = (props: {\n  label: string;\n  shortcuts: string[];\n  isOr: boolean;\n}) => {\n  const isRTL = document.documentElement.getAttribute(\"dir\") === \"rtl\";\n  return (\n    <div\n      style={{\n        borderTop: `1px solid ${oc.gray[4]}`,\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          margin: \"0\",\n          padding: \"4px 8px\",\n          alignItems: \"center\",\n        }}\n      >\n        <div\n          style={{\n            lineHeight: 1.4,\n          }}\n        >\n          {props.label}\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            flex: \"0 0 auto\",\n            justifyContent: \"flex-end\",\n            marginLeft: isRTL ? \"0em\" : \"auto\",\n            marginRight: isRTL ? \"auto\" : \"0em\",\n            minWidth: \"30%\",\n          }}\n        >\n          {props.shortcuts.map((shortcut, index) => (\n            <React.Fragment key={index}>\n              <ShortcutKey>{shortcut}</ShortcutKey>\n              {props.isOr &&\n                index !== props.shortcuts.length - 1 &&\n                t(\"shortcutsDialog.or\")}\n            </React.Fragment>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nShortcut.defaultProps = {\n  isOr: true,\n};\n\nconst ShortcutKey = (props: { children: React.ReactNode }) => (\n  <span\n    style={{\n      wordBreak: \"keep-all\",\n      border: `1px solid ${oc.gray[4]}`,\n      padding: \"2px 8px\",\n      margin: \"auto 4px\",\n      backgroundColor: oc.gray[2],\n      borderRadius: \"2px\",\n      fontSize: \"0.8em\",\n      minHeight: \"26px\",\n      boxSizing: \"border-box\",\n      display: \"flex\",\n      alignItems: \"center\",\n    }}\n    {...props}\n  />\n);\n\nconst Footer = () => (\n  <div\n    style={{\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"space-evenly\",\n      borderTop: `1px solid ${oc.gray[4]}`,\n      marginTop: 8,\n      paddingTop: 16,\n    }}\n  >\n    <a\n      href=\"https://blog.excalidraw.com\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      {t(\"shortcutsDialog.blog\")}\n    </a>\n    <a\n      href=\"https://howto.excalidraw.com\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      {t(\"shortcutsDialog.howto\")}\n    </a>\n    <a\n      href=\"https://github.com/excalidraw/excalidraw/issues\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      {t(\"shortcutsDialog.github\")}\n    </a>\n  </div>\n);\n\nexport const ShortcutsDialog = ({ onClose }: { onClose?: () => void }) => {\n  const handleClose = React.useCallback(() => {\n    if (onClose) {\n      onClose();\n    }\n  }, [onClose]);\n\n  return (\n    <>\n      <Dialog\n        maxWidth={900}\n        onCloseRequest={handleClose}\n        title={t(\"shortcutsDialog.title\")}\n      >\n        <Columns>\n          <Column>\n            <ShortcutIsland caption={t(\"shortcutsDialog.shapes\")}>\n              <Shortcut label={t(\"toolBar.selection\")} shortcuts={[\"S\", \"1\"]} />\n              <Shortcut label={t(\"toolBar.rectangle\")} shortcuts={[\"R\", \"2\"]} />\n              <Shortcut label={t(\"toolBar.diamond\")} shortcuts={[\"D\", \"3\"]} />\n              <Shortcut label={t(\"toolBar.ellipse\")} shortcuts={[\"E\", \"4\"]} />\n              <Shortcut label={t(\"toolBar.arrow\")} shortcuts={[\"A\", \"5\"]} />\n              <Shortcut label={t(\"toolBar.line\")} shortcuts={[\"L\", \"6\"]} />\n              <Shortcut label={t(\"toolBar.draw\")} shortcuts={[\"X\", \"7\"]} />\n              <Shortcut label={t(\"toolBar.text\")} shortcuts={[\"T\", \"8\"]} />\n              <Shortcut\n                label={t(\"shortcutsDialog.textNewLine\")}\n                shortcuts={[\n                  getShortcutKey(\"Enter\"),\n                  getShortcutKey(\"Shift+Enter\"),\n                ]}\n              />\n              <Shortcut\n                label={t(\"shortcutsDialog.textFinish\")}\n                shortcuts={[\n                  getShortcutKey(\"Esc\"),\n                  getShortcutKey(\"CtrlOrCmd+Enter\"),\n                ]}\n              />\n              <Shortcut\n                label={t(\"shortcutsDialog.curvedArrow\")}\n                shortcuts={[\n                  \"A\",\n                  t(\"shortcutsDialog.click\"),\n                  t(\"shortcutsDialog.click\"),\n                  t(\"shortcutsDialog.click\"),\n                ]}\n                isOr={false}\n              />\n              <Shortcut\n                label={t(\"shortcutsDialog.curvedLine\")}\n                shortcuts={[\n                  \"L\",\n                  t(\"shortcutsDialog.click\"),\n                  t(\"shortcutsDialog.click\"),\n                  t(\"shortcutsDialog.click\"),\n                ]}\n                isOr={false}\n              />\n              <Shortcut label={t(\"toolBar.lock\")} shortcuts={[\"Q\"]} />\n            </ShortcutIsland>\n            <ShortcutIsland caption={t(\"shortcutsDialog.view\")}>\n              <Shortcut\n                label={t(\"buttons.zoomIn\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd++\")]}\n              />\n              <Shortcut\n                label={t(\"buttons.zoomOut\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+-\")]}\n              />\n              <Shortcut\n                label={t(\"buttons.resetZoom\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+0\")]}\n              />\n              <Shortcut\n                label={t(\"shortcutsDialog.zoomToFit\")}\n                shortcuts={[\"Shift+1\"]}\n              />\n              <Shortcut\n                label={t(\"buttons.toggleFullScreen\")}\n                shortcuts={[\"F\"]}\n              />\n              <Shortcut\n                label={t(\"buttons.toggleZenMode\")}\n                shortcuts={[getShortcutKey(\"Alt+Z\")]}\n              />\n            </ShortcutIsland>\n          </Column>\n          <Column>\n            <ShortcutIsland caption={t(\"shortcutsDialog.editor\")}>\n              <Shortcut\n                label={t(\"labels.selectAll\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+A\")]}\n              />\n              <Shortcut\n                label={t(\"labels.copy\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+C\")]}\n              />\n              <Shortcut\n                label={t(\"labels.paste\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+V\")]}\n              />\n              <Shortcut\n                label={t(\"labels.copyAsPng\")}\n                shortcuts={[getShortcutKey(\"Shift+Alt+C\")]}\n              />\n              <Shortcut\n                label={t(\"labels.copyStyles\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+Shift+C\")]}\n              />\n              <Shortcut\n                label={t(\"labels.pasteStyles\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+Shift+V\")]}\n              />\n              <Shortcut\n                label={t(\"labels.delete\")}\n                shortcuts={[getShortcutKey(\"Del\")]}\n              />\n              <Shortcut\n                label={t(\"labels.sendToBack\")}\n                shortcuts={[\n                  isDarwin\n                    ? getShortcutKey(\"CtrlOrCmd+Alt+[\")\n                    : getShortcutKey(\"CtrlOrCmd+Shift+[\"),\n                ]}\n              />\n              <Shortcut\n                label={t(\"labels.bringToFront\")}\n                shortcuts={[\n                  isDarwin\n                    ? getShortcutKey(\"CtrlOrCmd+Alt+]\")\n                    : getShortcutKey(\"CtrlOrCmd+Shift+]\"),\n                ]}\n              />\n              <Shortcut\n                label={t(\"labels.sendBackward\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+[\")]}\n              />\n              <Shortcut\n                label={t(\"labels.bringForward\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+]\")]}\n              />\n              <Shortcut\n                label={t(\"labels.duplicateSelection\")}\n                shortcuts={[\n                  getShortcutKey(\"CtrlOrCmd+D\"),\n                  getShortcutKey(`Alt+${t(\"shortcutsDialog.drag\")}`),\n                ]}\n              />\n              <Shortcut\n                label={t(\"buttons.undo\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+Z\")]}\n              />\n              <Shortcut\n                label={t(\"buttons.redo\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+Shift+Z\")]}\n              />\n            </ShortcutIsland>\n          </Column>\n        </Columns>\n        <Footer />\n      </Dialog>\n    </>\n  );\n};\n","import React from \"react\";\nimport oc from \"open-color\";\n\n// https://github.com/tholman/github-corners\nexport const GitHubCorner = React.memo(() => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"40\"\n    height=\"40\"\n    viewBox=\"0 0 250 250\"\n    className=\"github-corner rtl-mirror\"\n  >\n    <a\n      href=\"https://github.com/excalidraw/excalidraw\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      aria-label=\"GitHub repository\"\n    >\n      <path d=\"M0 0l115 115h15l12 27 108 108V0z\" fill={oc.gray[6]} />\n      <path\n        className=\"octo-arm\"\n        d=\"M128 109c-15-9-9-19-9-19 3-7 2-11 2-11-1-7 3-2 3-2 4 5 2 11 2 11-3 10 5 15 9 16\"\n        style={{ transformOrigin: \"130px 106px\" }}\n        fill={oc.white}\n      />\n      <path\n        className=\"octo-body\"\n        d=\"M115 115s4 2 5 0l14-14c3-2 6-3 8-3-8-11-15-24 2-41 5-5 10-7 16-7 1-2 3-7 12-11 0 0 5 3 7 16 4 2 8 5 12 9s7 8 9 12c14 3 17 7 17 7-4 8-9 11-11 11 0 6-2 11-7 16-16 16-30 10-41 2 0 3-1 7-5 11l-12 11c-1 1 1 5 1 5z\"\n        fill={oc.white}\n      />\n    </a>\n  </svg>\n));\n","import React from \"react\";\nimport { showSelectedShapeActions } from \"../element\";\nimport { calculateScrollCenter } from \"../scene\";\nimport { exportCanvas } from \"../data\";\n\nimport { AppState } from \"../types\";\nimport { NonDeletedExcalidrawElement } from \"../element/types\";\n\nimport { ActionManager } from \"../actions/manager\";\nimport { Island } from \"./Island\";\nimport Stack from \"./Stack\";\nimport { FixedSideContainer } from \"./FixedSideContainer\";\nimport { LockIcon } from \"./LockIcon\";\nimport { ExportDialog, ExportCB } from \"./ExportDialog\";\nimport { LanguageList } from \"./LanguageList\";\nimport { t, languages, setLanguage } from \"../i18n\";\nimport { HintViewer } from \"./HintViewer\";\nimport useIsMobile from \"../is-mobile\";\n\nimport { ExportType } from \"../scene/types\";\nimport { MobileMenu } from \"./MobileMenu\";\nimport { ZoomActions, SelectedShapeActions, ShapesSwitcher } from \"./Actions\";\nimport { Section } from \"./Section\";\nimport { RoomDialog } from \"./RoomDialog\";\nimport { ErrorDialog } from \"./ErrorDialog\";\nimport { ShortcutsDialog } from \"./ShortcutsDialog\";\nimport { LoadingMessage } from \"./LoadingMessage\";\nimport { CLASSES } from \"../constants\";\nimport { shield } from \"./icons\";\nimport { GitHubCorner } from \"./GitHubCorner\";\n\nimport \"./LayerUI.scss\";\n\ninterface LayerUIProps {\n  actionManager: ActionManager;\n  appState: AppState;\n  canvas: HTMLCanvasElement | null;\n  setAppState: any;\n  elements: readonly NonDeletedExcalidrawElement[];\n  onRoomCreate: () => void;\n  onUsernameChange: (username: string) => void;\n  onRoomDestroy: () => void;\n  onLockToggle: () => void;\n  zenModeEnabled: boolean;\n  toggleZenMode: () => void;\n}\n\nconst LayerUI = ({\n  actionManager,\n  appState,\n  setAppState,\n  canvas,\n  elements,\n  onRoomCreate,\n  onUsernameChange,\n  onRoomDestroy,\n  onLockToggle,\n  zenModeEnabled,\n  toggleZenMode,\n}: LayerUIProps) => {\n  const isMobile = useIsMobile();\n\n  const renderEncryptedIcon = () => (\n    <a className={`encrypted-icon tooltip zen-mode-visibility ${zenModeEnabled ? \"zen-mode-visibility--hidden\" : \"\"}`}\n      href=\"https://blog.excalidraw.com/end-to-end-encryption/\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      <span className=\"tooltip-text\" dir=\"auto\">\n        {t(\"encrypted.tooltip\")}\n      </span>\n      {shield}\n    </a>\n  );\n\n  const renderExportDialog = () => {\n   // console.log(\"renderExprotDialog\")\n    const createExporter = (type: ExportType): ExportCB => (\n      exportedElements,\n      scale,\n    ) => {\n      if (canvas) {\n        exportCanvas(type, exportedElements, appState, canvas, {\n          exportBackground: appState.exportBackground,\n          name: appState.name,\n          viewBackgroundColor: appState.viewBackgroundColor,\n          scale,\n          shouldAddWatermark: appState.shouldAddWatermark,\n        });\n      }\n    };\n    return (\n      <ExportDialog\n        elements={elements}\n        appState={appState}\n        actionManager={actionManager}\n        onExportToPng={createExporter(\"png\")}\n        onExportToSvg={createExporter(\"svg\")}\n        onExportToClipboard={createExporter(\"clipboard\")}\n        onExportToBackend={(exportedElements) => {\n          if (canvas) {\n            exportCanvas(\n              \"backend\",\n              exportedElements,\n              {\n                ...appState,\n                selectedElementIds: {},\n              },\n              canvas,\n              appState,\n            );\n          }\n        }}\n      />\n    );\n  };\n\n  const renderCanvasActions = () => (\n    <Section\n      heading=\"canvasActions\" className={`zen-mode-transition ${zenModeEnabled && \"transition-left\"}`} >\n      {/* the zIndex ensures this menu has higher stacking order,\n         see https://github.com/excalidraw/excalidraw/pull/1445 */}\n      <Island padding={4} style={{ zIndex: 1 }}>\n        <Stack.Col gap={4}>\n          <Stack.Row gap={1} justifyContent=\"space-between\">\n            {actionManager.renderAction(\"loadScene\")}\n            {actionManager.renderAction(\"saveScene\")}\n            {renderExportDialog()}\n            {actionManager.renderAction(\"clearCanvas\")}\n            <RoomDialog \n              isCollaborating={appState.isCollaborating}\n              collaboratorCount={appState.collaborators.size}\n              username={appState.username}\n              onUsernameChange={onUsernameChange}\n              onRoomCreate={onRoomCreate}\n              onRoomDestroy={onRoomDestroy}\n            />\n          </Stack.Row>\n          {actionManager.renderAction(\"changeViewBackgroundColor\")}\n        </Stack.Col>\n      </Island>\n    </Section>\n  );\n\n  const renderSelectedShapeActions = () => (\n    <Section heading=\"selectedShapeActions\" className={`zen-mode-transition ${zenModeEnabled && \"transition-left\"}`}>\n      <Island className={CLASSES.SHAPE_ACTIONS_MENU} padding={4}>\n        <SelectedShapeActions appState={appState} elements={elements} renderAction={actionManager.renderAction} elementType={appState.elementType} />\n      </Island>\n    </Section>\n  );\n\n  const renderFixedSideContainer = () => {\n   // console.log(\"renderFixedSideC\");\n    \n    const shouldRenderSelectedShapeActions = showSelectedShapeActions( appState, elements,);\n    console.log(appState)\n    console.log(elements)\n    console.log(shouldRenderSelectedShapeActions)\n    return (\n      <FixedSideContainer side=\"top\">\n        <HintViewer appState={appState} elements={elements} />\n        <div className=\"App-menu App-menu_top\">\n          <Stack.Col\n            gap={4}\n            className={zenModeEnabled && \"disable-pointerEvents\"}\n          >\n            {renderCanvasActions()}\n            {shouldRenderSelectedShapeActions && renderSelectedShapeActions()}\n          </Stack.Col>\n          <Section heading=\"shapes\">\n            {(heading) => (\n              <Stack.Col gap={4} align=\"start\">\n                <Stack.Row gap={1}>\n                  <Island padding={1} className={zenModeEnabled && \"zen-mode\"}>\n                    {heading}\n                    <Stack.Row gap={1}>\n                      <ShapesSwitcher\n                        elementType={appState.elementType}\n                        setAppState={setAppState}\n                      />\n                    </Stack.Row>\n                  </Island>\n                  <LockIcon\n                    zenModeEnabled={zenModeEnabled}\n                    checked={appState.elementLocked}\n                    onChange={onLockToggle}\n                    title={t(\"toolBar.lock\")}\n                  />\n                </Stack.Row>\n              </Stack.Col>\n            )}\n          </Section>\n          <div />\n        </div>\n        {\n          <div\n            className={`App-menu App-menu_bottom zen-mode-transition ${\n              zenModeEnabled && \"App-menu_bottom--transition-left\"\n            }`}\n          >\n            <Stack.Col gap={2}>\n              <Section heading=\"canvasActions\">\n                <Island padding={1}>\n                  <ZoomActions\n                    renderAction={actionManager.renderAction}\n                    zoom={appState.zoom}\n                  />\n                </Island>\n                {renderEncryptedIcon()}\n              </Section>\n            </Stack.Col>\n          </div>\n        }\n      </FixedSideContainer>\n    );\n  };\n\n  const renderFooter = () => (\n    <footer role=\"contentinfo\" className=\"layer-ui__wrapper__footer\">\n      <div\n        className={`zen-mode-transition ${\n          zenModeEnabled && \"transition-right disable-pointerEvents\"\n        }`}\n      >\n        <LanguageList\n          onChange={(lng) => {\n            setLanguage(lng);\n            setAppState({});\n          }}\n          languages={languages}\n          floating\n        />\n        {actionManager.renderAction(\"toggleShortcuts\")}\n      </div>\n      <button\n        className={`disable-zen-mode ${\n          zenModeEnabled && \"disable-zen-mode--visible\"\n        }`}\n        onClick={toggleZenMode}\n      >\n        {t(\"buttons.exitZenMode\")}\n      </button>\n      {appState.scrolledOutside && (\n        <button\n          className=\"scroll-back-to-content\"\n          onClick={() => {\n            setAppState({ ...calculateScrollCenter(elements) });\n          }}\n        >\n          {t(\"buttons.scrollBackToContent\")}\n        </button>\n      )}\n    </footer>\n  );\n\n  return isMobile ? (\n    <MobileMenu\n      appState={appState}\n      elements={elements}\n      actionManager={actionManager}\n      exportButton={renderExportDialog()}\n      setAppState={setAppState}\n      onUsernameChange={onUsernameChange}\n      onRoomCreate={onRoomCreate}\n      onRoomDestroy={onRoomDestroy}\n      onLockToggle={onLockToggle}\n    />\n  ) : (\n    <div className=\"layer-ui__wrapper\">\n      {appState.isLoading && <LoadingMessage />}\n      {appState.errorMessage && (\n        <ErrorDialog\n          message={appState.errorMessage}\n          onClose={() => setAppState({ errorMessage: null })}\n        />\n      )}\n      {appState.showShortcutsDialog && (\n        <ShortcutsDialog\n          onClose={() => setAppState({ showShortcutsDialog: null })}\n        />\n      )}\n      {renderFixedSideContainer()}\n      {\n        <aside\n          className={`layer-ui__wrapper__github-corner zen-mode-transition ${\n            zenModeEnabled && \"transition-right\"\n          }`}\n        >\n          <GitHubCorner />\n        </aside>\n      }\n      {renderFooter()}\n    </div>\n  );\n};\n\nconst areEqual = (prev: LayerUIProps, next: LayerUIProps) => {\n  const getNecessaryObj = (appState: AppState): Partial<AppState> => {\n    const {\n      draggingElement,\n      resizingElement,\n      multiElement,\n      editingElement,\n      isResizing,\n      cursorX,\n      cursorY,\n      ...ret\n    } = appState;\n    return ret;\n  };\n  const prevAppState = getNecessaryObj(prev.appState);\n  const nextAppState = getNecessaryObj(next.appState);\n\n  const keys = Object.keys(prevAppState) as (keyof Partial<AppState>)[];\n\n  return (\n    prev.elements === next.elements &&\n    keys.every((key) => prevAppState[key] === nextAppState[key])\n  );\n};\n\nexport default React.memo(LayerUI, areEqual);\n","import React from \"react\";\n\nimport socketIOClient from \"socket.io-client\";\nimport rough from \"roughjs/bin/rough\";\nimport { RoughCanvas } from \"roughjs/bin/canvas\";\nimport { simplify, Point } from \"points-on-curve\";\nimport { FlooredNumber, SocketUpdateData } from \"../types\";\n\nimport {\n  newElement,\n  newTextElement,\n  duplicateElement,\n  resizeTest,\n  isInvisiblySmallElement,\n  isTextElement,\n  textWysiwyg,\n  getCommonBounds,\n  getCursorForResizingElement,\n  getPerfectElementSize,\n  normalizeDimensions,\n  getElementMap,\n  getDrawingVersion,\n  getSyncableElements,\n  newLinearElement,\n  resizeElements,\n  getElementWithResizeHandler,\n  canResizeMutlipleElements,\n  getResizeOffsetXY,\n  getResizeArrowDirection,\n  getResizeHandlerFromCoords,\n  isNonDeletedElement,\n} from \"../element\";\n\n\nimport {\n  deleteSelectedElements,\n  getElementsWithinSelection,\n  isOverScrollBars,\n  getElementAtPosition,\n  getElementContainingPosition,\n  getNormalizedZoom,\n  getSelectedElements,\n  globalSceneState,\n  isSomeElementSelected,\n  calculateScrollCenter,\n} from \"../scene\";\n\n\nimport {\n  decryptAESGEM,\n  saveToLocalStorage,\n  loadScene,\n  loadFromBlob,\n  SOCKET_SERVER,\n  SocketUpdateDataSource,\n  exportCanvas,\n} from \"../data\";\n\n\nimport Portal from \"./Portal\";\n\nimport { renderScene } from \"../renderer\";\nimport { AppState, GestureEvent, Gesture } from \"../types\";\nimport { ExcalidrawElement, ExcalidrawTextElement } from \"../element/types\";\n\nimport { distance2d, isPathALoop } from \"../math\";\n\nimport {\n  isWritableElement,\n  isInputLike,\n  isToolIcon,\n  debounce,\n  distance,\n  resetCursor,\n  viewportCoordsToSceneCoords,\n  sceneCoordsToViewportCoords,\n  setCursorForShape,\n} from \"../utils\";\n\n\nimport {\n  KEYS,\n  isArrowKey,\n  getResizeCenterPointKey,\n  getResizeWithSidesSameLengthKey,\n} from \"../keys\";\n\nimport { findShapeByKey, shapesShortcutKeys } from \"../shapes\";\nimport { createHistory, SceneHistory } from \"../history\";\n\nimport ContextMenu from \"./ContextMenu\";\n\nimport { ActionManager } from \"../actions/manager\";\nimport \"../actions\";\nimport { actions } from \"../actions/register\";\n\nimport { ActionResult } from \"../actions/types\";\nimport { getDefaultAppState } from \"../appState\";\nimport { t } from \"../i18n\";\n\nimport {\n  copyToAppClipboard,\n  getClipboardContent,\n  probablySupportsClipboardBlob,\n  probablySupportsClipboardWriteText,\n} from \"../clipboard\";\nimport { normalizeScroll } from \"../scene\";\nimport { getCenter, getDistance } from \"../gesture\";\nimport { createUndoAction, createRedoAction } from \"../actions/actionHistory\";\n\nimport {\n  CURSOR_TYPE,\n  ELEMENT_SHIFT_TRANSLATE_AMOUNT,\n  ELEMENT_TRANSLATE_AMOUNT,\n  POINTER_BUTTON,\n  DRAGGING_THRESHOLD,\n  TEXT_TO_CENTER_SNAP_THRESHOLD,\n  LINE_CONFIRM_THRESHOLD,\n  SCENE,\n  EVENT,\n  ENV,\n} from \"../constants\";\nimport {\n  INITAL_SCENE_UPDATE_TIMEOUT,\n  TAP_TWICE_TIMEOUT,\n} from \"../time_constants\";\n\nimport LayerUI from \"./LayerUI\";\nimport { ScrollBars, SceneState } from \"../scene/types\";\nimport { generateCollaborationLink, getCollaborationLinkData } from \"../data\";\nimport { mutateElement, newElementWith } from \"../element/mutateElement\";\nimport { invalidateShapeForElement } from \"../renderer/renderElement\";\nimport { unstable_batchedUpdates } from \"react-dom\";\nimport { SceneStateCallbackRemover } from \"../scene/globalScene\";\nimport { isLinearElement } from \"../element/typeChecks\";\nimport { actionFinalize } from \"../actions\";\nimport {\n  restoreUsernameFromLocalStorage,\n  saveUsernameToLocalStorage,\n} from \"../data/localStorage\";\n\nimport throttle from \"lodash.throttle\";\n\n/**\n * @param func handler taking at most single parameter (event).\n */\nfunction withBatchedUpdates< TFunction extends ((event: any) => void) | (() => void)\n>(func: Parameters<TFunction>[\"length\"] extends 0 | 1 ? TFunction : never) {\n//  console.log(\"TFunciorn\");\n  return ((event) => {\n    unstable_batchedUpdates(func as TFunction, event);\n  }) as TFunction;\n}\n\nconst { history } = createHistory();\n\nlet didTapTwice: boolean = false;\nlet tappedTwiceTimer = 0;\nlet cursorX = 0;\nlet cursorY = 0;\nlet isHoldingSpace: boolean = false;\nlet isPanning: boolean = false;\nlet isDraggingScrollBar: boolean = false;\nlet currentScrollBars: ScrollBars = { horizontal: null, vertical: null };\n\nlet lastPointerUp: ((event: any) => void) | null = null;\nconst gesture: Gesture = {\n  pointers: new Map(),\n  lastCenter: null,\n  initialDistance: null,\n  initialScale: null,\n};\n\nconst SYNC_FULL_SCENE_INTERVAL_MS = 20000;\nlet test123 = true;\n\nclass App extends React.Component<any, AppState> {\n  canvas: HTMLCanvasElement | null = null;\n  rc: RoughCanvas | null = null;\n  portal: Portal = new Portal(this);\n  lastBroadcastedOrReceivedSceneVersion: number = -1;\n  broadcastedElementVersions: Map<string, number> = new Map();\n  removeSceneCallback: SceneStateCallbackRemover | null = null;\n\n  actionManager: ActionManager;\n  canvasOnlyActions = [\"selectAll\"];\n\n  public state: AppState = {\n    ...getDefaultAppState(),\n    isLoading: true,\n  };\n\n  constructor(props: any) {\n    super(props);\n    this.actionManager = new ActionManager(\n      this.syncActionResult,\n      () => this.state,\n      () => globalSceneState.getElementsIncludingDeleted(),\n    );\n    this.actionManager.registerAll(actions);\n\n    this.actionManager.registerAction(createUndoAction(history));\n    this.actionManager.registerAction(createRedoAction(history));\n  }\n\n  public render() {\n    const { zenModeEnabled } = this.state;\n    const canvasDOMWidth = window.innerWidth;\n    const canvasDOMHeight = window.innerHeight;\n\n    const canvasScale = window.devicePixelRatio;\n\n    const canvasWidth = canvasDOMWidth * canvasScale;\n    const canvasHeight = canvasDOMHeight * canvasScale;\n\n    return (\n      <div className=\"container\">\n        <LayerUI\n          canvas={this.canvas}\n          appState={this.state}\n          setAppState={this.setAppState}\n          actionManager={this.actionManager}\n          elements={globalSceneState.getElements()}\n          onRoomCreate={this.openPortal}\n          onRoomDestroy={this.closePortal}\n          onUsernameChange={(username) => {\n            saveUsernameToLocalStorage(username);\n            this.setState({\n              username,\n            });\n          }}\n          onLockToggle={this.toggleLock}\n          zenModeEnabled={zenModeEnabled}\n          toggleZenMode={this.toggleZenMode}\n        />\n        <main>\n          <canvas\n            id=\"canvas\"\n            style={{\n              width: canvasDOMWidth,\n              height: canvasDOMHeight,\n            }}\n            width={canvasWidth}\n            height={canvasHeight}\n            ref={this.handleCanvasRef}\n            onContextMenu={this.handleCanvasContextMenu}\n            onPointerDown={this.handleCanvasPointerDown}\n            onDoubleClick={this.handleCanvasDoubleClick}\n            onPointerMove={this.handleCanvasPointerMove}\n            onPointerUp={this.removePointer}\n            onPointerCancel={this.removePointer}\n            onDrop={this.handleCanvasOnDrop}\n          >\n            {t(\"labels.drawingCanvas\")}\n          </canvas>\n        </main>\n      </div>\n    );\n  }\n\n  private syncActionResult = withBatchedUpdates((res: ActionResult) => {\n    console.log(\"syncActionResult\", res);\n    if (this.unmounted) {\n      return;\n    }\n\n    let editingElement: AppState[\"editingElement\"] | null = null;\n    if (res.elements) {\n      res.elements.forEach((element) => {\n        if (\n          this.state.editingElement?.id === element.id &&\n          this.state.editingElement !== element &&\n          isNonDeletedElement(element)\n        ) {\n          editingElement = element;\n        }\n      });\n      globalSceneState.replaceAllElements(res.elements);\n      if (res.commitToHistory) {\n        history.resumeRecording();\n      }\n    }\n\n    if (res.appState || editingElement) {\n      if (res.commitToHistory) {\n        history.resumeRecording();\n      }\n      this.setState((state) => ({\n        ...res.appState,\n        editingElement: editingElement || res.appState?.editingElement || null,\n        isCollaborating: state.isCollaborating,\n        collaborators: state.collaborators,\n      }));\n    }\n  });\n\n  // Lifecycle\n\n  private onBlur = withBatchedUpdates(() => {\n    console.log(\"onBlur\");\n    isHoldingSpace = false;\n    this.saveDebounced();\n    this.saveDebounced.flush();\n  });\n\n  private onUnload = () => {\n    console.log(\"unbound\")\n    this.destroySocketClient();\n    this.onBlur();\n  };\n\n  private disableEvent: EventHandlerNonNull = (event) => {\n    event.preventDefault();\n  };\n\n  private onFontLoaded = () => {\n    globalSceneState.getElementsIncludingDeleted().forEach((element) => {\n      if (isTextElement(element)) {\n        invalidateShapeForElement(element);\n      }\n    });\n    this.onSceneUpdated();\n  };\n\n  private initializeScene = async () => {\n    const searchParams = new URLSearchParams(window.location.search);\n    const id = searchParams.get(\"id\");\n    const jsonMatch = window.location.hash.match(\n      /^#json=([0-9]+),([a-zA-Z0-9_-]+)$/,\n    );\n\n    const isCollaborationScene = getCollaborationLinkData(window.location.href);\n\n    if (!isCollaborationScene) {\n      let scene: ResolutionType<typeof loadScene> | undefined;\n      // Backwards compatibility with legacy url format\n      if (id) {\n        scene = await loadScene(id);\n      } else if (jsonMatch) {\n        scene = await loadScene(jsonMatch[1], jsonMatch[2]);\n      } else {\n        scene = await loadScene(null);\n      }\n      if (scene) {\n        this.syncActionResult(scene);\n      }\n    }\n\n    if (this.state.isLoading) {\n      this.setState({ isLoading: false });\n    }\n\n    // run this last else the `isLoading` state\n    if (isCollaborationScene) {\n      this.initializeSocketClient({ showLoadingState: true });\n    }\n  };\n\n  private unmounted = false;\n\n  public async componentDidMount() {\n    if (\n      process.env.NODE_ENV === \"test\" ||\n      process.env.NODE_ENV === \"development\"\n    ) {\n      const setState = this.setState.bind(this);\n      Object.defineProperties(window.h, {\n        state: {\n          configurable: true,\n          get: () => {\n            return this.state;\n          },\n        },\n        setState: {\n          configurable: true,\n          value: (...args: Parameters<typeof setState>) => {\n            return this.setState(...args);\n          },\n        },\n        app: {\n          configurable: true,\n          value: this,\n        },\n      });\n    }\n\n    this.removeSceneCallback = globalSceneState.addCallback(\n      this.onSceneUpdated,\n    );\n\n    document.addEventListener(EVENT.COPY, this.onCopy);\n    document.addEventListener(EVENT.PASTE, this.pasteFromClipboard);\n    document.addEventListener(EVENT.CUT, this.onCut);\n\n    document.addEventListener(EVENT.KEYDOWN, this.onKeyDown, false);\n    document.addEventListener(EVENT.KEYUP, this.onKeyUp, { passive: true });\n    document.addEventListener(\n      EVENT.MOUSE_MOVE,\n      this.updateCurrentCursorPosition,\n    );\n    window.addEventListener(EVENT.RESIZE, this.onResize, false);\n    window.addEventListener(EVENT.UNLOAD, this.onUnload, false);\n    window.addEventListener(EVENT.BLUR, this.onBlur, false);\n    window.addEventListener(EVENT.DRAG_OVER, this.disableEvent, false);\n    window.addEventListener(EVENT.DROP, this.disableEvent, false);\n\n    // rerender text elements on font load to fix #637 && #1553\n    document.fonts?.addEventListener?.(\"loadingdone\", this.onFontLoaded);\n\n    // Safari-only desktop pinch zoom\n    document.addEventListener(\n      EVENT.GESTURE_START,\n      this.onGestureStart as any,\n      false,\n    );\n    document.addEventListener(\n      EVENT.GESTURE_CHANGE,\n      this.onGestureChange as any,\n      false,\n    );\n    document.addEventListener(\n      EVENT.GESTURE_END,\n      this.onGestureEnd as any,\n      false,\n    );\n    window.addEventListener(EVENT.BEFORE_UNLOAD, this.beforeUnload);\n\n    this.initializeScene();\n  }\n\n  public componentWillUnmount() {\n    this.unmounted = true;\n    this.removeSceneCallback!();\n\n    document.removeEventListener(EVENT.COPY, this.onCopy);\n    document.removeEventListener(EVENT.PASTE, this.pasteFromClipboard);\n    document.removeEventListener(EVENT.CUT, this.onCut);\n\n    document.removeEventListener(EVENT.KEYDOWN, this.onKeyDown, false);\n    document.removeEventListener(\n      EVENT.MOUSE_MOVE,\n      this.updateCurrentCursorPosition,\n      false,\n    );\n    document.removeEventListener(EVENT.KEYUP, this.onKeyUp);\n    window.removeEventListener(EVENT.RESIZE, this.onResize, false);\n    window.removeEventListener(EVENT.UNLOAD, this.onUnload, false);\n    window.removeEventListener(EVENT.BLUR, this.onBlur, false);\n    window.removeEventListener(EVENT.DRAG_OVER, this.disableEvent, false);\n    window.removeEventListener(EVENT.DROP, this.disableEvent, false);\n\n    document.removeEventListener(\n      EVENT.GESTURE_START,\n      this.onGestureStart as any,\n      false,\n    );\n    document.removeEventListener(\n      EVENT.GESTURE_CHANGE,\n      this.onGestureChange as any,\n      false,\n    );\n    document.removeEventListener(\n      EVENT.GESTURE_END,\n      this.onGestureEnd as any,\n      false,\n    );\n    window.removeEventListener(EVENT.BEFORE_UNLOAD, this.beforeUnload);\n  }\n  private onResize = withBatchedUpdates(() => {\n    console.log(\"onResize\");\n    globalSceneState\n      .getElementsIncludingDeleted()\n      .forEach((element) => invalidateShapeForElement(element));\n    this.setState({});\n  });\n\n  private beforeUnload = withBatchedUpdates((event: BeforeUnloadEvent) => {\n    console.log(\"beforeUnload\");\n    if (\n      this.state.isCollaborating &&\n      globalSceneState.getElements().length > 0\n    ) {\n      event.preventDefault();\n      // NOTE: modern browsers no longer allow showing a custom message here\n      event.returnValue = \"\";\n    }\n  });\n\n  queueBroadcastAllElements = throttle(() => {\n    this.broadcastScene(SCENE.UPDATE, /* syncAll */ true);\n  }, SYNC_FULL_SCENE_INTERVAL_MS);\n\n  componentDidUpdate() {\n    if (this.state.isCollaborating && !this.portal.socket) {\n      this.initializeSocketClient({ showLoadingState: true });\n    }\n\n    const cursorButton: {\n      [id: string]: string | undefined;\n    } = {};\n    const pointerViewportCoords: SceneState[\"remotePointerViewportCoords\"] = {};\n    const remoteSelectedElementIds: SceneState[\"remoteSelectedElementIds\"] = {};\n    const pointerUsernames: { [id: string]: string } = {};\n    this.state.collaborators.forEach((user, socketID) => {\n      if (user.selectedElementIds) {\n        for (const id of Object.keys(user.selectedElementIds)) {\n          if (!(id in remoteSelectedElementIds)) {\n            remoteSelectedElementIds[id] = [];\n          }\n          remoteSelectedElementIds[id].push(socketID);\n        }\n      }\n      if (!user.pointer) {\n        return;\n      }\n      if (user.username) {\n        pointerUsernames[socketID] = user.username;\n      }\n      pointerViewportCoords[socketID] = sceneCoordsToViewportCoords(\n        {\n          sceneX: user.pointer.x,\n          sceneY: user.pointer.y,\n        },\n        this.state,\n        this.canvas,\n        window.devicePixelRatio,\n      );\n      cursorButton[socketID] = user.button;\n    });\n    const elements = globalSceneState.getElements();\n    const { atLeastOneVisibleElement, scrollBars } = renderScene(\n      elements.filter((element) => {\n        // don't render text element that's being currently edited (it's\n        //  rendered on remote only)\n        return (\n          !this.state.editingElement ||\n          this.state.editingElement.type !== \"text\" ||\n          element.id !== this.state.editingElement.id\n        );\n      }),\n      this.state,\n      this.state.selectionElement,\n      window.devicePixelRatio,\n      this.rc!,\n      this.canvas!,\n      {\n        scrollX: this.state.scrollX,\n        scrollY: this.state.scrollY,\n        viewBackgroundColor: this.state.viewBackgroundColor,\n        zoom: this.state.zoom,\n        remotePointerViewportCoords: pointerViewportCoords,\n        remotePointerButton: cursorButton,\n        remoteSelectedElementIds: remoteSelectedElementIds,\n        remotePointerUsernames: pointerUsernames,\n        shouldCacheIgnoreZoom: this.state.shouldCacheIgnoreZoom,\n      },\n      {\n        renderOptimizations: true,\n      },\n    );\n    if (scrollBars) {\n      currentScrollBars = scrollBars;\n    }\n    const scrolledOutside = !atLeastOneVisibleElement && elements.length > 0;\n    if (this.state.scrolledOutside !== scrolledOutside) {\n      this.setState({ scrolledOutside: scrolledOutside });\n    }\n    this.saveDebounced();\n\n    if (\n      getDrawingVersion(globalSceneState.getElementsIncludingDeleted()) >\n      this.lastBroadcastedOrReceivedSceneVersion\n    ) {\n      this.broadcastScene(SCENE.UPDATE, /* syncAll */ false);\n      this.queueBroadcastAllElements();\n    }\n\n    history.record(this.state, globalSceneState.getElementsIncludingDeleted());\n  }\n\n  // Copy/paste\n\n  private onCut = withBatchedUpdates((event: ClipboardEvent) => {\n    console.log(\"onCUt\");\n    if (isWritableElement(event.target)) {\n      return;\n    }\n    this.copyAll();\n    const { elements: nextElements, appState } = deleteSelectedElements(\n      globalSceneState.getElementsIncludingDeleted(),\n      this.state,\n    );\n    globalSceneState.replaceAllElements(nextElements);\n    history.resumeRecording();\n    this.setState({ ...appState });\n    event.preventDefault();\n  });\n\n  private onCopy = withBatchedUpdates((event: ClipboardEvent) => {\n    console.log(\"onCopy\");\n    if (isWritableElement(event.target)) {\n      return;\n    }\n    this.copyAll();\n    event.preventDefault();\n  });\n\n  private copyAll = () => {\n    copyToAppClipboard(globalSceneState.getElements(), this.state);\n  };\n\n  private copyToClipboardAsPng = () => {\n    const elements = globalSceneState.getElements();\n\n    const selectedElements = getSelectedElements(elements, this.state);\n    exportCanvas(\n      \"clipboard\",\n      selectedElements.length ? selectedElements : elements,\n      this.state,\n      this.canvas!,\n      this.state,\n    );\n  };\n\n  private copyToClipboardAsSvg = () => {\n    const selectedElements = getSelectedElements(\n      globalSceneState.getElements(),\n      this.state,\n    );\n    exportCanvas(\n      \"clipboard-svg\",\n      selectedElements.length\n        ? selectedElements\n        : globalSceneState.getElements(),\n      this.state,\n      this.canvas!,\n      this.state,\n    );\n  };\n\n  private resetTapTwice() {\n    didTapTwice = false;\n  }\n\n  private onTapStart = (event: TouchEvent) => {\n    if (!didTapTwice) {\n      didTapTwice = true;\n      clearTimeout(tappedTwiceTimer);\n      tappedTwiceTimer = window.setTimeout(\n        this.resetTapTwice,\n        TAP_TWICE_TIMEOUT,\n      );\n      return;\n    }\n    // insert text only if we tapped twice with a single finger\n    // event.touches.length === 1 will also prevent inserting text when user's zooming\n    if (didTapTwice && event.touches.length === 1) {\n      const [touch] = event.touches;\n      // @ts-ignore\n      this.handleCanvasDoubleClick({\n        clientX: touch.clientX,\n        clientY: touch.clientY,\n      });\n      didTapTwice = false;\n      clearTimeout(tappedTwiceTimer);\n    }\n    event.preventDefault();\n  };\n\n  private pasteFromClipboard = withBatchedUpdates(\n    async (event: ClipboardEvent | null) => {\n      console.log(\"pastFromClipboard\");\n      // #686\n      const target = document.activeElement;\n      const elementUnderCursor = document.elementFromPoint(cursorX, cursorY);\n      if (\n        // if no ClipboardEvent supplied, assume we're pasting via contextMenu\n        //  thus these checks don't make sense\n        event &&\n        (!(elementUnderCursor instanceof HTMLCanvasElement) ||\n          isWritableElement(target))\n      ) {\n        return;\n      }\n      const data = await getClipboardContent(event);\n      if (data.elements) {\n        this.addElementsFromPaste(data.elements);\n      } else if (data.text) {\n        this.addTextFromPaste(data.text);\n      }\n      this.selectShapeTool(\"selection\");\n      event?.preventDefault();\n    },\n  );\n\n  private addElementsFromPaste = (\n    clipboardElements: readonly ExcalidrawElement[],\n  ) => {\n    const [minX, minY, maxX, maxY] = getCommonBounds(clipboardElements);\n\n    const elementsCenterX = distance(minX, maxX) / 2;\n    const elementsCenterY = distance(minY, maxY) / 2;\n\n    const { x, y } = viewportCoordsToSceneCoords(\n      { clientX: cursorX, clientY: cursorY },\n      this.state,\n      this.canvas,\n      window.devicePixelRatio,\n    );\n\n    const dx = x - elementsCenterX;\n    const dy = y - elementsCenterY;\n\n    const newElements = clipboardElements.map((element) =>\n      duplicateElement(element, {\n        x: element.x + dx - minX,\n        y: element.y + dy - minY,\n      }),\n    );\n\n    globalSceneState.replaceAllElements([\n      ...globalSceneState.getElementsIncludingDeleted(),\n      ...newElements,\n    ]);\n    history.resumeRecording();\n    this.setState({\n      selectedElementIds: newElements.reduce((map, element) => {\n        map[element.id] = true;\n        return map;\n      }, {} as any),\n    });\n  };\n\n  private addTextFromPaste(text: any) {\n    const { x, y } = viewportCoordsToSceneCoords(\n      { clientX: cursorX, clientY: cursorY },\n      this.state,\n      this.canvas,\n      window.devicePixelRatio,\n    );\n\n    const element = newTextElement({\n      x: x,\n      y: y,\n      strokeColor: this.state.currentItemStrokeColor,\n      backgroundColor: this.state.currentItemBackgroundColor,\n      fillStyle: this.state.currentItemFillStyle,\n      strokeWidth: this.state.currentItemStrokeWidth,\n      strokeStyle: this.state.currentItemStrokeStyle,\n      roughness: this.state.currentItemRoughness,\n      opacity: this.state.currentItemOpacity,\n      text: text,\n      font: this.state.currentItemFont,\n      textAlign: this.state.currentItemTextAlign,\n    });\n\n    globalSceneState.replaceAllElements([\n      ...globalSceneState.getElementsIncludingDeleted(),\n      element,\n    ]);\n    this.setState({ selectedElementIds: { [element.id]: true } });\n    history.resumeRecording();\n  }\n\n  // Collaboration\n\n  setAppState = (obj: any) => {\n    console.log(obj)\n    this.setState(obj);\n  };\n\n  removePointer = (event: React.PointerEvent<HTMLElement>) => {\n    gesture.pointers.delete(event.pointerId);\n  };\n\n  openPortal = async () => {\n    window.history.pushState(\n      {},\n      \"Excalidraw\",\n      await generateCollaborationLink(),\n    );\n    this.initializeSocketClient({ showLoadingState: false });\n  };\n\n  closePortal = () => {\n    window.history.pushState({}, \"Excalidraw\", window.location.origin);\n    this.destroySocketClient();\n  };\n\n  toggleLock = () => {\n    this.setState((prevState) => ({\n      elementLocked: !prevState.elementLocked,\n      elementType: prevState.elementLocked\n        ? \"selection\"\n        : prevState.elementType,\n    }));\n  };\n\n  toggleZenMode = () => {\n    this.setState({\n      zenModeEnabled: !this.state.zenModeEnabled,\n    });\n  };\n\n  private destroySocketClient = () => {\n    this.setState({\n      isCollaborating: false,\n      collaborators: new Map(),\n    });\n    this.portal.close();\n  };\n\n  private initializeSocketClient = (opts: { showLoadingState: boolean }) => {\n    if (this.portal.socket) {\n      return;\n    }\n    console.log(\"this.portal.socket::\",this.portal.socket)\n    const roomMatch = getCollaborationLinkData(window.location.href);\n    console.log(\"getCollboration\")\n    if (roomMatch) {\n      const initialize = () => {\n        this.portal.socketInitialized = true;\n        clearTimeout(initializationTimer);\n        if (this.state.isLoading && !this.unmounted) {\n          this.setState({ isLoading: false });\n        }\n      };\n      // fallback in case you're not alone in the room but still don't receive\n      //  initial SCENE_UPDATE message\n      const initializationTimer = setTimeout(\n        initialize,\n        INITAL_SCENE_UPDATE_TIMEOUT,\n      );\n\n      const updateScene = ( decryptedData: SocketUpdateDataSource[SCENE.INIT | SCENE.UPDATE], { scrollToContent = false }: { scrollToContent?: boolean } = {}, ) => {\n        const { elements: remoteElements } = decryptedData.payload;\n\n        if (scrollToContent) {\n          this.setState({\n            ...this.state,\n            ...calculateScrollCenter(\n              remoteElements.filter((element: { isDeleted: boolean }) => {\n                return !element.isDeleted;\n              }),\n            ),\n          });\n        }\n\n        // Perform reconciliation - in collaboration, if we encounter\n        // elements with more staler versions than ours, ignore them\n        // and keep ours.\n        if (\n          globalSceneState.getElementsIncludingDeleted() == null ||\n          globalSceneState.getElementsIncludingDeleted().length === 0\n        ) {\n          globalSceneState.replaceAllElements(remoteElements);\n        } else {\n          // create a map of ids so we don't have to iterate\n          // over the array more than once.\n          const localElementMap = getElementMap(\n            globalSceneState.getElementsIncludingDeleted(),\n          );\n\n          // Reconcile\n          const newElements = remoteElements\n            .reduce((elements, element) => {\n              // if the remote element references one that's currently\n              //  edited on local, skip it (it'll be added in the next\n              //  step)\n              if (\n                element.id === this.state.editingElement?.id ||\n                element.id === this.state.resizingElement?.id ||\n                element.id === this.state.draggingElement?.id\n              ) {\n                return elements;\n              }\n\n              if (\n                localElementMap.hasOwnProperty(element.id) &&\n                localElementMap[element.id].version > element.version\n              ) {\n                elements.push(localElementMap[element.id]);\n                delete localElementMap[element.id];\n              } else if (\n                localElementMap.hasOwnProperty(element.id) &&\n                localElementMap[element.id].version === element.version &&\n                localElementMap[element.id].versionNonce !==\n                  element.versionNonce\n              ) {\n                // resolve conflicting edits deterministically by taking the one with the lowest versionNonce\n                if (\n                  localElementMap[element.id].versionNonce <\n                  element.versionNonce\n                ) {\n                  elements.push(localElementMap[element.id]);\n                } else {\n                  // it should be highly unlikely that the two versionNonces are the same. if we are\n                  // really worried about this, we can replace the versionNonce with the socket id.\n                  elements.push(element);\n                }\n                delete localElementMap[element.id];\n              } else {\n                elements.push(element);\n                delete localElementMap[element.id];\n              }\n\n              return elements;\n            }, [] as Mutable<typeof remoteElements>)\n            // add local elements that weren't deleted or on remote\n            .concat(...Object.values(localElementMap));\n\n          // Avoid broadcasting to the rest of the collaborators the scene\n          // we just received!\n          // Note: this needs to be set before replaceAllElements as it\n          // syncronously calls render.\n          this.lastBroadcastedOrReceivedSceneVersion = getDrawingVersion(\n            newElements,\n          );\n\n          globalSceneState.replaceAllElements(newElements);\n        }\n\n        // We haven't yet implemented multiplayer undo functionality, so we clear the undo stack\n        // when we receive any messages from another peer. This UX can be pretty rough -- if you\n        // undo, a user makes a change, and then try to redo, your element(s) will be lost. However,\n        // right now we think this is the right tradeoff.\n        history.clear();\n        if (this.portal.socketInitialized === false) {\n          initialize();\n        }\n      };\n\n      this.portal.open(\n        socketIOClient(SOCKET_SERVER),\n        roomMatch[1],\n        roomMatch[2],\n      );\n\n      // All socket listeners are moving to Portal\n      this.portal.socket!.on(\n        \"client-broadcast\",\n        async (encryptedData: ArrayBuffer, iv: Uint8Array) => {\n          if (!this.portal.roomKey) {\n            return;\n          }\n          const decryptedData = await decryptAESGEM(\n            encryptedData,\n            this.portal.roomKey,\n            iv,\n          );\n\n\n          console.log(decryptedData);\n\n          switch (decryptedData.type) {\n            case \"INVALID_RESPONSE\":\n              return;\n            case SCENE.INIT: {\n              if (!this.portal.socketInitialized) {\n                updateScene(decryptedData, { scrollToContent: true });\n              }\n              break;\n            }\n            case SCENE.UPDATE:\n              console.log(\"sceneupdate\")\n              updateScene(decryptedData);\n              break;\n            case \"MOUSE_LOCATION\": {\n              const {\n                socketID,\n                pointerCoords,\n                button,\n                username,\n                selectedElementIds,\n              } = decryptedData.payload;\n              this.setState((state) => {\n                if (!state.collaborators.has(socketID)) {\n                  state.collaborators.set(socketID, {});\n                }\n                const user = state.collaborators.get(socketID)!;\n                user.pointer = pointerCoords;\n                user.button = button;\n                user.selectedElementIds = selectedElementIds;\n                user.username = username;\n                state.collaborators.set(socketID, user);\n                return state;\n              });\n              break;\n            }\n          }\n        },\n      );\n      this.portal.socket!.on(\"first-in-room\", () => {\n        if (this.portal.socket) {\n          this.portal.socket.off(\"first-in-room\");\n        }\n        initialize();\n      });\n\n      this.setState({\n        isCollaborating: true,\n        isLoading: opts.showLoadingState ? true : this.state.isLoading,\n      });\n    }\n  };\n\n  // Portal-only\n  setCollaborators(sockets: string[]) {\n    this.setState((state) => {\n      const collaborators: typeof state.collaborators = new Map();\n      for (const socketID of sockets) {\n        if (state.collaborators.has(socketID)) {\n          collaborators.set(socketID, state.collaborators.get(socketID)!);\n        } else {\n          collaborators.set(socketID, {});\n        }\n      }\n      return {\n        ...state,\n        collaborators,\n      };\n    });\n  }\n\n  private broadcastMouseLocation = (payload: {\n    pointerCoords: SocketUpdateDataSource[\"MOUSE_LOCATION\"][\"payload\"][\"pointerCoords\"];\n    button: SocketUpdateDataSource[\"MOUSE_LOCATION\"][\"payload\"][\"button\"];\n  }) => {\n    if (this.portal.socket?.id) {\n      const data: SocketUpdateDataSource[\"MOUSE_LOCATION\"] = {\n        type: \"MOUSE_LOCATION\",\n        payload: {\n          socketID: this.portal.socket.id,\n          pointerCoords: payload.pointerCoords,\n          button: payload.button || \"up\",\n          selectedElementIds: this.state.selectedElementIds,\n          username: this.state.username,\n        },\n      };\n      return this.portal._broadcastSocketData(\n        data as SocketUpdateData,\n        true, // volatile\n      );\n    }\n  };\n\n  // maybe should move to Portal\n  broadcastScene = (sceneType: SCENE.INIT | SCENE.UPDATE, syncAll: boolean) => {\n    if (sceneType === SCENE.INIT && !syncAll) {\n      throw new Error(\"syncAll must be true when sending SCENE.INIT\");\n    }\n\n    let syncableElements = getSyncableElements(\n      globalSceneState.getElementsIncludingDeleted(),\n    );\n\n    if (!syncAll) {\n      // sync out only the elements we think we need to to save bandwidth.\n      // periodically we'll resync the whole thing to make sure no one diverges\n      // due to a dropped message (server goes down etc).\n      syncableElements = syncableElements.filter(\n        (syncableElement) =>\n          !this.broadcastedElementVersions.has(syncableElement.id) ||\n          syncableElement.version >\n            this.broadcastedElementVersions.get(syncableElement.id)!,\n      );\n    }\n\n    const data: SocketUpdateDataSource[typeof sceneType] = {\n      type: sceneType,\n      payload: {\n        elements: syncableElements,\n      },\n    };\n    this.lastBroadcastedOrReceivedSceneVersion = Math.max(\n      this.lastBroadcastedOrReceivedSceneVersion,\n      getDrawingVersion(globalSceneState.getElementsIncludingDeleted()),\n    );\n    for (const syncableElement of syncableElements) {\n      this.broadcastedElementVersions.set(\n        syncableElement.id,\n        syncableElement.version,\n      );\n    }\n    return this.portal._broadcastSocketData(data as SocketUpdateData);\n  };\n\n  private onSceneUpdated = () => {\n    this.setState({});\n  };\n\n  private updateCurrentCursorPosition = withBatchedUpdates(\n    (event: MouseEvent) => {\n     // console.log(\"updateCurrentCursorPos\");\n      cursorX = event.x;\n      cursorY = event.y;\n    },\n  );\n\n  restoreUserName() {\n    const username = restoreUsernameFromLocalStorage();\n\n    console.log(username, \"  username\")\n\n    if (username !== null) {\n      this.setState({\n        username,\n      });\n    }\n  }\n\n  // Input handling\n\n  private onKeyDown = withBatchedUpdates((event: KeyboardEvent) => {\n  //  console.log(\"keydown\");\n    // ensures we don't prevent devTools select-element feature\n    if (event[KEYS.CTRL_OR_CMD] && event.shiftKey && event.key === \"C\") {\n      return;\n    }\n\n    if (\n      (isWritableElement(event.target) && event.key !== KEYS.ESCAPE) ||\n      // case: using arrows to move between buttons\n      (isArrowKey(event.key) && isInputLike(event.target))\n    ) {\n      return;\n    }\n\n    if (event.key === KEYS.QUESTION_MARK) {\n      this.setState({\n        showShortcutsDialog: true,\n      });\n    }\n\n    if (\n      !event[KEYS.CTRL_OR_CMD] &&\n      event.altKey &&\n      event.keyCode === KEYS.Z_KEY_CODE\n    ) {\n      this.toggleZenMode();\n    }\n\n    if (event.code === \"KeyC\" && event.altKey && event.shiftKey) {\n      this.copyToClipboardAsPng();\n      event.preventDefault();\n      return;\n    }\n\n    if (this.actionManager.handleKeyDown(event)) {\n      return;\n    }\n\n    const shape = findShapeByKey(event.key);\n\n    if (isArrowKey(event.key)) {\n      const step = event.shiftKey\n        ? ELEMENT_SHIFT_TRANSLATE_AMOUNT\n        : ELEMENT_TRANSLATE_AMOUNT;\n      globalSceneState.replaceAllElements(\n        globalSceneState.getElementsIncludingDeleted().map((el) => {\n          if (this.state.selectedElementIds[el.id]) {\n            const update: { x?: number; y?: number } = {};\n            if (event.key === KEYS.ARROW_LEFT) {\n              update.x = el.x - step;\n            } else if (event.key === KEYS.ARROW_RIGHT) {\n              update.x = el.x + step;\n            } else if (event.key === KEYS.ARROW_UP) {\n              update.y = el.y - step;\n            } else if (event.key === KEYS.ARROW_DOWN) {\n              update.y = el.y + step;\n            }\n            return newElementWith(el, update);\n          }\n          return el;\n        }),\n      );\n      event.preventDefault();\n    } else if (event.key === KEYS.ENTER) {\n      const selectedElements = getSelectedElements(\n        globalSceneState.getElements(),\n        this.state,\n      );\n\n      if (\n        selectedElements.length === 1 &&\n        !isLinearElement(selectedElements[0])\n      ) {\n        const selectedElement = selectedElements[0];\n        const x = selectedElement.x + selectedElement.width / 2;\n        const y = selectedElement.y + selectedElement.height / 2;\n\n        this.startTextEditing({\n          x: x,\n          y: y,\n        });\n        event.preventDefault();\n        return;\n      }\n    } else if (\n      !event.ctrlKey &&\n      !event.altKey &&\n      !event.metaKey &&\n      this.state.draggingElement === null\n    ) {\n      if (shapesShortcutKeys.includes(event.key.toLowerCase())) {\n        this.selectShapeTool(shape);\n      } else if (event.key === \"q\") {\n        this.toggleLock();\n      }\n    }\n    if (event.key === KEYS.SPACE && gesture.pointers.size === 0) {\n      isHoldingSpace = true;\n      document.documentElement.style.cursor = CURSOR_TYPE.GRABBING;\n    }\n  });\n\n  private onKeyUp = withBatchedUpdates((event: KeyboardEvent) => {\n    //console.log(\"keyukp\");\n    if (event.key === KEYS.SPACE) {\n      if (this.state.elementType === \"selection\") {\n        resetCursor();\n      } else {\n        setCursorForShape(this.state.elementType);\n        this.setState({ selectedElementIds: {} });\n      }\n      isHoldingSpace = false;\n    }\n  });\n\n  private selectShapeTool(elementType: AppState[\"elementType\"]) {\n    if (!isHoldingSpace) {\n      setCursorForShape(elementType);\n    }\n    if (isToolIcon(document.activeElement)) {\n      document.activeElement.blur();\n    }\n    if (elementType !== \"selection\") {\n      this.setState({ elementType, selectedElementIds: {} });\n    } else {\n      this.setState({ elementType });\n    }\n  }\n\n  private onGestureStart = withBatchedUpdates((event: GestureEvent) => {\n    console.log(\"gesturestart\");\n    event.preventDefault();\n    gesture.initialScale = this.state.zoom;\n  });\n\n  private onGestureChange = withBatchedUpdates((event: GestureEvent) => {\n    console.log(\"gesturechange\");\n    event.preventDefault();\n\n    this.setState({\n      zoom: getNormalizedZoom(gesture.initialScale! * event.scale),\n    });\n  });\n\n  private onGestureEnd = withBatchedUpdates((event: GestureEvent) => {\n    console.log(\"gesturnend\");\n    event.preventDefault();\n    gesture.initialScale = null;\n  });\n\n  private setElements = (elements: readonly ExcalidrawElement[]) => {\n    globalSceneState.replaceAllElements(elements);\n  };\n\n  private handleTextWysiwyg(\n    element: ExcalidrawTextElement,\n    {\n      x,\n      y,\n      isExistingElement = false,\n    }: { x: number; y: number; isExistingElement?: boolean },\n  ) {\n    const resetSelection = () => {\n      this.setState({\n        draggingElement: null,\n        editingElement: null,\n      });\n    };\n\n    const deleteElement = () => {\n      globalSceneState.replaceAllElements([\n        ...globalSceneState.getElementsIncludingDeleted().map((_element) => {\n          if (_element.id === element.id) {\n            return newElementWith(_element, { isDeleted: true });\n          }\n          return _element;\n        }),\n      ]);\n    };\n\n    const updateElement = (text: string) => {\n      globalSceneState.replaceAllElements([\n        ...globalSceneState.getElementsIncludingDeleted().map((_element) => {\n          if (_element.id === element.id) {\n            return newTextElement({\n              ...(_element as ExcalidrawTextElement),\n              x: element.x,\n              y: element.y,\n              text,\n            });\n          }\n          return _element;\n        }),\n      ]);\n    };\n\n    textWysiwyg({\n      id: element.id,\n      x,\n      y,\n      initText: element.text,\n      strokeColor: element.strokeColor,\n      opacity: element.opacity,\n      font: element.font,\n      angle: element.angle,\n      textAlign: element.textAlign,\n      zoom: this.state.zoom,\n      onChange: withBatchedUpdates((text) => {\n        console.log(\"testwysingggchange\");\n        if (text) {\n          updateElement(text);\n        } else {\n          deleteElement();\n        }\n      }),\n      onSubmit: withBatchedUpdates((text) => {\n        console.log(\"submit\");\n        updateElement(text);\n        this.setState((prevState) => ({\n          selectedElementIds: {\n            ...prevState.selectedElementIds,\n            [element.id]: true,\n          },\n        }));\n        if (this.state.elementLocked) {\n          setCursorForShape(this.state.elementType);\n        }\n        history.resumeRecording();\n        resetSelection();\n      }),\n      onCancel: withBatchedUpdates(() => {\n        console.log(\"cancel\");\n        deleteElement();\n        if (isExistingElement) {\n          history.resumeRecording();\n        }\n        resetSelection();\n      }),\n    });\n    // deselect all other elements when inserting text\n    this.setState({ selectedElementIds: {} });\n\n    // do an initial update to re-initialize element position since we were\n    //  modifying element's x/y for sake of editor (case: syncing to remote)\n    updateElement(element.text);\n  }\n\n  private startTextEditing = ({\n    x,\n    y,\n    clientX,\n    clientY,\n    centerIfPossible = true,\n  }: {\n    x: number;\n    y: number;\n    clientX?: number;\n    clientY?: number;\n    centerIfPossible?: boolean;\n  }) => {\n    const elementAtPosition = getElementAtPosition(\n      globalSceneState.getElements(),\n      this.state,\n      x,\n      y,\n      this.state.zoom,\n    );\n\n    const element =\n      elementAtPosition && isTextElement(elementAtPosition)\n        ? elementAtPosition\n        : newTextElement({\n            x: x,\n            y: y,\n            strokeColor: this.state.currentItemStrokeColor,\n            backgroundColor: this.state.currentItemBackgroundColor,\n            fillStyle: this.state.currentItemFillStyle,\n            strokeWidth: this.state.currentItemStrokeWidth,\n            strokeStyle: this.state.currentItemStrokeStyle,\n            roughness: this.state.currentItemRoughness,\n            opacity: this.state.currentItemOpacity,\n            text: \"\",\n            font: this.state.currentItemFont,\n            textAlign: this.state.currentItemTextAlign,\n          });\n\n    this.setState({ editingElement: element });\n\n    let textX = clientX || x;\n    let textY = clientY || y;\n\n    let isExistingTextElement = false;\n\n    if (elementAtPosition && isTextElement(elementAtPosition)) {\n      isExistingTextElement = true;\n      const centerElementX = elementAtPosition.x + elementAtPosition.width / 2;\n      const centerElementY = elementAtPosition.y + elementAtPosition.height / 2;\n\n      const {\n        x: centerElementXInViewport,\n        y: centerElementYInViewport,\n      } = sceneCoordsToViewportCoords(\n        { sceneX: centerElementX, sceneY: centerElementY },\n        this.state,\n        this.canvas,\n        window.devicePixelRatio,\n      );\n\n      textX = centerElementXInViewport;\n      textY = centerElementYInViewport;\n\n      // x and y will change after calling newTextElement function\n      mutateElement(element, {\n        x: centerElementX,\n        y: centerElementY,\n      });\n    } else {\n      globalSceneState.replaceAllElements([\n        ...globalSceneState.getElementsIncludingDeleted(),\n        element,\n      ]);\n\n      if (centerIfPossible) {\n        const snappedToCenterPosition = this.getTextWysiwygSnappedToCenterPosition(\n          x,\n          y,\n          this.state,\n          this.canvas,\n          window.devicePixelRatio,\n        );\n\n        if (snappedToCenterPosition) {\n          mutateElement(element, {\n            x: snappedToCenterPosition.elementCenterX,\n            y: snappedToCenterPosition.elementCenterY,\n          });\n          textX = snappedToCenterPosition.wysiwygX;\n          textY = snappedToCenterPosition.wysiwygY;\n        }\n      }\n    }\n\n    this.setState({\n      editingElement: element,\n    });\n\n    this.handleTextWysiwyg(element, {\n      x: textX,\n      y: textY,\n      isExistingElement: isExistingTextElement,\n    });\n  };\n\n  private handleCanvasDoubleClick = (\n    event: React.MouseEvent<HTMLCanvasElement>,\n  ) => {\n    if(!test123){\n      return\n    }\n    console.log(\"canvasdwondoubl\")\n    // case: double-clicking with arrow/line tool selected would both create\n    //  text and enter multiElement mode\n    if (this.state.multiElement) {\n      return;\n    }\n\n    resetCursor();\n\n    const { x, y } = viewportCoordsToSceneCoords(\n      event,\n      this.state,\n      this.canvas,\n      window.devicePixelRatio,\n    );\n\n    this.startTextEditing({\n      x: x,\n      y: y,\n      clientX: event.clientX,\n      clientY: event.clientY,\n      centerIfPossible: !event.altKey,\n    });\n  };\n\n  private handleCanvasPointerMove = (\n    event: React.PointerEvent<HTMLCanvasElement>,\n  ) => {\n    this.savePointer(event.clientX, event.clientY, this.state.cursorButton);\n\n    if (gesture.pointers.has(event.pointerId)) {\n      gesture.pointers.set(event.pointerId, {\n        x: event.clientX,\n        y: event.clientY,\n      });\n    }\n\n    if (gesture.pointers.size === 2) {\n      const center = getCenter(gesture.pointers);\n      const deltaX = center.x - gesture.lastCenter!.x;\n      const deltaY = center.y - gesture.lastCenter!.y;\n      gesture.lastCenter = center;\n\n      const distance = getDistance(Array.from(gesture.pointers.values()));\n      const scaleFactor = distance / gesture.initialDistance!;\n\n      this.setState({\n        scrollX: normalizeScroll(this.state.scrollX + deltaX / this.state.zoom),\n        scrollY: normalizeScroll(this.state.scrollY + deltaY / this.state.zoom),\n        zoom: getNormalizedZoom(gesture.initialScale! * scaleFactor),\n        shouldCacheIgnoreZoom: true,\n      });\n      this.resetShouldCacheIgnoreZoomDebounced();\n    } else {\n      gesture.lastCenter = gesture.initialDistance = gesture.initialScale = null;\n    }\n\n    if (isHoldingSpace || isPanning || isDraggingScrollBar) {\n      return;\n    }\n    const {\n      isOverHorizontalScrollBar,\n      isOverVerticalScrollBar,\n    } = isOverScrollBars(currentScrollBars, event.clientX, event.clientY);\n    const isOverScrollBar =\n      isOverVerticalScrollBar || isOverHorizontalScrollBar;\n    if (!this.state.draggingElement && !this.state.multiElement) {\n      if (isOverScrollBar) {\n        resetCursor();\n      } else {\n        setCursorForShape(this.state.elementType);\n      }\n    }\n\n    const { x, y } = viewportCoordsToSceneCoords(\n      event,\n      this.state,\n      this.canvas,\n      window.devicePixelRatio,\n    );\n    if (this.state.multiElement) {\n      const { multiElement } = this.state;\n      const { x: rx, y: ry } = multiElement;\n\n      const { points, lastCommittedPoint } = multiElement;\n      const lastPoint = points[points.length - 1];\n\n      setCursorForShape(this.state.elementType);\n\n      if (lastPoint === lastCommittedPoint) {\n        // if we haven't yet created a temp point and we're beyond commit-zone\n        //  threshold, add a point\n        if (\n          distance2d(x - rx, y - ry, lastPoint[0], lastPoint[1]) >=\n          LINE_CONFIRM_THRESHOLD\n        ) {\n          mutateElement(multiElement, {\n            points: [...points, [x - rx, y - ry]],\n          });\n        } else {\n          document.documentElement.style.cursor = CURSOR_TYPE.POINTER;\n          // in this branch, we're inside the commit zone, and no uncommitted\n          //  point exists. Thus do nothing (don't add/remove points).\n        }\n      } else {\n        // cursor moved inside commit zone, and there's uncommitted point,\n        //  thus remove it\n        if (\n          points.length > 2 &&\n          lastCommittedPoint &&\n          distance2d(\n            x - rx,\n            y - ry,\n            lastCommittedPoint[0],\n            lastCommittedPoint[1],\n          ) < LINE_CONFIRM_THRESHOLD\n        ) {\n          document.documentElement.style.cursor = CURSOR_TYPE.POINTER;\n          mutateElement(multiElement, {\n            points: points.slice(0, -1),\n          });\n        } else {\n          if (isPathALoop(points)) {\n            document.documentElement.style.cursor = CURSOR_TYPE.POINTER;\n          }\n          // update last uncommitted point\n          mutateElement(multiElement, {\n            points: [...points.slice(0, -1), [x - rx, y - ry]],\n          });\n        }\n      }\n      return;\n    }\n\n    const hasDeselectedButton = Boolean(event.buttons);\n    if (\n      hasDeselectedButton ||\n      (this.state.elementType !== \"selection\" &&\n        this.state.elementType !== \"text\")\n    ) {\n      return;\n    }\n\n    const elements = globalSceneState.getElements();\n\n    const selectedElements = getSelectedElements(elements, this.state);\n    if (selectedElements.length === 1 && !isOverScrollBar) {\n      const elementWithResizeHandler = getElementWithResizeHandler(\n        elements,\n        this.state,\n        { x, y },\n        this.state.zoom,\n        event.pointerType,\n      );\n      if (elementWithResizeHandler && elementWithResizeHandler.resizeHandle) {\n        document.documentElement.style.cursor = getCursorForResizingElement(\n          elementWithResizeHandler,\n        );\n        return;\n      }\n    } else if (selectedElements.length > 1 && !isOverScrollBar) {\n      if (canResizeMutlipleElements(selectedElements)) {\n        const resizeHandle = getResizeHandlerFromCoords(\n          getCommonBounds(selectedElements),\n          { x, y },\n          this.state.zoom,\n          event.pointerType,\n        );\n        if (resizeHandle) {\n          document.documentElement.style.cursor = getCursorForResizingElement({\n            resizeHandle,\n          });\n          return;\n        }\n      }\n    }\n    const hitElement = getElementAtPosition(\n      elements,\n      this.state,\n      x,\n      y,\n      this.state.zoom,\n    );\n    if (this.state.elementType === \"text\") {\n      document.documentElement.style.cursor = isTextElement(hitElement)\n        ? CURSOR_TYPE.TEXT\n        : CURSOR_TYPE.CROSSHAIR;\n    } else {\n      document.documentElement.style.cursor =\n        hitElement && !isOverScrollBar ? \"move\" : \"\";\n    }\n  };\n\n  private handleCanvasPointerDown = (\n    event: React.PointerEvent<HTMLCanvasElement>,\n  ) => {\n    if(!test123){\n      return;\n    }\n    event.persist();\n    console.log(\"canvasdonw event\")\n\n    \n    \n    if (lastPointerUp !== null) {\n      // Unfortunately, sometimes we don't get a pointerup after a pointerdown,\n      // this can happen when a contextual menu or alert is triggered. In order to avoid\n      // being in a weird state, we clean up on the next pointerdown\n      lastPointerUp(event);\n    }\n\n    if (isPanning) {\n      return;\n    }\n\n    this.setState({\n      lastPointerDownWith: event.pointerType,\n      cursorButton: \"down\",\n    });\n    this.savePointer(event.clientX, event.clientY, \"down\");\n\n    // pan canvas on wheel button drag or space+drag\n    if (\n      gesture.pointers.size === 0 &&\n      (event.button === POINTER_BUTTON.WHEEL ||\n        (event.button === POINTER_BUTTON.MAIN && isHoldingSpace))\n    ) {\n      isPanning = true;\n\n      let nextPastePrevented = false;\n      const isLinux = /Linux/.test(window.navigator.platform);\n\n      document.documentElement.style.cursor = CURSOR_TYPE.GRABBING;\n      let { clientX: lastX, clientY: lastY } = event;\n      const onPointerMove = withBatchedUpdates((event: PointerEvent) => {\n        console.log(\"pointermove\");\n        const deltaX = lastX - event.clientX;\n        const deltaY = lastY - event.clientY;\n        lastX = event.clientX;\n        lastY = event.clientY;\n\n        /*\n         * Prevent paste event if we move while middle clicking on Linux.\n         * See issue #1383.\n         */\n        if (\n          isLinux &&\n          !nextPastePrevented &&\n          (Math.abs(deltaX) > 1 || Math.abs(deltaY) > 1)\n        ) {\n          nextPastePrevented = true;\n\n          /* Prevent the next paste event */\n          const preventNextPaste = (event: ClipboardEvent) => {\n            document.body.removeEventListener(EVENT.PASTE, preventNextPaste);\n            event.stopPropagation();\n          };\n\n          /*\n           * Reenable next paste in case of disabled middle click paste for\n           * any reason:\n           * - rigth click paste\n           * - empty clipboard\n           */\n          const enableNextPaste = () => {\n            setTimeout(() => {\n              document.body.removeEventListener(EVENT.PASTE, preventNextPaste);\n              window.removeEventListener(EVENT.POINTER_UP, enableNextPaste);\n            }, 100);\n          };\n\n          document.body.addEventListener(EVENT.PASTE, preventNextPaste);\n          window.addEventListener(EVENT.POINTER_UP, enableNextPaste);\n        }\n\n        this.setState({\n          scrollX: normalizeScroll(\n            this.state.scrollX - deltaX / this.state.zoom,\n          ),\n          scrollY: normalizeScroll(\n            this.state.scrollY - deltaY / this.state.zoom,\n          ),\n        });\n      });\n      const teardown = withBatchedUpdates(\n        \n        (lastPointerUp = () => {\n          console.log(\"teardolwn\");\n          lastPointerUp = null;\n          isPanning = false;\n          if (!isHoldingSpace) {\n            setCursorForShape(this.state.elementType);\n          }\n          this.setState({\n            cursorButton: \"up\",\n          });\n          this.savePointer(event.clientX, event.clientY, \"up\");\n          window.removeEventListener(EVENT.POINTER_MOVE, onPointerMove);\n          window.removeEventListener(EVENT.POINTER_UP, teardown);\n          window.removeEventListener(EVENT.BLUR, teardown);\n        }),\n      );\n      window.addEventListener(EVENT.BLUR, teardown);\n      window.addEventListener(EVENT.POINTER_MOVE, onPointerMove, {\n        passive: true,\n      });\n      window.addEventListener(EVENT.POINTER_UP, teardown);\n      return;\n    }\n\n    // only handle left mouse button or touch\n    if (\n      event.button !== POINTER_BUTTON.MAIN &&\n      event.button !== POINTER_BUTTON.TOUCH\n    ) {\n      return;\n    }\n\n    gesture.pointers.set(event.pointerId, {\n      x: event.clientX,\n      y: event.clientY,\n    });\n\n    if (gesture.pointers.size === 2) {\n      gesture.lastCenter = getCenter(gesture.pointers);\n      gesture.initialScale = this.state.zoom;\n      gesture.initialDistance = getDistance(\n        Array.from(gesture.pointers.values()),\n      );\n    }\n\n    // fixes pointermove causing selection of UI texts #32\n    event.preventDefault();\n    // Preventing the event above disables default behavior\n    //  of defocusing potentially focused element, which is what we\n    //  want when clicking inside the canvas.\n    if (document.activeElement instanceof HTMLElement) {\n      document.activeElement.blur();\n    }\n\n    // don't select while panning\n    if (gesture.pointers.size > 1) {\n      return;\n    }\n\n    // Handle scrollbars dragging\n    const {\n      isOverHorizontalScrollBar,\n      isOverVerticalScrollBar,\n    } = isOverScrollBars(currentScrollBars, event.clientX, event.clientY);\n\n    const { x, y } = viewportCoordsToSceneCoords(\n      event,\n      this.state,\n      this.canvas,\n      window.devicePixelRatio,\n    );\n    let lastX = x;\n    let lastY = y;\n\n    if (\n      (isOverHorizontalScrollBar || isOverVerticalScrollBar) &&\n      !this.state.multiElement\n    ) {\n      isDraggingScrollBar = true;\n      lastX = event.clientX;\n      lastY = event.clientY;\n      const onPointerMove = withBatchedUpdates((event: PointerEvent) => {\n        console.log(\"onpointermove1829\");\n        const target = event.target;\n        if (!(target instanceof HTMLElement)) {\n          return;\n        }\n\n        if (isOverHorizontalScrollBar) {\n          const x = event.clientX;\n          const dx = x - lastX;\n          this.setState({\n            scrollX: normalizeScroll(this.state.scrollX - dx / this.state.zoom),\n          });\n          lastX = x;\n          return;\n        }\n\n        if (isOverVerticalScrollBar) {\n          const y = event.clientY;\n          const dy = y - lastY;\n          this.setState({\n            scrollY: normalizeScroll(this.state.scrollY - dy / this.state.zoom),\n          });\n          lastY = y;\n        }\n      });\n\n      const onPointerUp = withBatchedUpdates(() => {\n        console.log(\"pointerup\");\n        isDraggingScrollBar = false;\n        setCursorForShape(this.state.elementType);\n        lastPointerUp = null;\n        this.setState({\n          cursorButton: \"up\",\n        });\n        this.savePointer(event.clientX, event.clientY, \"up\");\n        window.removeEventListener(EVENT.POINTER_MOVE, onPointerMove);\n        window.removeEventListener(EVENT.POINTER_UP, onPointerUp);\n      });\n\n      lastPointerUp = onPointerUp;\n\n      window.addEventListener(EVENT.POINTER_MOVE, onPointerMove);\n      window.addEventListener(EVENT.POINTER_UP, onPointerUp);\n      return;\n    }\n\n    const originX = x;\n    const originY = y;\n\n    type ResizeTestType = ReturnType<typeof resizeTest>;\n    let resizeHandle: ResizeTestType = false;\n    const setResizeHandle = (nextResizeHandle: ResizeTestType) => {\n      resizeHandle = nextResizeHandle;\n    };\n    let resizeOffsetXY: [number, number] = [0, 0];\n    let resizeArrowDirection: \"origin\" | \"end\" = \"origin\";\n    let isResizingElements = false;\n    let draggingOccurred = false;\n    let hitElement: ExcalidrawElement | null = null;\n    let hitElementWasAddedToSelection = false;\n\n    if (this.state.elementType === \"selection\") {\n      const elements = globalSceneState.getElements();\n      const selectedElements = getSelectedElements(elements, this.state);\n      if (selectedElements.length === 1) {\n        const elementWithResizeHandler = getElementWithResizeHandler(\n          elements,\n          this.state,\n          { x, y },\n          this.state.zoom,\n          event.pointerType,\n        );\n        if (elementWithResizeHandler) {\n          this.setState({\n            resizingElement: elementWithResizeHandler\n              ? elementWithResizeHandler.element\n              : null,\n          });\n          resizeHandle = elementWithResizeHandler.resizeHandle;\n          document.documentElement.style.cursor = getCursorForResizingElement(\n            elementWithResizeHandler,\n          );\n          isResizingElements = true;\n        }\n      } else if (selectedElements.length > 1) {\n        if (canResizeMutlipleElements(selectedElements)) {\n          resizeHandle = getResizeHandlerFromCoords(\n            getCommonBounds(selectedElements),\n            { x, y },\n            this.state.zoom,\n            event.pointerType,\n          );\n          if (resizeHandle) {\n            document.documentElement.style.cursor = getCursorForResizingElement(\n              {\n                resizeHandle,\n              },\n            );\n            isResizingElements = true;\n          }\n        }\n      }\n      if (isResizingElements) {\n        resizeOffsetXY = getResizeOffsetXY(\n          resizeHandle,\n          selectedElements,\n          x,\n          y,\n        );\n        if (\n          selectedElements.length === 1 &&\n          isLinearElement(selectedElements[0]) &&\n          selectedElements[0].points.length === 2\n        ) {\n          resizeArrowDirection = getResizeArrowDirection(\n            resizeHandle,\n            selectedElements[0],\n          );\n        }\n      }\n      if (!isResizingElements) {\n        hitElement = getElementAtPosition(\n          elements,\n          this.state,\n          x,\n          y,\n          this.state.zoom,\n        );\n        // clear selection if shift is not clicked\n        if (\n          !(hitElement && this.state.selectedElementIds[hitElement.id]) &&\n          !event.shiftKey\n        ) {\n          this.setState({ selectedElementIds: {} });\n        }\n\n        // If we click on something\n        if (hitElement) {\n          // deselect if item is selected\n          // if shift is not clicked, this will always return true\n          // otherwise, it will trigger selection based on current\n          // state of the box\n          if (!this.state.selectedElementIds[hitElement.id]) {\n            this.setState((prevState) => ({\n              selectedElementIds: {\n                ...prevState.selectedElementIds,\n                [hitElement!.id]: true,\n              },\n            }));\n            globalSceneState.replaceAllElements(\n              globalSceneState.getElementsIncludingDeleted(),\n            );\n            hitElementWasAddedToSelection = true;\n          }\n        }\n      }\n    } else {\n      this.setState({ selectedElementIds: {} });\n    }\n\n    if (this.state.elementType === \"text\") {\n      // if we're currently still editing text, clicking outside\n      //  should only finalize it, not create another (irrespective\n      //  of state.elementLocked)\n      if (this.state.editingElement?.type === \"text\") {\n        return;\n      }\n\n      const { x, y } = viewportCoordsToSceneCoords(\n        event,\n        this.state,\n        this.canvas,\n        window.devicePixelRatio,\n      );\n\n      this.startTextEditing({\n        x: x,\n        y: y,\n        clientX: event.clientX,\n        clientY: event.clientY,\n        centerIfPossible: !event.altKey,\n      });\n\n      resetCursor();\n      if (!this.state.elementLocked) {\n        this.setState({\n          elementType: \"selection\",\n        });\n      }\n      return;\n    } else if (\n      this.state.elementType === \"arrow\" ||\n      this.state.elementType === \"draw\" ||\n      this.state.elementType === \"line\"\n    ) {\n      if (this.state.multiElement) {\n        const { multiElement } = this.state;\n\n        // finalize if completing a loop\n        if (multiElement.type === \"line\" && isPathALoop(multiElement.points)) {\n          mutateElement(multiElement, {\n            lastCommittedPoint:\n              multiElement.points[multiElement.points.length - 1],\n          });\n          this.actionManager.executeAction(actionFinalize);\n          return;\n        }\n\n        const { x: rx, y: ry, lastCommittedPoint } = multiElement;\n\n        // clicking inside commit zone → finalize arrow\n        if (\n          multiElement.points.length > 1 &&\n          lastCommittedPoint &&\n          distance2d(\n            x - rx,\n            y - ry,\n            lastCommittedPoint[0],\n            lastCommittedPoint[1],\n          ) < LINE_CONFIRM_THRESHOLD\n        ) {\n          this.actionManager.executeAction(actionFinalize);\n          return;\n        }\n\n        this.setState((prevState) => ({\n          selectedElementIds: {\n            ...prevState.selectedElementIds,\n            [multiElement.id]: true,\n          },\n        }));\n        // clicking outside commit zone → update reference for last committed\n        //  point\n        mutateElement(multiElement, {\n          lastCommittedPoint:\n            multiElement.points[multiElement.points.length - 1],\n        });\n        document.documentElement.style.cursor = CURSOR_TYPE.POINTER;\n      } else {\n        const element = newLinearElement({\n          type: this.state.elementType,\n          x: x,\n          y: y,\n          strokeColor: this.state.currentItemStrokeColor,\n          backgroundColor: this.state.currentItemBackgroundColor,\n          fillStyle: this.state.currentItemFillStyle,\n          strokeWidth: this.state.currentItemStrokeWidth,\n          strokeStyle: this.state.currentItemStrokeStyle,\n          roughness: this.state.currentItemRoughness,\n          opacity: this.state.currentItemOpacity,\n        });\n        this.setState((prevState) => ({\n          selectedElementIds: {\n            ...prevState.selectedElementIds,\n            [element.id]: false,\n          },\n        }));\n        mutateElement(element, {\n          points: [...element.points, [0, 0]],\n        });\n        globalSceneState.replaceAllElements([\n          ...globalSceneState.getElementsIncludingDeleted(),\n          element,\n        ]);\n        this.setState({\n          draggingElement: element,\n          editingElement: element,\n        });\n      }\n    } else {\n      const element = newElement({\n        type: this.state.elementType,\n        x: x,\n        y: y,\n        strokeColor: this.state.currentItemStrokeColor,\n        backgroundColor: this.state.currentItemBackgroundColor,\n        fillStyle: this.state.currentItemFillStyle,\n        strokeWidth: this.state.currentItemStrokeWidth,\n        strokeStyle: this.state.currentItemStrokeStyle,\n        roughness: this.state.currentItemRoughness,\n        opacity: this.state.currentItemOpacity,\n      });\n\n      if (element.type === \"selection\") {\n        this.setState({\n          selectionElement: element,\n          draggingElement: element,\n        });\n      } else {\n        globalSceneState.replaceAllElements([\n          ...globalSceneState.getElementsIncludingDeleted(),\n          element,\n        ]);\n        this.setState({\n          multiElement: null,\n          draggingElement: element,\n          editingElement: element,\n        });\n      }\n    }\n\n    let selectedElementWasDuplicated = false;\n\n    const onPointerMove = withBatchedUpdates((event: PointerEvent) => {\n     \n      const target = event.target;\n      console.log(\"pointermove 333\", target);\n      if (!(target instanceof HTMLElement)) {\n        return;\n      }\n      console.log(\"11111\");\n\n      if (isOverHorizontalScrollBar) {\n        const x = event.clientX;\n        const dx = x - lastX;\n        this.setState({\n          scrollX: normalizeScroll(this.state.scrollX - dx / this.state.zoom),\n        });\n        lastX = x;\n        return;\n      }\n      console.log(\"22222\");\n      if (isOverVerticalScrollBar) {\n        const y = event.clientY;\n        const dy = y - lastY;\n        this.setState({\n          scrollY: normalizeScroll(this.state.scrollY - dy / this.state.zoom),\n        });\n        lastY = y;\n        return;\n      }\n      console.log(\"3333\");\n      const { x, y } = viewportCoordsToSceneCoords(\n        event,\n        this.state,\n        this.canvas,\n        window.devicePixelRatio,\n      );\n      console.log(\"4444\");\n      // for arrows/lines, don't start dragging until a given threshold\n      //  to ensure we don't create a 2-point arrow by mistake when\n      //  user clicks mouse in a way that it moves a tiny bit (thus\n      //  triggering pointermove)\n      if (\n        !draggingOccurred &&\n        (this.state.elementType === \"arrow\" ||\n          this.state.elementType === \"line\")\n      ) {\n        if (distance2d(x, y, originX, originY) < DRAGGING_THRESHOLD) {\n          return;\n        }\n      }\n      console.log(\"55555\");\n\n      if (isResizingElements) {\n        const selectedElements = getSelectedElements(\n          globalSceneState.getElements(),\n          this.state,\n        );\n        this.setState({\n          isResizing: resizeHandle && resizeHandle !== \"rotation\",\n          isRotating: resizeHandle === \"rotation\",\n        });\n        if (\n          resizeElements(\n            resizeHandle,\n            setResizeHandle,\n            selectedElements,\n            resizeArrowDirection,\n            event,\n            x - resizeOffsetXY[0],\n            y - resizeOffsetXY[1],\n          )\n        ) {\n          return;\n        }\n      }\n      console.log(\"66666\");\n      if (hitElement && this.state.selectedElementIds[hitElement.id]) {\n        // Marking that click was used for dragging to check\n        // if elements should be deselected on pointerup\n        draggingOccurred = true;\n        const selectedElements = getSelectedElements(\n          globalSceneState.getElements(),\n          this.state,\n        );\n        if (selectedElements.length > 0) {\n          const { x, y } = viewportCoordsToSceneCoords(\n            event,\n            this.state,\n            this.canvas,\n            window.devicePixelRatio,\n          );\n\n          selectedElements.forEach((element) => {\n            mutateElement(element, {\n              x: element.x + x - lastX,\n              y: element.y + y - lastY,\n            });\n          });\n          lastX = x;\n          lastY = y;\n\n          // We duplicate the selected element if alt is pressed on pointer move\n          if (event.altKey && !selectedElementWasDuplicated) {\n            // Move the currently selected elements to the top of the z index stack, and\n            // put the duplicates where the selected elements used to be.\n            // (the origin point where the dragging started)\n\n            selectedElementWasDuplicated = true;\n\n            const nextElements = [];\n            const elementsToAppend = [];\n            for (const element of globalSceneState.getElementsIncludingDeleted()) {\n              if (\n                this.state.selectedElementIds[element.id] ||\n                // case: the state.selectedElementIds might not have been\n                //  updated yet by the time this mousemove event is fired\n                (element.id === hitElement.id && hitElementWasAddedToSelection)\n              ) {\n                const duplicatedElement = duplicateElement(element);\n                mutateElement(duplicatedElement, {\n                  x: duplicatedElement.x + (originX - lastX),\n                  y: duplicatedElement.y + (originY - lastY),\n                });\n                nextElements.push(duplicatedElement);\n                elementsToAppend.push(element);\n              } else {\n                nextElements.push(element);\n              }\n            }\n            globalSceneState.replaceAllElements([\n              ...nextElements,\n              ...elementsToAppend,\n            ]);\n          }\n          return;\n        }\n      }\n      console.log(\"777777777\");\n      // It is very important to read this.state within each move event,\n      // otherwise we would read a stale one!\n      const draggingElement = this.state.draggingElement;\n      if (!draggingElement) {\n        return;\n      }\n      console.log(\"88888\");\n      let width = distance(originX, x);\n      let height = distance(originY, y);\n\n      if (isLinearElement(draggingElement)) {\n        draggingOccurred = true;\n        const points = draggingElement.points;\n        let dx = x - draggingElement.x;\n        let dy = y - draggingElement.y;\n\n        if (event.shiftKey && points.length === 2) {\n          ({ width: dx, height: dy } = getPerfectElementSize(\n            this.state.elementType,\n            dx,\n            dy,\n          ));\n        }\n\n        if (points.length === 1) {\n          mutateElement(draggingElement, { points: [...points, [dx, dy]] });\n        } else if (points.length > 1) {\n          if (draggingElement.type === \"draw\") {\n            mutateElement(draggingElement, {\n              points: simplify([...(points as Point[]), [dx, dy]], 0.7),\n            });\n          } else {\n            mutateElement(draggingElement, {\n              points: [...points.slice(0, -1), [dx, dy]],\n            });\n          }\n        }\n      } else {\n        if (getResizeWithSidesSameLengthKey(event)) {\n          ({ width, height } = getPerfectElementSize(\n            this.state.elementType,\n            width,\n            y < originY ? -height : height,\n          ));\n\n          if (height < 0) {\n            height = -height;\n          }\n        }\n        console.log(\"9999999\");\n        let newX = x < originX ? originX - width : originX;\n        let newY = y < originY ? originY - height : originY;\n\n        if (getResizeCenterPointKey(event)) {\n          width += width;\n          height += height;\n          newX = originX - width / 2;\n          newY = originY - height / 2;\n        }\n        console.log(\"000000\");\n        mutateElement(draggingElement, {\n          x: newX,\n          y: newY,\n          width: width,\n          height: height,\n        });\n      }\n      console.log(\"aaaaaaaaaaaaaaaa\");\n      if (this.state.elementType === \"selection\") {\n        const elements = globalSceneState.getElements();\n        if (!event.shiftKey && isSomeElementSelected(elements, this.state)) {\n          this.setState({ selectedElementIds: {} });\n        }\n        const elementsWithinSelection = getElementsWithinSelection(\n          elements,\n          draggingElement,\n        );\n        this.setState((prevState) => ({\n          selectedElementIds: {\n            ...prevState.selectedElementIds,\n            ...elementsWithinSelection.reduce((map, element) => {\n              map[element.id] = true;\n              return map;\n            }, {} as any),\n          },\n        }));\n      }\n    });\n\n    const onPointerUp = withBatchedUpdates((childEvent: PointerEvent) => {\n      console.log(\"pointerup tttttt\");\n      const {\n        draggingElement,\n        resizingElement,\n        multiElement,\n        elementType,\n        elementLocked,\n      } = this.state;\n\n      this.setState({\n        isResizing: false,\n        isRotating: false,\n        resizingElement: null,\n        selectionElement: null,\n        cursorButton: \"up\",\n        editingElement: multiElement ? this.state.editingElement : null,\n      });\n\n      this.savePointer(childEvent.clientX, childEvent.clientY, \"up\");\n\n      lastPointerUp = null;\n\n      window.removeEventListener(EVENT.POINTER_MOVE, onPointerMove);\n      window.removeEventListener(EVENT.POINTER_UP, onPointerUp);\n\n      if (draggingElement?.type === \"draw\") {\n        this.actionManager.executeAction(actionFinalize);\n        return;\n      }\n      if (isLinearElement(draggingElement)) {\n        if (draggingElement!.points.length > 1) {\n          history.resumeRecording();\n        }\n        if (!draggingOccurred && draggingElement && !multiElement) {\n          const { x, y } = viewportCoordsToSceneCoords(\n            childEvent,\n            this.state,\n            this.canvas,\n            window.devicePixelRatio,\n          );\n          mutateElement(draggingElement, {\n            points: [\n              ...draggingElement.points,\n              [x - draggingElement.x, y - draggingElement.y],\n            ],\n          });\n          this.setState({\n            multiElement: draggingElement,\n            editingElement: this.state.draggingElement,\n          });\n        } else if (draggingOccurred && !multiElement) {\n          if (!elementLocked) {\n            resetCursor();\n            this.setState((prevState) => ({\n              draggingElement: null,\n              elementType: \"selection\",\n              selectedElementIds: {\n                ...prevState.selectedElementIds,\n                [this.state.draggingElement!.id]: true,\n              },\n            }));\n          } else {\n            this.setState((prevState) => ({\n              draggingElement: null,\n              selectedElementIds: {\n                ...prevState.selectedElementIds,\n                [this.state.draggingElement!.id]: true,\n              },\n            }));\n          }\n        }\n        return;\n      }\n\n      if (\n        elementType !== \"selection\" &&\n        draggingElement &&\n        isInvisiblySmallElement(draggingElement)\n      ) {\n        // remove invisible element which was added in onPointerDown\n        globalSceneState.replaceAllElements(\n          globalSceneState.getElementsIncludingDeleted().slice(0, -1),\n        );\n        this.setState({\n          draggingElement: null,\n        });\n        return;\n      }\n\n      normalizeDimensions(draggingElement);\n\n      if (resizingElement) {\n        history.resumeRecording();\n      }\n\n      if (resizingElement && isInvisiblySmallElement(resizingElement)) {\n        globalSceneState.replaceAllElements(\n          globalSceneState\n            .getElementsIncludingDeleted()\n            .filter((el) => el.id !== resizingElement.id),\n        );\n      }\n\n      // If click occurred on already selected element\n      // it is needed to remove selection from other elements\n      // or if SHIFT or META key pressed remove selection\n      // from hitted element\n      //\n      // If click occurred and elements were dragged or some element\n      // was added to selection (on pointerdown phase) we need to keep\n      // selection unchanged\n      if (hitElement && !draggingOccurred && !hitElementWasAddedToSelection) {\n        if (childEvent.shiftKey) {\n          this.setState((prevState) => ({\n            selectedElementIds: {\n              ...prevState.selectedElementIds,\n              [hitElement!.id]: false,\n            },\n          }));\n        } else {\n          this.setState((_prevState) => ({\n            selectedElementIds: { [hitElement!.id]: true },\n          }));\n        }\n      }\n\n      if (draggingElement === null) {\n        // if no element is clicked, clear the selection and redraw\n        this.setState({ selectedElementIds: {} });\n        return;\n      }\n\n      if (!elementLocked) {\n        this.setState((prevState) => ({\n          selectedElementIds: {\n            ...prevState.selectedElementIds,\n            [draggingElement.id]: true,\n          },\n        }));\n      }\n\n      if (\n        elementType !== \"selection\" ||\n        isSomeElementSelected(globalSceneState.getElements(), this.state)\n      ) {\n        history.resumeRecording();\n      }\n\n      if (!elementLocked) {\n        resetCursor();\n        this.setState({\n          draggingElement: null,\n          elementType: \"selection\",\n        });\n      } else {\n        this.setState({\n          draggingElement: null,\n        });\n      }\n    });\n\n    lastPointerUp = onPointerUp;\n\n    window.addEventListener(EVENT.POINTER_MOVE, onPointerMove);\n    window.addEventListener(EVENT.POINTER_UP, onPointerUp);\n  };\n\n  private handleCanvasRef = (canvas: HTMLCanvasElement) => {\n    // canvas is null when unmounting\n    if (canvas !== null) {\n      this.canvas = canvas;\n      this.rc = rough.canvas(this.canvas);\n\n      this.canvas.addEventListener(EVENT.WHEEL, this.handleWheel, {\n        passive: false,\n      });\n      this.canvas.addEventListener(EVENT.TOUCH_START, this.onTapStart);\n    } else {\n      this.canvas?.removeEventListener(EVENT.WHEEL, this.handleWheel);\n      this.canvas?.removeEventListener(EVENT.TOUCH_START, this.onTapStart);\n    }\n  };\n\n  private handleCanvasOnDrop = (event: React.DragEvent<HTMLCanvasElement>) => {\n    const file = event.dataTransfer?.files[0];\n    if (\n      file?.type === \"application/json\" ||\n      file?.name.endsWith(\".excalidraw\")\n    ) {\n      this.setState({ isLoading: true });\n      loadFromBlob(file)\n        .then(({ elements, appState }) =>\n          this.syncActionResult({\n            elements,\n            appState: {\n              ...(appState || this.state),\n              isLoading: false,\n            },\n            commitToHistory: false,\n          }),\n        )\n        .catch((error) => {\n          this.setState({ isLoading: false, errorMessage: error.message });\n        });\n    } else {\n      this.setState({\n        isLoading: false,\n        errorMessage: t(\"alerts.couldNotLoadInvalidFile\"),\n      });\n    }\n  };\n\n  private handleCanvasContextMenu = (\n    event: React.PointerEvent<HTMLCanvasElement>,\n  ) => {\n    event.preventDefault();\n\n    const { x, y } = viewportCoordsToSceneCoords(\n      event,\n      this.state,\n      this.canvas,\n      window.devicePixelRatio,\n    );\n\n    const elements = globalSceneState.getElements();\n    const element = getElementAtPosition(\n      elements,\n      this.state,\n      x,\n      y,\n      this.state.zoom,\n    );\n    if (!element) {\n      ContextMenu.push({\n        options: [\n          navigator.clipboard && {\n            label: t(\"labels.paste\"),\n            action: () => this.pasteFromClipboard(null),\n          },\n          probablySupportsClipboardBlob &&\n            elements.length > 0 && {\n              label: t(\"labels.copyAsPng\"),\n              action: this.copyToClipboardAsPng,\n            },\n          probablySupportsClipboardWriteText &&\n            elements.length > 0 && {\n              label: t(\"labels.copyAsSvg\"),\n              action: this.copyToClipboardAsSvg,\n            },\n          ...this.actionManager.getContextMenuItems((action) =>\n            this.canvasOnlyActions.includes(action.name),\n          ),\n        ],\n        top: event.clientY,\n        left: event.clientX,\n      });\n      return;\n    }\n\n    if (!this.state.selectedElementIds[element.id]) {\n      this.setState({ selectedElementIds: { [element.id]: true } });\n    }\n\n    ContextMenu.push({\n      options: [\n        navigator.clipboard && {\n          label: t(\"labels.copy\"),\n          action: this.copyAll,\n        },\n        navigator.clipboard && {\n          label: t(\"labels.paste\"),\n          action: () => this.pasteFromClipboard(null),\n        },\n        probablySupportsClipboardBlob && {\n          label: t(\"labels.copyAsPng\"),\n          action: this.copyToClipboardAsPng,\n        },\n        probablySupportsClipboardWriteText && {\n          label: t(\"labels.copyAsSvg\"),\n          action: this.copyToClipboardAsSvg,\n        },\n        ...this.actionManager.getContextMenuItems(\n          (action) => !this.canvasOnlyActions.includes(action.name),\n        ),\n      ],\n      top: event.clientY,\n      left: event.clientX,\n    });\n  };\n\n  private handleWheel = withBatchedUpdates((event: WheelEvent) => {\n    console.log(\"handlewheel\");\n    event.preventDefault();\n    const { deltaX, deltaY } = event;\n\n    // note that event.ctrlKey is necessary to handle pinch zooming\n    if (event.metaKey || event.ctrlKey) {\n      const sign = Math.sign(deltaY);\n      const MAX_STEP = 10;\n      let delta = Math.abs(deltaY);\n      if (delta > MAX_STEP) {\n        delta = MAX_STEP;\n      }\n      delta *= sign;\n      this.setState(({ zoom }) => ({\n        zoom: getNormalizedZoom(zoom - delta / 100),\n      }));\n      return;\n    }\n\n    // scroll horizontally when shift pressed\n    if (event.shiftKey) {\n      this.setState(({ zoom, scrollX }) => ({\n        // on Mac, shift+wheel tends to result in deltaX\n        scrollX: normalizeScroll(scrollX - (deltaY || deltaX) / zoom),\n      }));\n      return;\n    }\n\n    this.setState(({ zoom, scrollX, scrollY }) => ({\n      scrollX: normalizeScroll(scrollX - deltaX / zoom),\n      scrollY: normalizeScroll(scrollY - deltaY / zoom),\n    }));\n  });\n\n  private getTextWysiwygSnappedToCenterPosition(\n    x: number,\n    y: number,\n    state: {\n      scrollX: FlooredNumber;\n      scrollY: FlooredNumber;\n      zoom: number;\n    },\n    canvas: HTMLCanvasElement | null,\n    scale: number,\n  ) {\n    const elementClickedInside = getElementContainingPosition(\n      globalSceneState.getElementsIncludingDeleted(),\n      x,\n      y,\n    );\n    if (elementClickedInside) {\n      const elementCenterX =\n        elementClickedInside.x + elementClickedInside.width / 2;\n      const elementCenterY =\n        elementClickedInside.y + elementClickedInside.height / 2;\n      const distanceToCenter = Math.hypot(\n        x - elementCenterX,\n        y - elementCenterY,\n      );\n      const isSnappedToCenter =\n        distanceToCenter < TEXT_TO_CENTER_SNAP_THRESHOLD;\n      if (isSnappedToCenter) {\n        const { x: wysiwygX, y: wysiwygY } = sceneCoordsToViewportCoords(\n          { sceneX: elementCenterX, sceneY: elementCenterY },\n          state,\n          canvas,\n          scale,\n        );\n        return { wysiwygX, wysiwygY, elementCenterX, elementCenterY };\n      }\n    }\n  }\n\n  private savePointer = (x: number, y: number, button: \"up\" | \"down\") => {\n    if (!x || !y) {\n      return;\n    }\n    const pointerCoords = viewportCoordsToSceneCoords(\n      { clientX: x, clientY: y },\n      this.state,\n      this.canvas,\n      window.devicePixelRatio,\n    );\n\n    if (isNaN(pointerCoords.x) || isNaN(pointerCoords.y)) {\n      // sometimes the pointer goes off screen\n      return;\n    }\n    this.portal.socket &&\n      // do not broadcast when more than 1 pointer since that shows flickering on the other side\n      gesture.pointers.size < 2 &&\n      this.broadcastMouseLocation({\n        pointerCoords,\n        button,\n      });\n  };\n\n  private resetShouldCacheIgnoreZoomDebounced = debounce(() => {\n    this.setState({ shouldCacheIgnoreZoom: false });\n  }, 300);\n\n  private saveDebounced = debounce(() => {\n    console.log(\"saveDeboucned\")\n    saveToLocalStorage(\n      globalSceneState.getElementsIncludingDeleted(),\n      this.state,\n    );\n  }, 300);\n}\n\n// -----------------------------------------------------------------------------\n// TEST HOOKS\n// -----------------------------------------------------------------------------\n\ndeclare global {\n  interface Window {\n    h: {\n      elements: readonly ExcalidrawElement[];\n      state: AppState;\n      setState: React.Component<any, AppState>[\"setState\"];\n      history: SceneHistory;\n      app: InstanceType<typeof App>;\n    };\n  }\n}\n\nif (\n  process.env.NODE_ENV === ENV.TEST ||\n  process.env.NODE_ENV === ENV.DEVELOPMENT\n) {\n  window.h = {} as Window[\"h\"];\n\n  Object.defineProperties(window.h, {\n    elements: {\n      get() {\n        return globalSceneState.getElementsIncludingDeleted();\n      },\n      set(elements: ExcalidrawElement[]) {\n        return globalSceneState.replaceAllElements(elements);\n      },\n    },\n    history: {\n      get() {\n        return history;\n      },\n    },\n  });\n}\n\nexport default App;\n","// time in milliseconds\nexport const TAP_TWICE_TIMEOUT = 300;\nexport const INITAL_SCENE_UPDATE_TIMEOUT = 5000;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.info(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n\n              // console.log(\n              //   \"New content is available and will be used when all \" +\n              //     \"tabs for this page are closed.\",\n              // );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n\n              // console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      // console.log(\n      //   \"No internet connection found. App is running in offline mode.\",\n      // );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as Sentry from \"@sentry/browser\";\nimport * as SentryIntegrations from \"@sentry/integrations\";\n\nimport { EVENT } from \"./constants\";\nimport { TopErrorBoundary } from \"./components/TopErrorBoundary\";\nimport { IsMobileProvider } from \"./is-mobile\";\nimport App from \"./components/App\";\nimport { register as registerServiceWorker } from \"./serviceWorker\";\n\nimport \"./css/styles.scss\";\n\n// On Apple mobile devices add the proprietary app icon and splashscreen markup.\n// No one should have to do this manually, and eventually this annoyance will\n// go away once https://bugs.webkit.org/show_bug.cgi?id=183937 is fixed.\nif (\n  /\\b(iPad|iPhone|iPod)\\b/.test(navigator.userAgent) &&\n  !matchMedia(\"(display-mode: standalone)\").matches\n) {\n  import(\"pwacompat\");\n}\n\nconst SentryEnvHostnameMap: { [key: string]: string } = {\n  \"excalidraw.com\": \"production\",\n  \"now.sh\": \"staging\",\n};\n\nconst onlineEnv = Object.keys(SentryEnvHostnameMap).find(\n  (item) => window.location.hostname.indexOf(item) >= 0,\n);\n\nSentry.init({\n  // Disable Sentry locally to avoid noise\n  dsn: onlineEnv\n    ? \"https://7bfc596a5bf945eda6b660d3015a5460@sentry.io/5179260\"\n    : undefined,\n  environment: onlineEnv ? SentryEnvHostnameMap[onlineEnv] : undefined,\n  release: process.env.REACT_APP_GIT_SHA,\n  ignoreErrors: [\n    \"undefined is not an object (evaluating 'window.__pad.performLoop')\", // Only happens on Safari, but spams our servers. Doesn't break anything\n  ],\n  integrations: [\n    new SentryIntegrations.CaptureConsole({\n      levels: [\"error\"],\n    }),\n  ],\n});\n\n// Block pinch-zooming on iOS outside of the content area\ndocument.addEventListener(\n  \"touchmove\",\n  function (event) {\n    // @ts-ignore\n    if (event.scale !== 1) {\n      event.preventDefault();\n    }\n  },\n  { passive: false },\n);\n\nconst rootElement = document.getElementById(\"root\");\n\nReactDOM.render(\n  <TopErrorBoundary>\n    <IsMobileProvider>\n      <App />\n    </IsMobileProvider>\n  </TopErrorBoundary>,\n  rootElement,\n);\n\nregisterServiceWorker({\n  onUpdate: (registration) => {\n    const waitingServiceWorker = registration.waiting;\n    if (waitingServiceWorker) {\n      waitingServiceWorker.addEventListener(\n        EVENT.STATE_CHANGE,\n        (event: Event) => {\n          const target = event.target as ServiceWorker;\n          const state = target.state as ServiceWorkerState;\n          if (state === \"activated\") {\n            window.location.reload();\n          }\n        },\n      );\n      waitingServiceWorker.postMessage({ type: \"SKIP_WAITING\" });\n    }\n  },\n});\n"],"sourceRoot":""}