(this.webpackJsonpundefined=this.webpackJsonpundefined||[]).push([[7],{142:function(t,e,r){"use strict";r.r(e);const i=async(t,e,r=[])=>{var a,n=!0,l=!1;try{for(var o,s,c=function(t){var e;if("undefined"!==typeof Symbol){if(Symbol.asyncIterator&&null!=(e=t[Symbol.asyncIterator]))return e.call(t);if(Symbol.iterator&&null!=(e=t[Symbol.iterator]))return e.call(t)}throw new TypeError("Object is not async iterable")}(t);n=(o=await c.next()).done,s=await o.value,!n;n=!0){const t=s;t.isFile?r.push(await t.getFile()):t.isDirectory&&e&&await i(await t.getEntries(),e,r)}}catch(u){l=!0,a=u}finally{try{n||null==c.return||await c.return()}finally{if(l)throw a}}return r};e.default=async(t={})=>{t.recursive=t.recursive||!1,t.multiple=t.multiple||!1;try{const e=await window.chooseFileSystemEntries({type:"open-directory",multiple:t.multiple}),r=await e.getEntries();return await i(r,t.recursive)}catch(e){if("TypeError"===e.name)try{const e=await window.chooseFileSystemEntries({type:"openDirectory",multiple:t.multiple}),r=await e.getEntries();return await i(r,t.recursive)}catch(i){throw i}throw e}}}}]);
//# sourceMappingURL=7.7eddb5ef.chunk.js.map